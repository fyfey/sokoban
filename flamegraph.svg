<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1686" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1669.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1669.00"> </text><svg id="frames" x="10" width="1180" total_samples="3562"><g><title>rust-sokoban`std::rt::init (1 samples, 0.03%)</title><rect x="0.0000%" y="1557" width="0.0281%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1567.50"></text></g><g><title>rust-sokoban`&lt;shred::world::World as specs::world::world_ext::WorldExt&gt;::new (1 samples, 0.03%)</title><rect x="0.0281%" y="1493" width="0.0281%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2781%" y="1503.50"></text></g><g><title>rust-sokoban`&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="0.0281%" y="1477" width="0.0281%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2781%" y="1487.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="0.0561%" y="1477" width="0.0281%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.3061%" y="1487.50"></text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Host as cpal::traits::HostTrait&gt;::default_output_device (1 samples, 0.03%)</title><rect x="0.0842%" y="1429" width="0.0281%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1439.50"></text></g><g><title>rust-sokoban`&lt;cpal::host::coreaudio::macos::Host as cpal::traits::HostTrait&gt;::default_output_device (1 samples, 0.03%)</title><rect x="0.0842%" y="1413" width="0.0281%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1423.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::enumerate::default_output_device (1 samples, 0.03%)</title><rect x="0.0842%" y="1397" width="0.0281%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1407.50"></text></g><g><title>CoreAudio`AudioObjectGetPropertyData (1 samples, 0.03%)</title><rect x="0.0842%" y="1381" width="0.0281%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1391.50"></text></g><g><title>CoreAudio`HALSystem::CheckOutInstance (1 samples, 0.03%)</title><rect x="0.0842%" y="1365" width="0.0281%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1375.50"></text></g><g><title>CoreAudio`HALSystem::InitializeDevices (1 samples, 0.03%)</title><rect x="0.0842%" y="1349" width="0.0281%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1359.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.03%)</title><rect x="0.0842%" y="1333" width="0.0281%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1343.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.03%)</title><rect x="0.0842%" y="1317" width="0.0281%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1327.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.03%)</title><rect x="0.0842%" y="1301" width="0.0281%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1311.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.03%)</title><rect x="0.0842%" y="1285" width="0.0281%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1295.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInBundle (1 samples, 0.03%)</title><rect x="0.0842%" y="1269" width="0.0281%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1279.50"></text></g><g><title>CoreFoundation`_CFBundleCopyUserLanguages (1 samples, 0.03%)</title><rect x="0.0842%" y="1253" width="0.0281%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1263.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.03%)</title><rect x="0.0842%" y="1237" width="0.0281%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1247.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.03%)</title><rect x="0.0842%" y="1221" width="0.0281%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1231.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.03%)</title><rect x="0.0842%" y="1205" width="0.0281%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1215.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.03%)</title><rect x="0.0842%" y="1189" width="0.0281%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1199.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchLists:] (1 samples, 0.03%)</title><rect x="0.0842%" y="1173" width="0.0281%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1183.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke.192 (1 samples, 0.03%)</title><rect x="0.0842%" y="1157" width="0.0281%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1167.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource addSuiteSourceForIdentifier:user:] (1 samples, 0.03%)</title><rect x="0.0842%" y="1141" width="0.0281%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1151.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSuiteSearchListForIdentifier:user:locked:perform:] (1 samples, 0.03%)</title><rect x="0.0842%" y="1125" width="0.0281%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1135.50"></text></g><g><title>CoreFoundation`__93-[_CFXPreferences(SearchListAdditions) withSuiteSearchListForIdentifier:user:locked:perform:]_block_invoke (1 samples, 0.03%)</title><rect x="0.0842%" y="1109" width="0.0281%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1119.50"></text></g><g><title>CoreFoundation`CFStringCreateWithFormat (1 samples, 0.03%)</title><rect x="0.0842%" y="1093" width="0.0281%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1103.50"></text></g><g><title>CoreFoundation`_CFStringCreateWithFormatAndArgumentsReturningMetadata (1 samples, 0.03%)</title><rect x="0.0842%" y="1077" width="0.0281%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1087.50"></text></g><g><title>CoreFoundation`__CFStringAppendFormatCore (1 samples, 0.03%)</title><rect x="0.0842%" y="1061" width="0.0281%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1071.50"></text></g><g><title>CoreFoundation`__CFStringAppendBytes (1 samples, 0.03%)</title><rect x="0.0842%" y="1045" width="0.0281%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_good_size (1 samples, 0.03%)</title><rect x="0.0842%" y="1029" width="0.0281%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="0.3342%" y="1039.50"></text></g><g><title>AudioToolboxCore`DYLD-STUB$$objc_autoreleasePoolPush (1 samples, 0.03%)</title><rect x="0.1123%" y="1269" width="0.0281%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="0.3623%" y="1279.50"></text></g><g><title>AudioToolboxCore`AudioComponentVector::createWithSerializedData (1 samples, 0.03%)</title><rect x="0.1404%" y="1045" width="0.0281%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="0.3904%" y="1055.50"></text></g><g><title>Foundation`+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:] (1 samples, 0.03%)</title><rect x="0.1404%" y="1029" width="0.0281%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="0.3904%" y="1039.50"></text></g><g><title>Foundation`+[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:] (1 samples, 0.03%)</title><rect x="0.1404%" y="1013" width="0.0281%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="0.3904%" y="1023.50"></text></g><g><title>Foundation`-[NSCoder decodeTopLevelObjectOfClasses:forKey:error:] (1 samples, 0.03%)</title><rect x="0.1404%" y="997" width="0.0281%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="0.3904%" y="1007.50"></text></g><g><title>Foundation`-[NSCoder __tryDecodeObjectForKey:error:decodeBlock:] (1 samples, 0.03%)</title><rect x="0.1404%" y="981" width="0.0281%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="0.3904%" y="991.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.03%)</title><rect x="0.1404%" y="965" width="0.0281%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="0.3904%" y="975.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.03%)</title><rect x="0.1404%" y="949" width="0.0281%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="0.3904%" y="959.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.03%)</title><rect x="0.1404%" y="933" width="0.0281%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="0.3904%" y="943.50"></text></g><g><title>Foundation`_decodeObjectBinary (1 samples, 0.03%)</title><rect x="0.1404%" y="917" width="0.0281%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="0.3904%" y="927.50"></text></g><g><title>AudioToolboxCore`-[_ACComponentVector initWithCoder:] (1 samples, 0.03%)</title><rect x="0.1404%" y="901" width="0.0281%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="0.3904%" y="911.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.03%)</title><rect x="0.1404%" y="885" width="0.0281%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="0.3904%" y="895.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.03%)</title><rect x="0.1404%" y="869" width="0.0281%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="0.3904%" y="879.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.03%)</title><rect x="0.1404%" y="853" width="0.0281%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="1"/><text x="0.3904%" y="863.50"></text></g><g><title>Foundation`_decodeObjectBinary (1 samples, 0.03%)</title><rect x="0.1404%" y="837" width="0.0281%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="0.3904%" y="847.50"></text></g><g><title>Foundation`-[NSCoder _validateAllowedClass:forKey:allowingInvocations:] (1 samples, 0.03%)</title><rect x="0.1404%" y="821" width="0.0281%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="0.3904%" y="831.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver _validateAllowedClassesContainsClass:forKey:] (1 samples, 0.03%)</title><rect x="0.1404%" y="805" width="0.0281%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="1"/><text x="0.3904%" y="815.50"></text></g><g><title>Foundation`-[NSCoder _walkAllowedClassListLookingForClass:forKey:allowedClasses:strictModeEnabled:alwaysEnforceExplicitSubclasses:specialCaseObject:] (1 samples, 0.03%)</title><rect x="0.1404%" y="789" width="0.0281%" height="15" fill="rgb(250,191,14)" fg:x="5" fg:w="1"/><text x="0.3904%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="0.1404%" y="773" width="0.0281%" height="15" fill="rgb(239,60,40)" fg:x="5" fg:w="1"/><text x="0.3904%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="0.1404%" y="757" width="0.0281%" height="15" fill="rgb(206,27,48)" fg:x="5" fg:w="1"/><text x="0.3904%" y="767.50"></text></g><g><title>Foundation`___NSCoderEnforceFirstPartySecurityRules_block_invoke (1 samples, 0.03%)</title><rect x="0.1404%" y="741" width="0.0281%" height="15" fill="rgb(225,35,8)" fg:x="5" fg:w="1"/><text x="0.3904%" y="751.50"></text></g><g><title>Foundation`-[NSString rangeOfString:options:range:locale:] (1 samples, 0.03%)</title><rect x="0.1404%" y="725" width="0.0281%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="0.3904%" y="735.50"></text></g><g><title>Foundation`-[NSString(NSRegularExpressionSupport) _rangeOfRegularExpressionPattern:options:range:locale:] (1 samples, 0.03%)</title><rect x="0.1404%" y="709" width="0.0281%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="0.3904%" y="719.50"></text></g><g><title>Foundation`-[NSRegularExpression initWithPattern:options:error:] (1 samples, 0.03%)</title><rect x="0.1404%" y="693" width="0.0281%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="1"/><text x="0.3904%" y="703.50"></text></g><g><title>libicucore.A.dylib`uregex_open (1 samples, 0.03%)</title><rect x="0.1404%" y="677" width="0.0281%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="1"/><text x="0.3904%" y="687.50"></text></g><g><title>libicucore.A.dylib`icu::RegexPattern::compile (1 samples, 0.03%)</title><rect x="0.1404%" y="661" width="0.0281%" height="15" fill="rgb(251,118,11)" fg:x="5" fg:w="1"/><text x="0.3904%" y="671.50"></text></g><g><title>libicucore.A.dylib`icu::RegexCompile::RegexCompile (1 samples, 0.03%)</title><rect x="0.1404%" y="645" width="0.0281%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="1"/><text x="0.3904%" y="655.50"></text></g><g><title>libicucore.A.dylib`0x0000000190bb8048 (1 samples, 0.03%)</title><rect x="0.1404%" y="629" width="0.0281%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="1"/><text x="0.3904%" y="639.50"></text></g><g><title>libicucore.A.dylib`0x0000000190bb80e0 (1 samples, 0.03%)</title><rect x="0.1404%" y="613" width="0.0281%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="1"/><text x="0.3904%" y="623.50"></text></g><g><title>libicucore.A.dylib`0x0000000190bb7a8c (1 samples, 0.03%)</title><rect x="0.1404%" y="597" width="0.0281%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="1"/><text x="0.3904%" y="607.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (1 samples, 0.03%)</title><rect x="0.1404%" y="581" width="0.0281%" height="15" fill="rgb(248,47,43)" fg:x="5" fg:w="1"/><text x="0.3904%" y="591.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPatternIgnoreSpace (1 samples, 0.03%)</title><rect x="0.1404%" y="565" width="0.0281%" height="15" fill="rgb(221,10,30)" fg:x="5" fg:w="1"/><text x="0.3904%" y="575.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern(icu::RuleCharacterIterator&amp;, icu::SymbolTable const*, icu::UnicodeString&amp;, unsigned int, icu::UnicodeSet&amp; (icu::UnicodeSet::*) (1 samples, 0.03%)</title><rect x="0.1404%" y="549" width="0.0281%" height="15" fill="rgb(210,229,1)" fg:x="5" fg:w="1"/><text x="0.3904%" y="559.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPropertyPattern (1 samples, 0.03%)</title><rect x="0.1404%" y="533" width="0.0281%" height="15" fill="rgb(222,148,37)" fg:x="5" fg:w="1"/><text x="0.3904%" y="543.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPropertyPattern (1 samples, 0.03%)</title><rect x="0.1404%" y="517" width="0.0281%" height="15" fill="rgb(234,67,33)" fg:x="5" fg:w="1"/><text x="0.3904%" y="527.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPropertyAlias (1 samples, 0.03%)</title><rect x="0.1404%" y="501" width="0.0281%" height="15" fill="rgb(247,98,35)" fg:x="5" fg:w="1"/><text x="0.3904%" y="511.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyIntPropertyValue (1 samples, 0.03%)</title><rect x="0.1404%" y="485" width="0.0281%" height="15" fill="rgb(247,138,52)" fg:x="5" fg:w="1"/><text x="0.3904%" y="495.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyFilter(signed char (*) (1 samples, 0.03%)</title><rect x="0.1404%" y="469" width="0.0281%" height="15" fill="rgb(213,79,30)" fg:x="5" fg:w="1"/><text x="0.3904%" y="479.50"></text></g><g><title>AudioToolboxCore`AudioComponentFindNext (3 samples, 0.08%)</title><rect x="0.1123%" y="1285" width="0.0842%" height="15" fill="rgb(246,177,23)" fg:x="4" fg:w="3"/><text x="0.3623%" y="1295.50"></text></g><g><title>AudioToolboxCore`GlobalComponentPluginMgr() (2 samples, 0.06%)</title><rect x="0.1404%" y="1269" width="0.0561%" height="15" fill="rgb(230,62,27)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1279.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_NSExtension::initPhase2 (2 samples, 0.06%)</title><rect x="0.1404%" y="1253" width="0.0561%" height="15" fill="rgb(216,154,8)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1263.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::connectToRegistrationServer (2 samples, 0.06%)</title><rect x="0.1404%" y="1237" width="0.0561%" height="15" fill="rgb(244,35,45)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1247.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::retrieveComponents (2 samples, 0.06%)</title><rect x="0.1404%" y="1221" width="0.0561%" height="15" fill="rgb(251,115,12)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1231.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (2 samples, 0.06%)</title><rect x="0.1404%" y="1205" width="0.0561%" height="15" fill="rgb(240,54,50)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1215.50"></text></g><g><title>CoreFoundation`___forwarding___ (2 samples, 0.06%)</title><rect x="0.1404%" y="1189" width="0.0561%" height="15" fill="rgb(233,84,52)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1199.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (2 samples, 0.06%)</title><rect x="0.1404%" y="1173" width="0.0561%" height="15" fill="rgb(207,117,47)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1183.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (2 samples, 0.06%)</title><rect x="0.1404%" y="1157" width="0.0561%" height="15" fill="rgb(249,43,39)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1167.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (2 samples, 0.06%)</title><rect x="0.1404%" y="1141" width="0.0561%" height="15" fill="rgb(209,38,44)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1151.50"></text></g><g><title>Foundation`__NSXPCCONNECTION_IS_CALLING_OUT_TO_REPLY_BLOCK__ (2 samples, 0.06%)</title><rect x="0.1404%" y="1125" width="0.0561%" height="15" fill="rgb(236,212,23)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1135.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (2 samples, 0.06%)</title><rect x="0.1404%" y="1109" width="0.0561%" height="15" fill="rgb(242,79,21)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1119.50"></text></g><g><title>CoreFoundation`__invoking___ (2 samples, 0.06%)</title><rect x="0.1404%" y="1093" width="0.0561%" height="15" fill="rgb(211,96,35)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1103.50"></text></g><g><title>AudioToolboxCore`invocation function for block in AudioComponentMgr_RegistrarService::retrieveComponents (2 samples, 0.06%)</title><rect x="0.1404%" y="1077" width="0.0561%" height="15" fill="rgb(253,215,40)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1087.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::mergeServerRegistrations (2 samples, 0.06%)</title><rect x="0.1404%" y="1061" width="0.0561%" height="15" fill="rgb(211,81,21)" fg:x="5" fg:w="2"/><text x="0.3904%" y="1071.50"></text></g><g><title>AudioToolboxCore`AudioComponentVector::remove_and_erase_if(std::__1::function&lt;bool  (1 samples, 0.03%)</title><rect x="0.1684%" y="1045" width="0.0281%" height="15" fill="rgb(208,190,38)" fg:x="6" fg:w="1"/><text x="0.4184%" y="1055.50"></text></g><g><title>AudioToolboxCore`std::__1::__function::__func&lt;AudioComponentMgr_RegistrarService::mergeServerRegistrations(AudioComponentVector&amp;, NSData*, NSArray*)::$_1, std::__1::allocator&lt;AudioComponentMgr_RegistrarService::mergeServerRegistrations(AudioComponentVector&amp;, NSData*, NSArray*)::$_1&gt;, bool (APComponent&amp;)&gt;::operator() (1 samples, 0.03%)</title><rect x="0.1684%" y="1029" width="0.0281%" height="15" fill="rgb(235,213,38)" fg:x="6" fg:w="1"/><text x="0.4184%" y="1039.50"></text></g><g><title>liboah.dylib`rosetta_is_translation_available_on_volume (1 samples, 0.03%)</title><rect x="0.1684%" y="1013" width="0.0281%" height="15" fill="rgb(237,122,38)" fg:x="6" fg:w="1"/><text x="0.4184%" y="1023.50"></text></g><g><title>libc++.1.dylib`std::__1::__fs::filesystem::__status (1 samples, 0.03%)</title><rect x="0.1684%" y="997" width="0.0281%" height="15" fill="rgb(244,218,35)" fg:x="6" fg:w="1"/><text x="0.4184%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`stat (1 samples, 0.03%)</title><rect x="0.1684%" y="981" width="0.0281%" height="15" fill="rgb(240,68,47)" fg:x="6" fg:w="1"/><text x="0.4184%" y="991.50"></text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (4 samples, 0.11%)</title><rect x="0.1123%" y="1397" width="0.1123%" height="15" fill="rgb(210,16,53)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1407.50"></text></g><g><title>rust-sokoban`&lt;cpal::host::coreaudio::macos::Device as cpal::traits::DeviceTrait&gt;::default_output_config (4 samples, 0.11%)</title><rect x="0.1123%" y="1381" width="0.1123%" height="15" fill="rgb(235,124,12)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1391.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::Device::default_output_config (4 samples, 0.11%)</title><rect x="0.1123%" y="1365" width="0.1123%" height="15" fill="rgb(224,169,11)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1375.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::Device::default_config (4 samples, 0.11%)</title><rect x="0.1123%" y="1349" width="0.1123%" height="15" fill="rgb(250,166,2)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1359.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::audio_unit_from_device (4 samples, 0.11%)</title><rect x="0.1123%" y="1333" width="0.1123%" height="15" fill="rgb(242,216,29)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1343.50"></text></g><g><title>rust-sokoban`coreaudio::audio_unit::AudioUnit::new (4 samples, 0.11%)</title><rect x="0.1123%" y="1317" width="0.1123%" height="15" fill="rgb(230,116,27)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1327.50"></text></g><g><title>rust-sokoban`coreaudio::audio_unit::AudioUnit::new_with_flags (4 samples, 0.11%)</title><rect x="0.1123%" y="1301" width="0.1123%" height="15" fill="rgb(228,99,48)" fg:x="4" fg:w="4"/><text x="0.3623%" y="1311.50"></text></g><g><title>AudioToolboxCore`AudioComponentInstanceNew (1 samples, 0.03%)</title><rect x="0.1965%" y="1285" width="0.0281%" height="15" fill="rgb(253,11,6)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1295.50"></text></g><g><title>AudioToolboxCore`Synchronously (1 samples, 0.03%)</title><rect x="0.1965%" y="1269" width="0.0281%" height="15" fill="rgb(247,143,39)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1279.50"></text></g><g><title>AudioToolboxCore`__AudioComponentInstanceNew_block_invoke (1 samples, 0.03%)</title><rect x="0.1965%" y="1253" width="0.0281%" height="15" fill="rgb(236,97,10)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1263.50"></text></g><g><title>AudioToolboxCore`instantiate(OpaqueAudioComponent*, unsigned int, bool, void (OpaqueAudioComponentInstance*, int) block_pointer) (1 samples, 0.03%)</title><rect x="0.1965%" y="1237" width="0.0281%" height="15" fill="rgb(233,208,19)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1247.50"></text></g><g><title>AudioToolboxCore`APComponent::newInstance(unsigned int, bool, void  (1 samples, 0.03%)</title><rect x="0.1965%" y="1221" width="0.0281%" height="15" fill="rgb(216,164,2)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1231.50"></text></g><g><title>AudioToolboxCore`APComponent_FromBundle_Loadable::ResolveFactoryFunction (1 samples, 0.03%)</title><rect x="0.1965%" y="1205" width="0.0281%" height="15" fill="rgb(220,129,5)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1215.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (1 samples, 0.03%)</title><rect x="0.1965%" y="1189" width="0.0281%" height="15" fill="rgb(242,17,10)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1199.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadBundle (1 samples, 0.03%)</title><rect x="0.1965%" y="1173" width="0.0281%" height="15" fill="rgb(242,107,0)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1183.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="0.1965%" y="1157" width="0.0281%" height="15" fill="rgb(251,28,31)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1167.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.03%)</title><rect x="0.1965%" y="1141" width="0.0281%" height="15" fill="rgb(233,223,10)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1151.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="0.1965%" y="1125" width="0.0281%" height="15" fill="rgb(215,21,27)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1135.50"></text></g><g><title>dyld`dyld4::JustInTimeLoader::loadDependents (1 samples, 0.03%)</title><rect x="0.1965%" y="1109" width="0.0281%" height="15" fill="rgb(232,23,21)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1119.50"></text></g><g><title>dyld`dyld3::MachOFile::forEachDependentDylib(void  (1 samples, 0.03%)</title><rect x="0.1965%" y="1093" width="0.0281%" height="15" fill="rgb(244,5,23)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1103.50"></text></g><g><title>dyld`dyld3::MachOFile::forEachLoadCommand(Diagnostics&amp;, void  (1 samples, 0.03%)</title><rect x="0.1965%" y="1077" width="0.0281%" height="15" fill="rgb(226,81,46)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1087.50"></text></g><g><title>dyld`invocation function for block in dyld3::MachOFile::forEachDependentDylib(void  (1 samples, 0.03%)</title><rect x="0.1965%" y="1061" width="0.0281%" height="15" fill="rgb(247,70,30)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1071.50"></text></g><g><title>dyld`invocation function for block in dyld4::JustInTimeLoader::loadDependents (1 samples, 0.03%)</title><rect x="0.1965%" y="1045" width="0.0281%" height="15" fill="rgb(212,68,19)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1055.50"></text></g><g><title>dyld`strcmp (1 samples, 0.03%)</title><rect x="0.1965%" y="1029" width="0.0281%" height="15" fill="rgb(240,187,13)" fg:x="7" fg:w="1"/><text x="0.4465%" y="1039.50"></text></g><g><title>rust-sokoban`ggez::audio::RodioAudioContext::new (6 samples, 0.17%)</title><rect x="0.0842%" y="1461" width="0.1684%" height="15" fill="rgb(223,113,26)" fg:x="3" fg:w="6"/><text x="0.3342%" y="1471.50"></text></g><g><title>rust-sokoban`rodio::stream::OutputStream::try_default (6 samples, 0.17%)</title><rect x="0.0842%" y="1445" width="0.1684%" height="15" fill="rgb(206,192,2)" fg:x="3" fg:w="6"/><text x="0.3342%" y="1455.50"></text></g><g><title>rust-sokoban`rodio::stream::OutputStream::try_from_device (5 samples, 0.14%)</title><rect x="0.1123%" y="1429" width="0.1404%" height="15" fill="rgb(241,108,4)" fg:x="4" fg:w="5"/><text x="0.3623%" y="1439.50"></text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (5 samples, 0.14%)</title><rect x="0.1123%" y="1413" width="0.1404%" height="15" fill="rgb(247,173,49)" fg:x="4" fg:w="5"/><text x="0.3623%" y="1423.50"></text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format (1 samples, 0.03%)</title><rect x="0.2246%" y="1397" width="0.0281%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1407.50"></text></g><g><title>rust-sokoban`cpal::traits::DeviceTrait::build_output_stream (1 samples, 0.03%)</title><rect x="0.2246%" y="1381" width="0.0281%" height="15" fill="rgb(245,159,27)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (1 samples, 0.03%)</title><rect x="0.2246%" y="1365" width="0.0281%" height="15" fill="rgb(245,172,44)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1375.50"></text></g><g><title>rust-sokoban`&lt;cpal::host::coreaudio::macos::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (1 samples, 0.03%)</title><rect x="0.2246%" y="1349" width="0.0281%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1359.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::Device::build_output_stream_raw (1 samples, 0.03%)</title><rect x="0.2246%" y="1333" width="0.0281%" height="15" fill="rgb(205,117,38)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1343.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::audio_unit_from_device (1 samples, 0.03%)</title><rect x="0.2246%" y="1317" width="0.0281%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1327.50"></text></g><g><title>rust-sokoban`coreaudio::audio_unit::AudioUnit::new (1 samples, 0.03%)</title><rect x="0.2246%" y="1301" width="0.0281%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1311.50"></text></g><g><title>rust-sokoban`coreaudio::audio_unit::AudioUnit::new_with_flags (1 samples, 0.03%)</title><rect x="0.2246%" y="1285" width="0.0281%" height="15" fill="rgb(217,125,39)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1295.50"></text></g><g><title>AudioToolboxCore`AudioComponentInstanceNew (1 samples, 0.03%)</title><rect x="0.2246%" y="1269" width="0.0281%" height="15" fill="rgb(235,36,10)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1279.50"></text></g><g><title>AudioToolboxCore`Synchronously (1 samples, 0.03%)</title><rect x="0.2246%" y="1253" width="0.0281%" height="15" fill="rgb(251,123,47)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1263.50"></text></g><g><title>AudioToolboxCore`__AudioComponentInstanceNew_block_invoke (1 samples, 0.03%)</title><rect x="0.2246%" y="1237" width="0.0281%" height="15" fill="rgb(221,13,13)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1247.50"></text></g><g><title>AudioToolboxCore`instantiate(OpaqueAudioComponent*, unsigned int, bool, void (OpaqueAudioComponentInstance*, int) block_pointer) (1 samples, 0.03%)</title><rect x="0.2246%" y="1221" width="0.0281%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1231.50"></text></g><g><title>AudioToolboxCore`APComponent::newInstance(unsigned int, bool, void  (1 samples, 0.03%)</title><rect x="0.2246%" y="1205" width="0.0281%" height="15" fill="rgb(211,50,8)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1215.50"></text></g><g><title>CoreAudio`0x0000000103d4a00c (1 samples, 0.03%)</title><rect x="0.2246%" y="1189" width="0.0281%" height="15" fill="rgb(245,182,24)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1199.50"></text></g><g><title>CoreAudio`0x0000000103c512bc (1 samples, 0.03%)</title><rect x="0.2246%" y="1173" width="0.0281%" height="15" fill="rgb(242,14,37)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1183.50"></text></g><g><title>CoreAudio`AudioObjectGetPropertyData (1 samples, 0.03%)</title><rect x="0.2246%" y="1157" width="0.0281%" height="15" fill="rgb(246,228,12)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1167.50"></text></g><g><title>CoreAudio`HALDefaultDeviceProperty::GetData (1 samples, 0.03%)</title><rect x="0.2246%" y="1141" width="0.0281%" height="15" fill="rgb(213,55,15)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1151.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (1 samples, 0.03%)</title><rect x="0.2246%" y="1125" width="0.0281%" height="15" fill="rgb(209,9,3)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1135.50"></text></g><g><title>CoreAudio`HALC_Object_GetPropertyData_DI32 (1 samples, 0.03%)</title><rect x="0.2246%" y="1109" width="0.0281%" height="15" fill="rgb(230,59,30)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="0.2246%" y="1093" width="0.0281%" height="15" fill="rgb(209,121,21)" fg:x="8" fg:w="1"/><text x="0.4746%" y="1103.50"></text></g><g><title>rust-sokoban`gfx_device_gl::info::get_all (1 samples, 0.03%)</title><rect x="0.2527%" y="1349" width="0.0281%" height="15" fill="rgb(220,109,13)" fg:x="9" fg:w="1"/><text x="0.5027%" y="1359.50"></text></g><g><title>rust-sokoban`gfx_device_gl::info::Info::get (1 samples, 0.03%)</title><rect x="0.2527%" y="1333" width="0.0281%" height="15" fill="rgb(232,18,1)" fg:x="9" fg:w="1"/><text x="0.5027%" y="1343.50"></text></g><g><title>rust-sokoban`gfx_device_gl::info::Version::parse (1 samples, 0.03%)</title><rect x="0.2527%" y="1317" width="0.0281%" height="15" fill="rgb(215,41,42)" fg:x="9" fg:w="1"/><text x="0.5027%" y="1327.50"></text></g><g><title>rust-sokoban`core::str::_&lt;impl str&gt;::find (1 samples, 0.03%)</title><rect x="0.2527%" y="1301" width="0.0281%" height="15" fill="rgb(224,123,36)" fg:x="9" fg:w="1"/><text x="0.5027%" y="1311.50"></text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="0.2527%" y="1285" width="0.0281%" height="15" fill="rgb(240,125,3)" fg:x="9" fg:w="1"/><text x="0.5027%" y="1295.50"></text></g><g><title>rust-sokoban`gfx_device_gl::create (3 samples, 0.08%)</title><rect x="0.2527%" y="1381" width="0.0842%" height="15" fill="rgb(205,98,50)" fg:x="9" fg:w="3"/><text x="0.5027%" y="1391.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Device::new (3 samples, 0.08%)</title><rect x="0.2527%" y="1365" width="0.0842%" height="15" fill="rgb(205,185,37)" fg:x="9" fg:w="3"/><text x="0.5027%" y="1375.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::load_with (2 samples, 0.06%)</title><rect x="0.2807%" y="1349" width="0.0561%" height="15" fill="rgb(238,207,15)" fg:x="10" fg:w="2"/><text x="0.5307%" y="1359.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::load_with::_{{closure}} (1 samples, 0.03%)</title><rect x="0.3088%" y="1333" width="0.0281%" height="15" fill="rgb(213,199,42)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1343.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::load_with::do_metaloadfn (1 samples, 0.03%)</title><rect x="0.3088%" y="1317" width="0.0281%" height="15" fill="rgb(235,201,11)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1327.50"></text></g><g><title>rust-sokoban`&lt;glutin::windowed::ContextWrapper&lt;glutin::context::NotCurrent,winit::window::Window&gt; as old_school_gfx_glutin_ext::WindowInitExt&gt;::init_gfx_raw::_{{closure}} (1 samples, 0.03%)</title><rect x="0.3088%" y="1301" width="0.0281%" height="15" fill="rgb(207,46,11)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1311.50"></text></g><g><title>rust-sokoban`glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::get_proc_address (1 samples, 0.03%)</title><rect x="0.3088%" y="1285" width="0.0281%" height="15" fill="rgb(241,35,35)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1295.50"></text></g><g><title>rust-sokoban`glutin::context::Context&lt;glutin::context::PossiblyCurrent&gt;::get_proc_address (1 samples, 0.03%)</title><rect x="0.3088%" y="1269" width="0.0281%" height="15" fill="rgb(243,32,47)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1279.50"></text></g><g><title>rust-sokoban`glutin::platform_impl::platform_impl::Context::get_proc_address (1 samples, 0.03%)</title><rect x="0.3088%" y="1253" width="0.0281%" height="15" fill="rgb(247,202,23)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1263.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnGetSymbolByNameWithSearch (1 samples, 0.03%)</title><rect x="0.3088%" y="1237" width="0.0281%" height="15" fill="rgb(219,102,11)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1247.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.03%)</title><rect x="0.3088%" y="1221" width="0.0281%" height="15" fill="rgb(243,110,44)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1231.50"></text></g><g><title>dyld`dyld4::Allocator::owned (1 samples, 0.03%)</title><rect x="0.3088%" y="1205" width="0.0281%" height="15" fill="rgb(222,74,54)" fg:x="11" fg:w="1"/><text x="0.5588%" y="1215.50"></text></g><g><title>rust-sokoban`core::result::Result&lt;T,E&gt;::map (4 samples, 0.11%)</title><rect x="0.2527%" y="1429" width="0.1123%" height="15" fill="rgb(216,99,12)" fg:x="9" fg:w="4"/><text x="0.5027%" y="1439.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::GlBackendSpec as ggez::graphics::BackendSpec&gt;::init::_{{closure}} (4 samples, 0.11%)</title><rect x="0.2527%" y="1413" width="0.1123%" height="15" fill="rgb(226,22,26)" fg:x="9" fg:w="4"/><text x="0.5027%" y="1423.50"></text></g><g><title>rust-sokoban`&lt;glutin::windowed::ContextWrapper&lt;glutin::context::NotCurrent,winit::window::Window&gt; as old_school_gfx_glutin_ext::WindowInitExt&gt;::init_gfx_raw (4 samples, 0.11%)</title><rect x="0.2527%" y="1397" width="0.1123%" height="15" fill="rgb(217,163,10)" fg:x="9" fg:w="4"/><text x="0.5027%" y="1407.50"></text></g><g><title>rust-sokoban`glutin::windowed::ContextWrapper&lt;T,W&gt;::make_current (1 samples, 0.03%)</title><rect x="0.3369%" y="1381" width="0.0281%" height="15" fill="rgb(213,25,53)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1391.50"></text></g><g><title>rust-sokoban`glutin::context::Context&lt;T&gt;::make_current (1 samples, 0.03%)</title><rect x="0.3369%" y="1365" width="0.0281%" height="15" fill="rgb(252,105,26)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1375.50"></text></g><g><title>rust-sokoban`glutin::platform_impl::platform_impl::Context::make_current (1 samples, 0.03%)</title><rect x="0.3369%" y="1349" width="0.0281%" height="15" fill="rgb(220,39,43)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1359.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (1 samples, 0.03%)</title><rect x="0.3369%" y="1333" width="0.0281%" height="15" fill="rgb(229,68,48)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1343.50"></text></g><g><title>rust-sokoban`&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 0.03%)</title><rect x="0.3369%" y="1317" width="0.0281%" height="15" fill="rgb(252,8,32)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1327.50"></text></g><g><title>AppKit`-[NSOpenGLContext update] (1 samples, 0.03%)</title><rect x="0.3369%" y="1301" width="0.0281%" height="15" fill="rgb(223,20,43)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1311.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (1 samples, 0.03%)</title><rect x="0.3369%" y="1285" width="0.0281%" height="15" fill="rgb(229,81,49)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1295.50"></text></g><g><title>OpenGL`CGLSetVirtualScreen (1 samples, 0.03%)</title><rect x="0.3369%" y="1269" width="0.0281%" height="15" fill="rgb(236,28,36)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1279.50"></text></g><g><title>OpenGL`0x00000001ef984638 (1 samples, 0.03%)</title><rect x="0.3369%" y="1253" width="0.0281%" height="15" fill="rgb(249,185,26)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1263.50"></text></g><g><title>GLEngine`gliAttachDrawableWithOptions (1 samples, 0.03%)</title><rect x="0.3369%" y="1237" width="0.0281%" height="15" fill="rgb(249,174,33)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1247.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldAttachDrawable (1 samples, 0.03%)</title><rect x="0.3369%" y="1221" width="0.0281%" height="15" fill="rgb(233,201,37)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1231.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRDrawable::attachDrawable (1 samples, 0.03%)</title><rect x="0.3369%" y="1205" width="0.0281%" height="15" fill="rgb(221,78,26)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1215.50"></text></g><g><title>OpenGL`0x00000001ef983fdc (1 samples, 0.03%)</title><rect x="0.3369%" y="1189" width="0.0281%" height="15" fill="rgb(250,127,30)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1199.50"></text></g><g><title>SkyLight`SLSGetDisplayOpenGLDisplayAliasMask (1 samples, 0.03%)</title><rect x="0.3369%" y="1173" width="0.0281%" height="15" fill="rgb(230,49,44)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1183.50"></text></g><g><title>SkyLight`get_current_display_system_state() (1 samples, 0.03%)</title><rect x="0.3369%" y="1157" width="0.0281%" height="15" fill="rgb(229,67,23)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="0.3369%" y="1141" width="0.0281%" height="15" fill="rgb(249,83,47)" fg:x="12" fg:w="1"/><text x="0.5869%" y="1151.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSOpenGLContext&gt;::initWithFormat_shareContext_ (1 samples, 0.03%)</title><rect x="0.3650%" y="1397" width="0.0281%" height="15" fill="rgb(215,43,3)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1407.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (1 samples, 0.03%)</title><rect x="0.3650%" y="1381" width="0.0281%" height="15" fill="rgb(238,154,13)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.03%)</title><rect x="0.3650%" y="1365" width="0.0281%" height="15" fill="rgb(219,56,2)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1375.50"></text></g><g><title>AppKit`-[NSOpenGLContext initWithFormat:shareContext:] (1 samples, 0.03%)</title><rect x="0.3650%" y="1349" width="0.0281%" height="15" fill="rgb(233,0,4)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1359.50"></text></g><g><title>OpenGL`CGLCreateContext (1 samples, 0.03%)</title><rect x="0.3650%" y="1333" width="0.0281%" height="15" fill="rgb(235,30,7)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1343.50"></text></g><g><title>GLEngine`gliCreateContextWithShared (1 samples, 0.03%)</title><rect x="0.3650%" y="1317" width="0.0281%" height="15" fill="rgb(250,79,13)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1327.50"></text></g><g><title>libGFXShared.dylib`gfxCreateSharedState (1 samples, 0.03%)</title><rect x="0.3650%" y="1301" width="0.0281%" height="15" fill="rgb(211,146,34)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1311.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldCreateShareGroup (1 samples, 0.03%)</title><rect x="0.3650%" y="1285" width="0.0281%" height="15" fill="rgb(228,22,38)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1295.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDShareGroupRec::initWithDevice (1 samples, 0.03%)</title><rect x="0.3650%" y="1269" width="0.0281%" height="15" fill="rgb(235,168,5)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1279.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8e414 (1 samples, 0.03%)</title><rect x="0.3650%" y="1253" width="0.0281%" height="15" fill="rgb(221,155,16)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1263.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8e468 (1 samples, 0.03%)</title><rect x="0.3650%" y="1237" width="0.0281%" height="15" fill="rgb(215,215,53)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="0.3650%" y="1221" width="0.0281%" height="15" fill="rgb(223,4,10)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1231.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="0.3650%" y="1205" width="0.0281%" height="15" fill="rgb(234,103,6)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1215.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8e4f0 (1 samples, 0.03%)</title><rect x="0.3650%" y="1189" width="0.0281%" height="15" fill="rgb(227,97,0)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1199.50"></text></g><g><title>Metal`-[MTLCompiler compileRequest:pipelineCache:sync:completionHandler:] (1 samples, 0.03%)</title><rect x="0.3650%" y="1173" width="0.0281%" height="15" fill="rgb(234,150,53)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1183.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8f86c (1 samples, 0.03%)</title><rect x="0.3650%" y="1157" width="0.0281%" height="15" fill="rgb(228,201,54)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1167.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8f7c4 (1 samples, 0.03%)</title><rect x="0.3650%" y="1141" width="0.0281%" height="15" fill="rgb(222,22,37)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1151.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e90500 (1 samples, 0.03%)</title><rect x="0.3650%" y="1125" width="0.0281%" height="15" fill="rgb(237,53,32)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1135.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8f658 (1 samples, 0.03%)</title><rect x="0.3650%" y="1109" width="0.0281%" height="15" fill="rgb(233,25,53)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1119.50"></text></g><g><title>AGXMetalG13X`0x00000001d3df7014 (1 samples, 0.03%)</title><rect x="0.3650%" y="1093" width="0.0281%" height="15" fill="rgb(210,40,34)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1103.50"></text></g><g><title>AGXMetalG13X`0x00000001d4065740 (1 samples, 0.03%)</title><rect x="0.3650%" y="1077" width="0.0281%" height="15" fill="rgb(241,220,44)" fg:x="13" fg:w="1"/><text x="0.6150%" y="1087.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSOpenGLContext&gt;::setView_ (1 samples, 0.03%)</title><rect x="0.3930%" y="1397" width="0.0281%" height="15" fill="rgb(235,28,35)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1407.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (1 samples, 0.03%)</title><rect x="0.3930%" y="1381" width="0.0281%" height="15" fill="rgb(210,56,17)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.03%)</title><rect x="0.3930%" y="1365" width="0.0281%" height="15" fill="rgb(224,130,29)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1375.50"></text></g><g><title>AppKit`-[NSOpenGLContext setView:] (1 samples, 0.03%)</title><rect x="0.3930%" y="1349" width="0.0281%" height="15" fill="rgb(235,212,8)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1359.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (1 samples, 0.03%)</title><rect x="0.3930%" y="1333" width="0.0281%" height="15" fill="rgb(223,33,50)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1343.50"></text></g><g><title>AppKit`__27-[NSOpenGLContext setView:]_block_invoke (1 samples, 0.03%)</title><rect x="0.3930%" y="1317" width="0.0281%" height="15" fill="rgb(219,149,13)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1327.50"></text></g><g><title>AppKit`NSOpenGLContextAttachOffScreenViewSurface (1 samples, 0.03%)</title><rect x="0.3930%" y="1301" width="0.0281%" height="15" fill="rgb(250,156,29)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1311.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (1 samples, 0.03%)</title><rect x="0.3930%" y="1285" width="0.0281%" height="15" fill="rgb(216,193,19)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1295.50"></text></g><g><title>AppKit`set_surface_colorspace (1 samples, 0.03%)</title><rect x="0.3930%" y="1269" width="0.0281%" height="15" fill="rgb(216,135,14)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1279.50"></text></g><g><title>SkyLight`SLSSetSurfaceColorSpace (1 samples, 0.03%)</title><rect x="0.3930%" y="1253" width="0.0281%" height="15" fill="rgb(241,47,5)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1263.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryAddColorSpace (1 samples, 0.03%)</title><rect x="0.3930%" y="1237" width="0.0281%" height="15" fill="rgb(233,42,35)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1247.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateConversionCurve (1 samples, 0.03%)</title><rect x="0.3930%" y="1221" width="0.0281%" height="15" fill="rgb(231,13,6)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1231.50"></text></g><g><title>CoreGraphics`conversion_cache_get_retained_conversion_params (1 samples, 0.03%)</title><rect x="0.3930%" y="1205" width="0.0281%" height="15" fill="rgb(207,181,40)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1215.50"></text></g><g><title>CoreGraphics`iterate_with_params (1 samples, 0.03%)</title><rect x="0.3930%" y="1189" width="0.0281%" height="15" fill="rgb(254,173,49)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1199.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoIterateColorSpaceFunctionsWithCallbacksAndOptions (1 samples, 0.03%)</title><rect x="0.3930%" y="1173" width="0.0281%" height="15" fill="rgb(221,1,38)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1183.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreateWithOptions (1 samples, 0.03%)</title><rect x="0.3930%" y="1157" width="0.0281%" height="15" fill="rgb(206,124,46)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1167.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreateFromList (1 samples, 0.03%)</title><rect x="0.3930%" y="1141" width="0.0281%" height="15" fill="rgb(249,21,11)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1151.50"></text></g><g><title>CoreGraphics`create_from_argument_list (1 samples, 0.03%)</title><rect x="0.3930%" y="1125" width="0.0281%" height="15" fill="rgb(222,201,40)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1135.50"></text></g><g><title>CoreGraphics`CGColorSyncTransformCacheGetRetained (1 samples, 0.03%)</title><rect x="0.3930%" y="1109" width="0.0281%" height="15" fill="rgb(235,61,29)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1119.50"></text></g><g><title>ColorSync`ColorSyncTransformCreate (1 samples, 0.03%)</title><rect x="0.3930%" y="1093" width="0.0281%" height="15" fill="rgb(219,207,3)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1103.50"></text></g><g><title>ColorSync`AppleCMMInitializeTransform (1 samples, 0.03%)</title><rect x="0.3930%" y="1077" width="0.0281%" height="15" fill="rgb(222,56,46)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1087.50"></text></g><g><title>ColorSync`DoInitializeTransform (1 samples, 0.03%)</title><rect x="0.3930%" y="1061" width="0.0281%" height="15" fill="rgb(239,76,54)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1071.50"></text></g><g><title>ColorSync`ConversionManager::MakeConversionSequence (1 samples, 0.03%)</title><rect x="0.3930%" y="1045" width="0.0281%" height="15" fill="rgb(231,124,27)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1055.50"></text></g><g><title>ColorSync`CMMMatrixDisplayProfile::GetMatrixTags(CMMXYZTag*  (1 samples, 0.03%)</title><rect x="0.3930%" y="1029" width="0.0281%" height="15" fill="rgb(249,195,6)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1039.50"></text></g><g><title>ColorSync`CMMProfile::InnerGetMatrixTags(CMMXYZTag* (&amp;) [3], CMMCurveTag*  (1 samples, 0.03%)</title><rect x="0.3930%" y="1013" width="0.0281%" height="15" fill="rgb(237,174,47)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1023.50"></text></g><g><title>ColorSync`CMMProfile::GetTag (1 samples, 0.03%)</title><rect x="0.3930%" y="997" width="0.0281%" height="15" fill="rgb(206,201,31)" fg:x="14" fg:w="1"/><text x="0.6430%" y="1007.50"></text></g><g><title>ColorSync`CMMProfile::MakeTag (1 samples, 0.03%)</title><rect x="0.3930%" y="981" width="0.0281%" height="15" fill="rgb(231,57,52)" fg:x="14" fg:w="1"/><text x="0.6430%" y="991.50"></text></g><g><title>ColorSync`CMMBase::NewInternal (1 samples, 0.03%)</title><rect x="0.3930%" y="965" width="0.0281%" height="15" fill="rgb(248,177,22)" fg:x="14" fg:w="1"/><text x="0.6430%" y="975.50"></text></g><g><title>ColorSync`CMMMemMgr::New (1 samples, 0.03%)</title><rect x="0.3930%" y="949" width="0.0281%" height="15" fill="rgb(215,211,37)" fg:x="14" fg:w="1"/><text x="0.6430%" y="959.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDDeviceRec::initWithDisplayMask (1 samples, 0.03%)</title><rect x="0.4211%" y="1205" width="0.0281%" height="15" fill="rgb(241,128,51)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1215.50"></text></g><g><title>Metal`MTLCopyAllDevices (1 samples, 0.03%)</title><rect x="0.4211%" y="1189" width="0.0281%" height="15" fill="rgb(227,165,31)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="0.4211%" y="1173" width="0.0281%" height="15" fill="rgb(228,167,24)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="0.4211%" y="1157" width="0.0281%" height="15" fill="rgb(228,143,12)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1167.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (1 samples, 0.03%)</title><rect x="0.4211%" y="1141" width="0.0281%" height="15" fill="rgb(249,149,8)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1151.50"></text></g><g><title>Metal`+[MTLIOAccelDevice registerDevices] (1 samples, 0.03%)</title><rect x="0.4211%" y="1125" width="0.0281%" height="15" fill="rgb(243,35,44)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1135.50"></text></g><g><title>Metal`MTLIOAccelServiceRegisterService (1 samples, 0.03%)</title><rect x="0.4211%" y="1109" width="0.0281%" height="15" fill="rgb(246,89,9)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="0.4211%" y="1093" width="0.0281%" height="15" fill="rgb(233,213,13)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="0.4211%" y="1077" width="0.0281%" height="15" fill="rgb(233,141,41)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1087.50"></text></g><g><title>Metal`+[MTLIOAccelService registerService:] (1 samples, 0.03%)</title><rect x="0.4211%" y="1061" width="0.0281%" height="15" fill="rgb(239,167,4)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1071.50"></text></g><g><title>Metal`-[MTLIOAccelService initWithAcceleratorPort:] (1 samples, 0.03%)</title><rect x="0.4211%" y="1045" width="0.0281%" height="15" fill="rgb(209,217,16)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1055.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e9775c (1 samples, 0.03%)</title><rect x="0.4211%" y="1029" width="0.0281%" height="15" fill="rgb(219,88,35)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1039.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e7d9b8 (1 samples, 0.03%)</title><rect x="0.4211%" y="1013" width="0.0281%" height="15" fill="rgb(220,193,23)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1023.50"></text></g><g><title>Foundation`-[NSBundle pathForResource:ofType:] (1 samples, 0.03%)</title><rect x="0.4211%" y="997" width="0.0281%" height="15" fill="rgb(230,90,52)" fg:x="15" fg:w="1"/><text x="0.6711%" y="1007.50"></text></g><g><title>Foundation`-[NSBundle URLForResource:withExtension:subdirectory:] (1 samples, 0.03%)</title><rect x="0.4211%" y="981" width="0.0281%" height="15" fill="rgb(252,106,19)" fg:x="15" fg:w="1"/><text x="0.6711%" y="991.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.03%)</title><rect x="0.4211%" y="965" width="0.0281%" height="15" fill="rgb(206,74,20)" fg:x="15" fg:w="1"/><text x="0.6711%" y="975.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.03%)</title><rect x="0.4211%" y="949" width="0.0281%" height="15" fill="rgb(230,138,44)" fg:x="15" fg:w="1"/><text x="0.6711%" y="959.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.03%)</title><rect x="0.4211%" y="933" width="0.0281%" height="15" fill="rgb(235,182,43)" fg:x="15" fg:w="1"/><text x="0.6711%" y="943.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.03%)</title><rect x="0.4211%" y="917" width="0.0281%" height="15" fill="rgb(242,16,51)" fg:x="15" fg:w="1"/><text x="0.6711%" y="927.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.03%)</title><rect x="0.4211%" y="901" width="0.0281%" height="15" fill="rgb(248,9,4)" fg:x="15" fg:w="1"/><text x="0.6711%" y="911.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.03%)</title><rect x="0.4211%" y="885" width="0.0281%" height="15" fill="rgb(210,31,22)" fg:x="15" fg:w="1"/><text x="0.6711%" y="895.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.03%)</title><rect x="0.4211%" y="869" width="0.0281%" height="15" fill="rgb(239,54,39)" fg:x="15" fg:w="1"/><text x="0.6711%" y="879.50"></text></g><g><title>CoreFoundation`___CFBundleReadDirectory_block_invoke (1 samples, 0.03%)</title><rect x="0.4211%" y="853" width="0.0281%" height="15" fill="rgb(230,99,41)" fg:x="15" fg:w="1"/><text x="0.6711%" y="863.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.03%)</title><rect x="0.4211%" y="837" width="0.0281%" height="15" fill="rgb(253,106,12)" fg:x="15" fg:w="1"/><text x="0.6711%" y="847.50"></text></g><g><title>CoreFoundation`mdict_rehashd (1 samples, 0.03%)</title><rect x="0.4211%" y="821" width="0.0281%" height="15" fill="rgb(213,46,41)" fg:x="15" fg:w="1"/><text x="0.6711%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.03%)</title><rect x="0.4211%" y="805" width="0.0281%" height="15" fill="rgb(215,133,35)" fg:x="15" fg:w="1"/><text x="0.6711%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="0.4211%" y="789" width="0.0281%" height="15" fill="rgb(213,28,5)" fg:x="15" fg:w="1"/><text x="0.6711%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldCreateDevice (2 samples, 0.06%)</title><rect x="0.4211%" y="1221" width="0.0561%" height="15" fill="rgb(215,77,49)" fg:x="15" fg:w="2"/><text x="0.6711%" y="1231.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.03%)</title><rect x="0.4492%" y="1205" width="0.0281%" height="15" fill="rgb(248,100,22)" fg:x="16" fg:w="1"/><text x="0.6992%" y="1215.50"></text></g><g><title>IOKit`IORegistryEntryCreateCFProperties (1 samples, 0.03%)</title><rect x="0.4773%" y="1221" width="0.0281%" height="15" fill="rgb(208,67,9)" fg:x="17" fg:w="1"/><text x="0.7273%" y="1231.50"></text></g><g><title>IOKit`io_registry_entry_get_properties_bin_buf (1 samples, 0.03%)</title><rect x="0.4773%" y="1205" width="0.0281%" height="15" fill="rgb(219,133,21)" fg:x="17" fg:w="1"/><text x="0.7273%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="0.4773%" y="1189" width="0.0281%" height="15" fill="rgb(246,46,29)" fg:x="17" fg:w="1"/><text x="0.7273%" y="1199.50"></text></g><g><title>OpenGL`0x00000001ef989d40 (4 samples, 0.11%)</title><rect x="0.4211%" y="1317" width="0.1123%" height="15" fill="rgb(246,185,52)" fg:x="15" fg:w="4"/><text x="0.6711%" y="1327.50"></text></g><g><title>OpenGL`0x00000001ef98324c (4 samples, 0.11%)</title><rect x="0.4211%" y="1301" width="0.1123%" height="15" fill="rgb(252,136,11)" fg:x="15" fg:w="4"/><text x="0.6711%" y="1311.50"></text></g><g><title>OpenGL`0x00000001ef9834ac (4 samples, 0.11%)</title><rect x="0.4211%" y="1285" width="0.1123%" height="15" fill="rgb(219,138,53)" fg:x="15" fg:w="4"/><text x="0.6711%" y="1295.50"></text></g><g><title>OpenGL`0x00000001ef9835d8 (4 samples, 0.11%)</title><rect x="0.4211%" y="1269" width="0.1123%" height="15" fill="rgb(211,51,23)" fg:x="15" fg:w="4"/><text x="0.6711%" y="1279.50"></text></g><g><title>GLEngine`gliInitializeLibrary (4 samples, 0.11%)</title><rect x="0.4211%" y="1253" width="0.1123%" height="15" fill="rgb(247,221,28)" fg:x="15" fg:w="4"/><text x="0.6711%" y="1263.50"></text></g><g><title>libGFXShared.dylib`gfxInitializeLibrary (4 samples, 0.11%)</title><rect x="0.4211%" y="1237" width="0.1123%" height="15" fill="rgb(251,222,45)" fg:x="15" fg:w="4"/><text x="0.6711%" y="1247.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="0.5053%" y="1221" width="0.0281%" height="15" fill="rgb(217,162,53)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1231.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.03%)</title><rect x="0.5053%" y="1205" width="0.0281%" height="15" fill="rgb(229,93,14)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1215.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="0.5053%" y="1189" width="0.0281%" height="15" fill="rgb(209,67,49)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1199.50"></text></g><g><title>dyld`dyld4::Loader::getLoader (1 samples, 0.03%)</title><rect x="0.5053%" y="1173" width="0.0281%" height="15" fill="rgb(213,87,29)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1183.50"></text></g><g><title>dyld`dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void  (1 samples, 0.03%)</title><rect x="0.5053%" y="1157" width="0.0281%" height="15" fill="rgb(205,151,52)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1167.50"></text></g><g><title>dyld`dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, dyld3::Platform, bool, bool&amp;, void  (1 samples, 0.03%)</title><rect x="0.5053%" y="1141" width="0.0281%" height="15" fill="rgb(253,215,39)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1151.50"></text></g><g><title>dyld`invocation function for block in dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void  (1 samples, 0.03%)</title><rect x="0.5053%" y="1125" width="0.0281%" height="15" fill="rgb(221,220,41)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1135.50"></text></g><g><title>dyld`dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void  (1 samples, 0.03%)</title><rect x="0.5053%" y="1109" width="0.0281%" height="15" fill="rgb(218,133,21)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1119.50"></text></g><g><title>dyld`invocation function for block in dyld4::Loader::getLoader (1 samples, 0.03%)</title><rect x="0.5053%" y="1093" width="0.0281%" height="15" fill="rgb(221,193,43)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1103.50"></text></g><g><title>dyld`dyld4::JustInTimeLoader::makeJustInTimeLoaderDisk (1 samples, 0.03%)</title><rect x="0.5053%" y="1077" width="0.0281%" height="15" fill="rgb(240,128,52)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1087.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::withReadOnlyMappedFile(Diagnostics&amp;, char const*, bool, void  (1 samples, 0.03%)</title><rect x="0.5053%" y="1061" width="0.0281%" height="15" fill="rgb(253,114,12)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1071.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::mapFileReadOnly (1 samples, 0.03%)</title><rect x="0.5053%" y="1045" width="0.0281%" height="15" fill="rgb(215,223,47)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1055.50"></text></g><g><title>dyld`dyld3::open (1 samples, 0.03%)</title><rect x="0.5053%" y="1029" width="0.0281%" height="15" fill="rgb(248,225,23)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1039.50"></text></g><g><title>dyld`open_with_subsystem (1 samples, 0.03%)</title><rect x="0.5053%" y="1013" width="0.0281%" height="15" fill="rgb(250,108,0)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1023.50"></text></g><g><title>dyld`__open (1 samples, 0.03%)</title><rect x="0.5053%" y="997" width="0.0281%" height="15" fill="rgb(228,208,7)" fg:x="18" fg:w="1"/><text x="0.7553%" y="1007.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSOpenGLPixelFormat&gt;::initWithAttributes_ (5 samples, 0.14%)</title><rect x="0.4211%" y="1397" width="0.1404%" height="15" fill="rgb(244,45,10)" fg:x="15" fg:w="5"/><text x="0.6711%" y="1407.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (5 samples, 0.14%)</title><rect x="0.4211%" y="1381" width="0.1404%" height="15" fill="rgb(207,125,25)" fg:x="15" fg:w="5"/><text x="0.6711%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (5 samples, 0.14%)</title><rect x="0.4211%" y="1365" width="0.1404%" height="15" fill="rgb(210,195,18)" fg:x="15" fg:w="5"/><text x="0.6711%" y="1375.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (5 samples, 0.14%)</title><rect x="0.4211%" y="1349" width="0.1404%" height="15" fill="rgb(249,80,12)" fg:x="15" fg:w="5"/><text x="0.6711%" y="1359.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (5 samples, 0.14%)</title><rect x="0.4211%" y="1333" width="0.1404%" height="15" fill="rgb(221,65,9)" fg:x="15" fg:w="5"/><text x="0.6711%" y="1343.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.03%)</title><rect x="0.5334%" y="1317" width="0.0281%" height="15" fill="rgb(235,49,36)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1327.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.03%)</title><rect x="0.5334%" y="1301" width="0.0281%" height="15" fill="rgb(225,32,20)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1311.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.03%)</title><rect x="0.5334%" y="1285" width="0.0281%" height="15" fill="rgb(215,141,46)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1295.50"></text></g><g><title>OpenGL`0x00000001ef984a40 (1 samples, 0.03%)</title><rect x="0.5334%" y="1269" width="0.0281%" height="15" fill="rgb(250,160,47)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1279.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyMultipleWithContainer (1 samples, 0.03%)</title><rect x="0.5334%" y="1253" width="0.0281%" height="15" fill="rgb(216,222,40)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1263.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyValuesForKeys:identifier:user:host:container:] (1 samples, 0.03%)</title><rect x="0.5334%" y="1237" width="0.0281%" height="15" fill="rgb(234,217,39)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1247.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 0.03%)</title><rect x="0.5334%" y="1221" width="0.0281%" height="15" fill="rgb(207,178,40)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1231.50"></text></g><g><title>CoreFoundation`__68-[_CFXPreferences copyValuesForKeys:identifier:user:host:container:]_block_invoke (1 samples, 0.03%)</title><rect x="0.5334%" y="1205" width="0.0281%" height="15" fill="rgb(221,136,13)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1215.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource alreadylocked_copyDictionary] (1 samples, 0.03%)</title><rect x="0.5334%" y="1189" width="0.0281%" height="15" fill="rgb(249,199,10)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1199.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource alreadylocked_requestNewData] (1 samples, 0.03%)</title><rect x="0.5334%" y="1173" width="0.0281%" height="15" fill="rgb(249,222,13)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1183.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:performBlock:] (1 samples, 0.03%)</title><rect x="0.5334%" y="1157" width="0.0281%" height="15" fill="rgb(244,185,38)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1167.50"></text></g><g><title>CoreFoundation`__50-[CFPrefsPlistSource alreadylocked_requestNewData]_block_invoke (1 samples, 0.03%)</title><rect x="0.5334%" y="1141" width="0.0281%" height="15" fill="rgb(236,202,9)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1151.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:] (1 samples, 0.03%)</title><rect x="0.5334%" y="1125" width="0.0281%" height="15" fill="rgb(250,229,37)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1135.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 0.03%)</title><rect x="0.5334%" y="1109" width="0.0281%" height="15" fill="rgb(206,174,23)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1119.50"></text></g><g><title>CoreFoundation`__78-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:]_block_invoke (1 samples, 0.03%)</title><rect x="0.5334%" y="1093" width="0.0281%" height="15" fill="rgb(211,33,43)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1103.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.03%)</title><rect x="0.5334%" y="1077" width="0.0281%" height="15" fill="rgb(245,58,50)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1087.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.03%)</title><rect x="0.5334%" y="1061" width="0.0281%" height="15" fill="rgb(244,68,36)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.03%)</title><rect x="0.5334%" y="1045" width="0.0281%" height="15" fill="rgb(232,229,15)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.03%)</title><rect x="0.5334%" y="1029" width="0.0281%" height="15" fill="rgb(254,30,23)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.03%)</title><rect x="0.5334%" y="1013" width="0.0281%" height="15" fill="rgb(235,160,14)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.03%)</title><rect x="0.5334%" y="997" width="0.0281%" height="15" fill="rgb(212,155,44)" fg:x="19" fg:w="1"/><text x="0.7834%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="0.5334%" y="981" width="0.0281%" height="15" fill="rgb(226,2,50)" fg:x="19" fg:w="1"/><text x="0.7834%" y="991.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window::create_view (1 samples, 0.03%)</title><rect x="0.5615%" y="1349" width="0.0281%" height="15" fill="rgb(234,177,6)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1359.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::view::new_view (1 samples, 0.03%)</title><rect x="0.5615%" y="1333" width="0.0281%" height="15" fill="rgb(217,24,9)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1343.50"></text></g><g><title>rust-sokoban`&lt;winit::platform_impl::platform::view::VIEW_CLASS as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="0.5615%" y="1317" width="0.0281%" height="15" fill="rgb(220,13,46)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1327.50"></text></g><g><title>rust-sokoban`std::sync::once::Once::call_once (1 samples, 0.03%)</title><rect x="0.5615%" y="1301" width="0.0281%" height="15" fill="rgb(239,221,27)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1311.50"></text></g><g><title>rust-sokoban`std::sync::once::Once::call_inner (1 samples, 0.03%)</title><rect x="0.5615%" y="1285" width="0.0281%" height="15" fill="rgb(222,198,25)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1295.50"></text></g><g><title>rust-sokoban`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.03%)</title><rect x="0.5615%" y="1269" width="0.0281%" height="15" fill="rgb(211,99,13)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1279.50"></text></g><g><title>rust-sokoban`lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (1 samples, 0.03%)</title><rect x="0.5615%" y="1253" width="0.0281%" height="15" fill="rgb(232,111,31)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1263.50"></text></g><g><title>rust-sokoban`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="0.5615%" y="1237" width="0.0281%" height="15" fill="rgb(245,82,37)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1247.50"></text></g><g><title>rust-sokoban`objc::declare::ClassDecl::add_method (1 samples, 0.03%)</title><rect x="0.5615%" y="1221" width="0.0281%" height="15" fill="rgb(227,149,46)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1231.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::encode::EncodeArguments&gt;::encodings (1 samples, 0.03%)</title><rect x="0.5615%" y="1205" width="0.0281%" height="15" fill="rgb(218,36,50)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1215.50"></text></g><g><title>rust-sokoban`&lt;cocoa_foundation::foundation::macos::NSRect as objc::encode::Encode&gt;::encode (1 samples, 0.03%)</title><rect x="0.5615%" y="1189" width="0.0281%" height="15" fill="rgb(226,80,48)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1199.50"></text></g><g><title>rust-sokoban`&lt;cocoa_foundation::foundation::macos::NSPoint as objc::encode::Encode&gt;::encode (1 samples, 0.03%)</title><rect x="0.5615%" y="1173" width="0.0281%" height="15" fill="rgb(238,224,15)" fg:x="20" fg:w="1"/><text x="0.8115%" y="1183.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.03%)</title><rect x="0.5896%" y="1253" width="0.0281%" height="15" fill="rgb(241,136,10)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1263.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.03%)</title><rect x="0.5896%" y="1237" width="0.0281%" height="15" fill="rgb(208,32,45)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1247.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="0.5896%" y="1221" width="0.0281%" height="15" fill="rgb(207,135,9)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1231.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="0.5896%" y="1205" width="0.0281%" height="15" fill="rgb(206,86,44)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1215.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.03%)</title><rect x="0.5896%" y="1189" width="0.0281%" height="15" fill="rgb(245,177,15)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1199.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.03%)</title><rect x="0.5896%" y="1173" width="0.0281%" height="15" fill="rgb(206,64,50)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1183.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (1 samples, 0.03%)</title><rect x="0.5896%" y="1157" width="0.0281%" height="15" fill="rgb(234,36,40)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1167.50"></text></g><g><title>dyld`objc::lookup8 (1 samples, 0.03%)</title><rect x="0.5896%" y="1141" width="0.0281%" height="15" fill="rgb(213,64,8)" fg:x="21" fg:w="1"/><text x="0.8396%" y="1151.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (1 samples, 0.03%)</title><rect x="0.6176%" y="1061" width="0.0281%" height="15" fill="rgb(210,75,36)" fg:x="22" fg:w="1"/><text x="0.8676%" y="1071.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (1 samples, 0.03%)</title><rect x="0.6176%" y="1045" width="0.0281%" height="15" fill="rgb(229,88,21)" fg:x="22" fg:w="1"/><text x="0.8676%" y="1055.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (1 samples, 0.03%)</title><rect x="0.6176%" y="1029" width="0.0281%" height="15" fill="rgb(252,204,47)" fg:x="22" fg:w="1"/><text x="0.8676%" y="1039.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (1 samples, 0.03%)</title><rect x="0.6176%" y="1013" width="0.0281%" height="15" fill="rgb(208,77,27)" fg:x="22" fg:w="1"/><text x="0.8676%" y="1023.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (1 samples, 0.03%)</title><rect x="0.6176%" y="997" width="0.0281%" height="15" fill="rgb(221,76,26)" fg:x="22" fg:w="1"/><text x="0.8676%" y="1007.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (1 samples, 0.03%)</title><rect x="0.6176%" y="981" width="0.0281%" height="15" fill="rgb(225,139,18)" fg:x="22" fg:w="1"/><text x="0.8676%" y="991.50"></text></g><g><title>Foundation`probeGC (1 samples, 0.03%)</title><rect x="0.6176%" y="965" width="0.0281%" height="15" fill="rgb(230,137,11)" fg:x="22" fg:w="1"/><text x="0.8676%" y="975.50"></text></g><g><title>CoreText`TDescriptor::Hash (1 samples, 0.03%)</title><rect x="0.6176%" y="949" width="0.0281%" height="15" fill="rgb(212,28,1)" fg:x="22" fg:w="1"/><text x="0.8676%" y="959.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (1 samples, 0.03%)</title><rect x="0.6176%" y="933" width="0.0281%" height="15" fill="rgb(248,164,17)" fg:x="22" fg:w="1"/><text x="0.8676%" y="943.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (1 samples, 0.03%)</title><rect x="0.6176%" y="917" width="0.0281%" height="15" fill="rgb(222,171,42)" fg:x="22" fg:w="1"/><text x="0.8676%" y="927.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (1 samples, 0.03%)</title><rect x="0.6176%" y="901" width="0.0281%" height="15" fill="rgb(243,84,45)" fg:x="22" fg:w="1"/><text x="0.8676%" y="911.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (1 samples, 0.03%)</title><rect x="0.6176%" y="885" width="0.0281%" height="15" fill="rgb(252,49,23)" fg:x="22" fg:w="1"/><text x="0.8676%" y="895.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (1 samples, 0.03%)</title><rect x="0.6176%" y="869" width="0.0281%" height="15" fill="rgb(215,19,7)" fg:x="22" fg:w="1"/><text x="0.8676%" y="879.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (1 samples, 0.03%)</title><rect x="0.6176%" y="853" width="0.0281%" height="15" fill="rgb(238,81,41)" fg:x="22" fg:w="1"/><text x="0.8676%" y="863.50"></text></g><g><title>CoreText`TDescriptorSource::CopyXTypeFontWithName (1 samples, 0.03%)</title><rect x="0.6176%" y="837" width="0.0281%" height="15" fill="rgb(210,199,37)" fg:x="22" fg:w="1"/><text x="0.8676%" y="847.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontWithName (1 samples, 0.03%)</title><rect x="0.6176%" y="821" width="0.0281%" height="15" fill="rgb(244,192,49)" fg:x="22" fg:w="1"/><text x="0.8676%" y="831.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::TGlobalFontRegistry (1 samples, 0.03%)</title><rect x="0.6176%" y="805" width="0.0281%" height="15" fill="rgb(226,211,11)" fg:x="22" fg:w="1"/><text x="0.8676%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.03%)</title><rect x="0.6176%" y="789" width="0.0281%" height="15" fill="rgb(236,162,54)" fg:x="22" fg:w="1"/><text x="0.8676%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.03%)</title><rect x="0.6176%" y="773" width="0.0281%" height="15" fill="rgb(220,229,9)" fg:x="22" fg:w="1"/><text x="0.8676%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.03%)</title><rect x="0.6176%" y="757" width="0.0281%" height="15" fill="rgb(250,87,22)" fg:x="22" fg:w="1"/><text x="0.8676%" y="767.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::CreateRegistry (1 samples, 0.03%)</title><rect x="0.6176%" y="741" width="0.0281%" height="15" fill="rgb(239,43,17)" fg:x="22" fg:w="1"/><text x="0.8676%" y="751.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistryImp::RendezvousWithServer (1 samples, 0.03%)</title><rect x="0.6176%" y="725" width="0.0281%" height="15" fill="rgb(231,177,25)" fg:x="22" fg:w="1"/><text x="0.8676%" y="735.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient XTRendezvous:] (1 samples, 0.03%)</title><rect x="0.6176%" y="709" width="0.0281%" height="15" fill="rgb(219,179,1)" fg:x="22" fg:w="1"/><text x="0.8676%" y="719.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient run:errorHandler:] (1 samples, 0.03%)</title><rect x="0.6176%" y="693" width="0.0281%" height="15" fill="rgb(238,219,53)" fg:x="22" fg:w="1"/><text x="0.8676%" y="703.50"></text></g><g><title>libFontRegistry.dylib`__31-[XTypeXPCClient XTRendezvous:]_block_invoke (1 samples, 0.03%)</title><rect x="0.6176%" y="677" width="0.0281%" height="15" fill="rgb(232,167,36)" fg:x="22" fg:w="1"/><text x="0.8676%" y="687.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend1 (1 samples, 0.03%)</title><rect x="0.6176%" y="661" width="0.0281%" height="15" fill="rgb(244,19,51)" fg:x="22" fg:w="1"/><text x="0.8676%" y="671.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:] (1 samples, 0.03%)</title><rect x="0.6176%" y="645" width="0.0281%" height="15" fill="rgb(224,6,22)" fg:x="22" fg:w="1"/><text x="0.8676%" y="655.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.03%)</title><rect x="0.6176%" y="629" width="0.0281%" height="15" fill="rgb(224,145,5)" fg:x="22" fg:w="1"/><text x="0.8676%" y="639.50"></text></g><g><title>Foundation`__NSXPCCONNECTION_IS_WAITING_FOR_A_SYNCHRONOUS_REPLY__ (1 samples, 0.03%)</title><rect x="0.6176%" y="613" width="0.0281%" height="15" fill="rgb(234,130,49)" fg:x="22" fg:w="1"/><text x="0.8676%" y="623.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.03%)</title><rect x="0.6176%" y="597" width="0.0281%" height="15" fill="rgb(254,6,2)" fg:x="22" fg:w="1"/><text x="0.8676%" y="607.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.03%)</title><rect x="0.6176%" y="581" width="0.0281%" height="15" fill="rgb(208,96,46)" fg:x="22" fg:w="1"/><text x="0.8676%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.03%)</title><rect x="0.6176%" y="565" width="0.0281%" height="15" fill="rgb(239,3,39)" fg:x="22" fg:w="1"/><text x="0.8676%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.03%)</title><rect x="0.6176%" y="549" width="0.0281%" height="15" fill="rgb(233,210,1)" fg:x="22" fg:w="1"/><text x="0.8676%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.03%)</title><rect x="0.6176%" y="533" width="0.0281%" height="15" fill="rgb(244,137,37)" fg:x="22" fg:w="1"/><text x="0.8676%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.03%)</title><rect x="0.6176%" y="517" width="0.0281%" height="15" fill="rgb(240,136,2)" fg:x="22" fg:w="1"/><text x="0.8676%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (1 samples, 0.03%)</title><rect x="0.6176%" y="501" width="0.0281%" height="15" fill="rgb(239,18,37)" fg:x="22" fg:w="1"/><text x="0.8676%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (2 samples, 0.06%)</title><rect x="0.6176%" y="1157" width="0.0561%" height="15" fill="rgb(218,185,22)" fg:x="22" fg:w="2"/><text x="0.8676%" y="1167.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (2 samples, 0.06%)</title><rect x="0.6176%" y="1141" width="0.0561%" height="15" fill="rgb(225,218,4)" fg:x="22" fg:w="2"/><text x="0.8676%" y="1151.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (2 samples, 0.06%)</title><rect x="0.6176%" y="1125" width="0.0561%" height="15" fill="rgb(230,182,32)" fg:x="22" fg:w="2"/><text x="0.8676%" y="1135.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (2 samples, 0.06%)</title><rect x="0.6176%" y="1109" width="0.0561%" height="15" fill="rgb(242,56,43)" fg:x="22" fg:w="2"/><text x="0.8676%" y="1119.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (2 samples, 0.06%)</title><rect x="0.6176%" y="1093" width="0.0561%" height="15" fill="rgb(233,99,24)" fg:x="22" fg:w="2"/><text x="0.8676%" y="1103.50"></text></g><g><title>AppKit`-[NSButtonCell init] (2 samples, 0.06%)</title><rect x="0.6176%" y="1077" width="0.0561%" height="15" fill="rgb(234,209,42)" fg:x="22" fg:w="2"/><text x="0.8676%" y="1087.50"></text></g><g><title>Foundation`-[NSBundle localizedStringForKey:value:table:] (1 samples, 0.03%)</title><rect x="0.6457%" y="1061" width="0.0281%" height="15" fill="rgb(227,7,12)" fg:x="23" fg:w="1"/><text x="0.8957%" y="1071.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption (1 samples, 0.03%)</title><rect x="0.6457%" y="1045" width="0.0281%" height="15" fill="rgb(245,203,43)" fg:x="23" fg:w="1"/><text x="0.8957%" y="1055.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.03%)</title><rect x="0.6457%" y="1029" width="0.0281%" height="15" fill="rgb(238,205,33)" fg:x="23" fg:w="1"/><text x="0.8957%" y="1039.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.03%)</title><rect x="0.6457%" y="1013" width="0.0281%" height="15" fill="rgb(231,56,7)" fg:x="23" fg:w="1"/><text x="0.8957%" y="1023.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.03%)</title><rect x="0.6457%" y="997" width="0.0281%" height="15" fill="rgb(244,186,29)" fg:x="23" fg:w="1"/><text x="0.8957%" y="1007.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.03%)</title><rect x="0.6457%" y="981" width="0.0281%" height="15" fill="rgb(234,111,31)" fg:x="23" fg:w="1"/><text x="0.8957%" y="991.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.03%)</title><rect x="0.6457%" y="965" width="0.0281%" height="15" fill="rgb(241,149,10)" fg:x="23" fg:w="1"/><text x="0.8957%" y="975.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.03%)</title><rect x="0.6457%" y="949" width="0.0281%" height="15" fill="rgb(249,206,44)" fg:x="23" fg:w="1"/><text x="0.8957%" y="959.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.03%)</title><rect x="0.6457%" y="933" width="0.0281%" height="15" fill="rgb(251,153,30)" fg:x="23" fg:w="1"/><text x="0.8957%" y="943.50"></text></g><g><title>CoreFoundation`___CFBundleReadDirectory_block_invoke (1 samples, 0.03%)</title><rect x="0.6457%" y="917" width="0.0281%" height="15" fill="rgb(239,152,38)" fg:x="23" fg:w="1"/><text x="0.8957%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.03%)</title><rect x="0.6457%" y="901" width="0.0281%" height="15" fill="rgb(249,139,47)" fg:x="23" fg:w="1"/><text x="0.8957%" y="911.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (3 samples, 0.08%)</title><rect x="0.6176%" y="1205" width="0.0842%" height="15" fill="rgb(244,64,35)" fg:x="22" fg:w="3"/><text x="0.8676%" y="1215.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (3 samples, 0.08%)</title><rect x="0.6176%" y="1189" width="0.0842%" height="15" fill="rgb(216,46,15)" fg:x="22" fg:w="3"/><text x="0.8676%" y="1199.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (3 samples, 0.08%)</title><rect x="0.6176%" y="1173" width="0.0842%" height="15" fill="rgb(250,74,19)" fg:x="22" fg:w="3"/><text x="0.8676%" y="1183.50"></text></g><g><title>AppKit`-[NSThemeFrame newMiniaturizeButton] (1 samples, 0.03%)</title><rect x="0.6738%" y="1157" width="0.0281%" height="15" fill="rgb(249,42,33)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1167.50"></text></g><g><title>AppKit`+[_NSThemeWidget widgetInView:withButtonID:action:] (1 samples, 0.03%)</title><rect x="0.6738%" y="1141" width="0.0281%" height="15" fill="rgb(242,149,17)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1151.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (1 samples, 0.03%)</title><rect x="0.6738%" y="1125" width="0.0281%" height="15" fill="rgb(244,29,21)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1135.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (1 samples, 0.03%)</title><rect x="0.6738%" y="1109" width="0.0281%" height="15" fill="rgb(220,130,37)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1119.50"></text></g><g><title>AppKit`-[NSButtonCell setEnabled:] (1 samples, 0.03%)</title><rect x="0.6738%" y="1093" width="0.0281%" height="15" fill="rgb(211,67,2)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1103.50"></text></g><g><title>AppKit`-[NSButtonCell _updateProgressIndicatorWidgetViewDefinition] (1 samples, 0.03%)</title><rect x="0.6738%" y="1077" width="0.0281%" height="15" fill="rgb(235,68,52)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1087.50"></text></g><g><title>AppKit`-[NSButtonCell _progressIndicatorCUIOptions] (1 samples, 0.03%)</title><rect x="0.6738%" y="1061" width="0.0281%" height="15" fill="rgb(246,142,3)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1071.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell isEnabled] (1 samples, 0.03%)</title><rect x="0.6738%" y="1045" width="0.0281%" height="15" fill="rgb(241,25,7)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1055.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="0.6738%" y="1029" width="0.0281%" height="15" fill="rgb(242,119,39)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1039.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="0.6738%" y="1013" width="0.0281%" height="15" fill="rgb(241,98,45)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1023.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.03%)</title><rect x="0.6738%" y="997" width="0.0281%" height="15" fill="rgb(254,28,30)" fg:x="24" fg:w="1"/><text x="0.9238%" y="1007.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (4 samples, 0.11%)</title><rect x="0.6176%" y="1221" width="0.1123%" height="15" fill="rgb(241,142,54)" fg:x="22" fg:w="4"/><text x="0.8676%" y="1231.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (1 samples, 0.03%)</title><rect x="0.7019%" y="1205" width="0.0281%" height="15" fill="rgb(222,85,15)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1215.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.03%)</title><rect x="0.7019%" y="1189" width="0.0281%" height="15" fill="rgb(210,85,47)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1199.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.03%)</title><rect x="0.7019%" y="1173" width="0.0281%" height="15" fill="rgb(224,206,25)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1183.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="0.7019%" y="1157" width="0.0281%" height="15" fill="rgb(243,201,19)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1167.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="0.7019%" y="1141" width="0.0281%" height="15" fill="rgb(236,59,4)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1151.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="0.7019%" y="1125" width="0.0281%" height="15" fill="rgb(254,179,45)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1135.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="0.7019%" y="1109" width="0.0281%" height="15" fill="rgb(226,14,10)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1119.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.03%)</title><rect x="0.7019%" y="1093" width="0.0281%" height="15" fill="rgb(244,27,41)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1103.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="0.7019%" y="1077" width="0.0281%" height="15" fill="rgb(235,35,32)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1087.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="0.7019%" y="1061" width="0.0281%" height="15" fill="rgb(218,68,31)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1071.50"></text></g><g><title>libobjc.A.dylib`cache_t::insert(objc_selector*, void (*) (1 samples, 0.03%)</title><rect x="0.7019%" y="1045" width="0.0281%" height="15" fill="rgb(207,120,37)" fg:x="25" fg:w="1"/><text x="0.9519%" y="1055.50"></text></g><g><title>AppKit`-[NSThemeFrame _moveTitlebarViewsToView:] (1 samples, 0.03%)</title><rect x="0.7299%" y="1189" width="0.0281%" height="15" fill="rgb(227,98,0)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1199.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (1 samples, 0.03%)</title><rect x="0.7299%" y="1173" width="0.0281%" height="15" fill="rgb(207,7,3)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1183.50"></text></g><g><title>AppKit`-[NSThemeFrame _tileTitlebarAndRedisplay:] (1 samples, 0.03%)</title><rect x="0.7299%" y="1157" width="0.0281%" height="15" fill="rgb(206,98,19)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1167.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleTextField] (1 samples, 0.03%)</title><rect x="0.7299%" y="1141" width="0.0281%" height="15" fill="rgb(217,5,26)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1151.50"></text></g><g><title>AppKit`-[NSControl didChangeValueForKey:] (1 samples, 0.03%)</title><rect x="0.7299%" y="1125" width="0.0281%" height="15" fill="rgb(235,190,38)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1135.50"></text></g><g><title>AppKit`-[NSView didChangeValueForKey:] (1 samples, 0.03%)</title><rect x="0.7299%" y="1109" width="0.0281%" height="15" fill="rgb(247,86,24)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1119.50"></text></g><g><title>AppKit`-[NSView _updateLayerBackedness] (1 samples, 0.03%)</title><rect x="0.7299%" y="1093" width="0.0281%" height="15" fill="rgb(205,101,16)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1103.50"></text></g><g><title>AppKit`-[NSView _createLayerAndInitialize] (1 samples, 0.03%)</title><rect x="0.7299%" y="1077" width="0.0281%" height="15" fill="rgb(246,168,33)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1087.50"></text></g><g><title>AppKit`-[NSView(NSPrivateLayerSupport) _createLayer] (1 samples, 0.03%)</title><rect x="0.7299%" y="1061" width="0.0281%" height="15" fill="rgb(231,114,1)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1071.50"></text></g><g><title>QuartzCore`+[CALayer layer] (1 samples, 0.03%)</title><rect x="0.7299%" y="1045" width="0.0281%" height="15" fill="rgb(207,184,53)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1055.50"></text></g><g><title>QuartzCore`-[CALayer init] (1 samples, 0.03%)</title><rect x="0.7299%" y="1029" width="0.0281%" height="15" fill="rgb(224,95,51)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1039.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (1 samples, 0.03%)</title><rect x="0.7299%" y="1013" width="0.0281%" height="15" fill="rgb(212,188,45)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1023.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (1 samples, 0.03%)</title><rect x="0.7299%" y="997" width="0.0281%" height="15" fill="rgb(223,154,38)" fg:x="26" fg:w="1"/><text x="0.9799%" y="1007.50"></text></g><g><title>AppKit`-[NSThemeFrame _makeTitlebarViewWithFrame:] (1 samples, 0.03%)</title><rect x="0.7580%" y="1173" width="0.0281%" height="15" fill="rgb(251,22,52)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1183.50"></text></g><g><title>AppKit`-[NSTitlebarView initWithFrame:] (1 samples, 0.03%)</title><rect x="0.7580%" y="1157" width="0.0281%" height="15" fill="rgb(229,209,22)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1167.50"></text></g><g><title>AppKit`-[NSTitlebarView _installBackdropLayer] (1 samples, 0.03%)</title><rect x="0.7580%" y="1141" width="0.0281%" height="15" fill="rgb(234,138,34)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1151.50"></text></g><g><title>QuartzCore`+[CALayer layer] (1 samples, 0.03%)</title><rect x="0.7580%" y="1125" width="0.0281%" height="15" fill="rgb(212,95,11)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1135.50"></text></g><g><title>QuartzCore`-[CALayer init] (1 samples, 0.03%)</title><rect x="0.7580%" y="1109" width="0.0281%" height="15" fill="rgb(240,179,47)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1119.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (1 samples, 0.03%)</title><rect x="0.7580%" y="1093" width="0.0281%" height="15" fill="rgb(240,163,11)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1103.50"></text></g><g><title>libobjc.A.dylib`class_getMethodImplementation (1 samples, 0.03%)</title><rect x="0.7580%" y="1077" width="0.0281%" height="15" fill="rgb(236,37,12)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1087.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="0.7580%" y="1061" width="0.0281%" height="15" fill="rgb(232,164,16)" fg:x="27" fg:w="1"/><text x="1.0080%" y="1071.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView initWithFrame:] (1 samples, 0.03%)</title><rect x="0.7861%" y="1173" width="0.0281%" height="15" fill="rgb(244,205,15)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1183.50"></text></g><g><title>AppKit`-[NSView didChangeValueForKey:] (1 samples, 0.03%)</title><rect x="0.7861%" y="1157" width="0.0281%" height="15" fill="rgb(223,117,47)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1167.50"></text></g><g><title>AppKit`-[NSView _updateLayerBackedness] (1 samples, 0.03%)</title><rect x="0.7861%" y="1141" width="0.0281%" height="15" fill="rgb(244,107,35)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1151.50"></text></g><g><title>AppKit`-[NSView _createLayerAndInitialize] (1 samples, 0.03%)</title><rect x="0.7861%" y="1125" width="0.0281%" height="15" fill="rgb(205,140,8)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1135.50"></text></g><g><title>AppKit`-[NSView(NSPrivateLayerSupport) _createLayer] (1 samples, 0.03%)</title><rect x="0.7861%" y="1109" width="0.0281%" height="15" fill="rgb(228,84,46)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1119.50"></text></g><g><title>QuartzCore`+[CALayer layer] (1 samples, 0.03%)</title><rect x="0.7861%" y="1093" width="0.0281%" height="15" fill="rgb(254,188,9)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1103.50"></text></g><g><title>QuartzCore`-[CALayer init] (1 samples, 0.03%)</title><rect x="0.7861%" y="1077" width="0.0281%" height="15" fill="rgb(206,112,54)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1087.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (1 samples, 0.03%)</title><rect x="0.7861%" y="1061" width="0.0281%" height="15" fill="rgb(216,84,49)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1071.50"></text></g><g><title>QuartzCore`classDescription(objc_class*) (1 samples, 0.03%)</title><rect x="0.7861%" y="1045" width="0.0281%" height="15" fill="rgb(214,194,35)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1055.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.03%)</title><rect x="0.7861%" y="1029" width="0.0281%" height="15" fill="rgb(249,28,3)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1039.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.03%)</title><rect x="0.7861%" y="1013" width="0.0281%" height="15" fill="rgb(222,56,52)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1023.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.03%)</title><rect x="0.7861%" y="997" width="0.0281%" height="15" fill="rgb(245,217,50)" fg:x="28" fg:w="1"/><text x="1.0361%" y="1007.50"></text></g><g><title>libobjc.A.dylib`class_copyMethodList (1 samples, 0.03%)</title><rect x="0.7861%" y="981" width="0.0281%" height="15" fill="rgb(213,201,24)" fg:x="28" fg:w="1"/><text x="1.0361%" y="991.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (8 samples, 0.22%)</title><rect x="0.6176%" y="1237" width="0.2246%" height="15" fill="rgb(248,116,28)" fg:x="22" fg:w="8"/><text x="0.8676%" y="1247.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (4 samples, 0.11%)</title><rect x="0.7299%" y="1221" width="0.1123%" height="15" fill="rgb(219,72,43)" fg:x="26" fg:w="4"/><text x="0.9799%" y="1231.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (4 samples, 0.11%)</title><rect x="0.7299%" y="1205" width="0.1123%" height="15" fill="rgb(209,138,14)" fg:x="26" fg:w="4"/><text x="0.9799%" y="1215.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (3 samples, 0.08%)</title><rect x="0.7580%" y="1189" width="0.0842%" height="15" fill="rgb(222,18,33)" fg:x="27" fg:w="3"/><text x="1.0080%" y="1199.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView setAssociatedThemeFrame:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1173" width="0.0281%" height="15" fill="rgb(213,199,7)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1183.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1157" width="0.0281%" height="15" fill="rgb(250,110,10)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1167.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1141" width="0.0281%" height="15" fill="rgb(248,123,6)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1151.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (1 samples, 0.03%)</title><rect x="0.8141%" y="1125" width="0.0281%" height="15" fill="rgb(206,91,31)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1135.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView observeValueForKeyPath:ofObject:change:context:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1109" width="0.0281%" height="15" fill="rgb(211,154,13)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1119.50"></text></g><g><title>AppKit`-[NSThemeFrame _cuiMakeOrUpdateBackgroundLayer:topHeight:drawTopSeparator:bottomHeight:forTitlebar:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1093" width="0.0281%" height="15" fill="rgb(225,148,7)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1103.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1077" width="0.0281%" height="15" fill="rgb(220,160,43)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1087.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (1 samples, 0.03%)</title><rect x="0.8141%" y="1061" width="0.0281%" height="15" fill="rgb(213,52,39)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1071.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (1 samples, 0.03%)</title><rect x="0.8141%" y="1045" width="0.0281%" height="15" fill="rgb(243,137,7)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1055.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateLayer (1 samples, 0.03%)</title><rect x="0.8141%" y="1029" width="0.0281%" height="15" fill="rgb(230,79,13)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1039.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::MakeOrUpdateWindowFrameLayerNew (1 samples, 0.03%)</title><rect x="0.8141%" y="1013" width="0.0281%" height="15" fill="rgb(247,105,23)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1023.50"></text></g><g><title>CoreUI`-[CUIThemeFacet updateLayer:effects:] (1 samples, 0.03%)</title><rect x="0.8141%" y="997" width="0.0281%" height="15" fill="rgb(223,179,41)" fg:x="29" fg:w="1"/><text x="1.0641%" y="1007.50"></text></g><g><title>CoreUI`CreateARGBBitmapContext (1 samples, 0.03%)</title><rect x="0.8141%" y="981" width="0.0281%" height="15" fill="rgb(218,9,34)" fg:x="29" fg:w="1"/><text x="1.0641%" y="991.50"></text></g><g><title>CoreUI`CreateBitmapContext (1 samples, 0.03%)</title><rect x="0.8141%" y="965" width="0.0281%" height="15" fill="rgb(222,106,8)" fg:x="29" fg:w="1"/><text x="1.0641%" y="975.50"></text></g><g><title>CoreUI`CUICGBitmapContextCreate (1 samples, 0.03%)</title><rect x="0.8141%" y="949" width="0.0281%" height="15" fill="rgb(211,220,0)" fg:x="29" fg:w="1"/><text x="1.0641%" y="959.50"></text></g><g><title>CoreGraphics`bitmap_context_create (1 samples, 0.03%)</title><rect x="0.8141%" y="933" width="0.0281%" height="15" fill="rgb(229,52,16)" fg:x="29" fg:w="1"/><text x="1.0641%" y="943.50"></text></g><g><title>CoreGraphics`__CGBitmapContextDelegateCreate (1 samples, 0.03%)</title><rect x="0.8141%" y="917" width="0.0281%" height="15" fill="rgb(212,155,18)" fg:x="29" fg:w="1"/><text x="1.0641%" y="927.50"></text></g><g><title>CoreGraphics`ripc_Initialize (1 samples, 0.03%)</title><rect x="0.8141%" y="901" width="0.0281%" height="15" fill="rgb(242,21,14)" fg:x="29" fg:w="1"/><text x="1.0641%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="0.8141%" y="885" width="0.0281%" height="15" fill="rgb(222,19,48)" fg:x="29" fg:w="1"/><text x="1.0641%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="0.8141%" y="869" width="0.0281%" height="15" fill="rgb(232,45,27)" fg:x="29" fg:w="1"/><text x="1.0641%" y="879.50"></text></g><g><title>CoreGraphics`__create_default_transform_block_invoke (1 samples, 0.03%)</title><rect x="0.8141%" y="853" width="0.0281%" height="15" fill="rgb(249,103,42)" fg:x="29" fg:w="1"/><text x="1.0641%" y="863.50"></text></g><g><title>CoreGraphics`color_transform_create (1 samples, 0.03%)</title><rect x="0.8141%" y="837" width="0.0281%" height="15" fill="rgb(246,81,33)" fg:x="29" fg:w="1"/><text x="1.0641%" y="847.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.03%)</title><rect x="0.8141%" y="821" width="0.0281%" height="15" fill="rgb(252,33,42)" fg:x="29" fg:w="1"/><text x="1.0641%" y="831.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateGenericCMYK (1 samples, 0.03%)</title><rect x="0.8141%" y="805" width="0.0281%" height="15" fill="rgb(209,212,41)" fg:x="29" fg:w="1"/><text x="1.0641%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="0.8141%" y="789" width="0.0281%" height="15" fill="rgb(207,154,6)" fg:x="29" fg:w="1"/><text x="1.0641%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="0.8141%" y="773" width="0.0281%" height="15" fill="rgb(223,64,47)" fg:x="29" fg:w="1"/><text x="1.0641%" y="783.50"></text></g><g><title>CoreGraphics`__CGColorSpaceCreateGenericCMYK_block_invoke (1 samples, 0.03%)</title><rect x="0.8141%" y="757" width="0.0281%" height="15" fill="rgb(211,161,38)" fg:x="29" fg:w="1"/><text x="1.0641%" y="767.50"></text></g><g><title>CoreGraphics`create_singleton (1 samples, 0.03%)</title><rect x="0.8141%" y="741" width="0.0281%" height="15" fill="rgb(219,138,40)" fg:x="29" fg:w="1"/><text x="1.0641%" y="751.50"></text></g><g><title>CoreGraphics`color_space_state_create_generic_cmyk (1 samples, 0.03%)</title><rect x="0.8141%" y="725" width="0.0281%" height="15" fill="rgb(241,228,46)" fg:x="29" fg:w="1"/><text x="1.0641%" y="735.50"></text></g><g><title>CoreGraphics`create_from_profile (1 samples, 0.03%)</title><rect x="0.8141%" y="709" width="0.0281%" height="15" fill="rgb(223,209,38)" fg:x="29" fg:w="1"/><text x="1.0641%" y="719.50"></text></g><g><title>ColorSync`ColorSyncProfileCopyData (1 samples, 0.03%)</title><rect x="0.8141%" y="693" width="0.0281%" height="15" fill="rgb(236,164,45)" fg:x="29" fg:w="1"/><text x="1.0641%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (1 samples, 0.03%)</title><rect x="0.8141%" y="677" width="0.0281%" height="15" fill="rgb(231,15,5)" fg:x="29" fg:w="1"/><text x="1.0641%" y="687.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window::create_window (10 samples, 0.28%)</title><rect x="0.5896%" y="1349" width="0.2807%" height="15" fill="rgb(252,35,15)" fg:x="21" fg:w="10"/><text x="0.8396%" y="1359.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (10 samples, 0.28%)</title><rect x="0.5896%" y="1333" width="0.2807%" height="15" fill="rgb(248,181,18)" fg:x="21" fg:w="10"/><text x="0.8396%" y="1343.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (10 samples, 0.28%)</title><rect x="0.5896%" y="1317" width="0.2807%" height="15" fill="rgb(233,39,42)" fg:x="21" fg:w="10"/><text x="0.8396%" y="1327.50"></text></g><g><title>rust-sokoban`&lt;(A,B,C,D) as objc::message::MessageArguments&gt;::invoke (10 samples, 0.28%)</title><rect x="0.5896%" y="1301" width="0.2807%" height="15" fill="rgb(238,110,33)" fg:x="21" fg:w="10"/><text x="0.8396%" y="1311.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (10 samples, 0.28%)</title><rect x="0.5896%" y="1285" width="0.2807%" height="15" fill="rgb(233,195,10)" fg:x="21" fg:w="10"/><text x="0.8396%" y="1295.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (10 samples, 0.28%)</title><rect x="0.5896%" y="1269" width="0.2807%" height="15" fill="rgb(254,105,3)" fg:x="21" fg:w="10"/><text x="0.8396%" y="1279.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (9 samples, 0.25%)</title><rect x="0.6176%" y="1253" width="0.2527%" height="15" fill="rgb(221,225,9)" fg:x="22" fg:w="9"/><text x="0.8676%" y="1263.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (1 samples, 0.03%)</title><rect x="0.8422%" y="1237" width="0.0281%" height="15" fill="rgb(224,227,45)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1247.50"></text></g><g><title>AppKit`-[NSWindow _setColorSpace:sendNotification:displayIfChanged:] (1 samples, 0.03%)</title><rect x="0.8422%" y="1221" width="0.0281%" height="15" fill="rgb(229,198,43)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1231.50"></text></g><g><title>AppKit`-[NSWindow _adjustDynamicDepthLimit] (1 samples, 0.03%)</title><rect x="0.8422%" y="1205" width="0.0281%" height="15" fill="rgb(206,209,35)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1215.50"></text></g><g><title>AppKit`-[NSColorSpace(NSColorGamut) colorGamut] (1 samples, 0.03%)</title><rect x="0.8422%" y="1189" width="0.0281%" height="15" fill="rgb(245,195,53)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1199.50"></text></g><g><title>AppKit`+[_NSAxisAlignedVolumeColorGamut gamutWithCGColorSpace:] (1 samples, 0.03%)</title><rect x="0.8422%" y="1173" width="0.0281%" height="15" fill="rgb(240,92,26)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1183.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertComponentData (1 samples, 0.03%)</title><rect x="0.8422%" y="1157" width="0.0281%" height="15" fill="rgb(207,40,23)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1167.50"></text></g><g><title>CoreGraphics`CGColorTransformConvert (1 samples, 0.03%)</title><rect x="0.8422%" y="1141" width="0.0281%" height="15" fill="rgb(223,111,35)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1151.50"></text></g><g><title>CoreGraphics`CGColorTransformCreateCGCMSConverter (1 samples, 0.03%)</title><rect x="0.8422%" y="1125" width="0.0281%" height="15" fill="rgb(229,147,28)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1135.50"></text></g><g><title>CoreGraphics`CGColorTransformCacheCreateConverter (1 samples, 0.03%)</title><rect x="0.8422%" y="1109" width="0.0281%" height="15" fill="rgb(211,29,28)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1119.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreate (1 samples, 0.03%)</title><rect x="0.8422%" y="1093" width="0.0281%" height="15" fill="rgb(228,72,33)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1103.50"></text></g><g><title>CoreGraphics`CGColorSyncTransformCacheGetRetained (1 samples, 0.03%)</title><rect x="0.8422%" y="1077" width="0.0281%" height="15" fill="rgb(205,214,31)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1087.50"></text></g><g><title>ColorSync`ColorSyncTransformCreate (1 samples, 0.03%)</title><rect x="0.8422%" y="1061" width="0.0281%" height="15" fill="rgb(224,111,15)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1071.50"></text></g><g><title>ColorSync`AppleCMMInitializeTransform (1 samples, 0.03%)</title><rect x="0.8422%" y="1045" width="0.0281%" height="15" fill="rgb(253,21,26)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1055.50"></text></g><g><title>ColorSync`DoInitializeTransform (1 samples, 0.03%)</title><rect x="0.8422%" y="1029" width="0.0281%" height="15" fill="rgb(245,139,43)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1039.50"></text></g><g><title>ColorSync`CMMProfileInfoContainer::CMMProfileInfoContainer (1 samples, 0.03%)</title><rect x="0.8422%" y="1013" width="0.0281%" height="15" fill="rgb(252,170,7)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1023.50"></text></g><g><title>ColorSync`CMMProfileInfo::CMMProfileInfo (1 samples, 0.03%)</title><rect x="0.8422%" y="997" width="0.0281%" height="15" fill="rgb(231,118,14)" fg:x="30" fg:w="1"/><text x="1.0922%" y="1007.50"></text></g><g><title>ColorSync`CMMProfile::GenericGetConversionType (1 samples, 0.03%)</title><rect x="0.8422%" y="981" width="0.0281%" height="15" fill="rgb(238,83,0)" fg:x="30" fg:w="1"/><text x="1.0922%" y="991.50"></text></g><g><title>CoreFoundation`CFEqual (1 samples, 0.03%)</title><rect x="0.8422%" y="965" width="0.0281%" height="15" fill="rgb(221,39,39)" fg:x="30" fg:w="1"/><text x="1.0922%" y="975.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::GlBackendSpec as ggez::graphics::BackendSpec&gt;::init (23 samples, 0.65%)</title><rect x="0.2527%" y="1445" width="0.6457%" height="15" fill="rgb(222,119,46)" fg:x="9" fg:w="23"/><text x="0.5027%" y="1455.50"></text></g><g><title>rust-sokoban`glutin::windowed::_&lt;impl glutin::ContextBuilder&lt;T&gt;&gt;::build_windowed (19 samples, 0.53%)</title><rect x="0.3650%" y="1429" width="0.5334%" height="15" fill="rgb(222,165,49)" fg:x="13" fg:w="19"/><text x="0.6150%" y="1439.50"></text></g><g><title>rust-sokoban`glutin::platform_impl::platform_impl::Context::new_windowed (19 samples, 0.53%)</title><rect x="0.3650%" y="1413" width="0.5334%" height="15" fill="rgb(219,113,52)" fg:x="13" fg:w="19"/><text x="0.6150%" y="1423.50"></text></g><g><title>rust-sokoban`winit::window::WindowBuilder::build (12 samples, 0.34%)</title><rect x="0.5615%" y="1397" width="0.3369%" height="15" fill="rgb(214,7,15)" fg:x="20" fg:w="12"/><text x="0.8115%" y="1407.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::Window::new (12 samples, 0.34%)</title><rect x="0.5615%" y="1381" width="0.3369%" height="15" fill="rgb(235,32,4)" fg:x="20" fg:w="12"/><text x="0.8115%" y="1391.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window::UnownedWindow::new (12 samples, 0.34%)</title><rect x="0.5615%" y="1365" width="0.3369%" height="15" fill="rgb(238,90,54)" fg:x="20" fg:w="12"/><text x="0.8115%" y="1375.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window_delegate::new_delegate (1 samples, 0.03%)</title><rect x="0.8703%" y="1349" width="0.0281%" height="15" fill="rgb(213,208,19)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1359.50"></text></g><g><title>rust-sokoban`&lt;winit::platform_impl::platform::window_delegate::WINDOW_DELEGATE_CLASS as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="0.8703%" y="1333" width="0.0281%" height="15" fill="rgb(233,156,4)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1343.50"></text></g><g><title>rust-sokoban`std::sync::once::Once::call_once (1 samples, 0.03%)</title><rect x="0.8703%" y="1317" width="0.0281%" height="15" fill="rgb(207,194,5)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1327.50"></text></g><g><title>rust-sokoban`std::sync::once::Once::call_inner (1 samples, 0.03%)</title><rect x="0.8703%" y="1301" width="0.0281%" height="15" fill="rgb(206,111,30)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1311.50"></text></g><g><title>rust-sokoban`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.03%)</title><rect x="0.8703%" y="1285" width="0.0281%" height="15" fill="rgb(243,70,54)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1295.50"></text></g><g><title>rust-sokoban`lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (1 samples, 0.03%)</title><rect x="0.8703%" y="1269" width="0.0281%" height="15" fill="rgb(242,28,8)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1279.50"></text></g><g><title>rust-sokoban`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="0.8703%" y="1253" width="0.0281%" height="15" fill="rgb(219,106,18)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1263.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.03%)</title><rect x="0.8703%" y="1237" width="0.0281%" height="15" fill="rgb(244,222,10)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1247.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (1 samples, 0.03%)</title><rect x="0.8703%" y="1221" width="0.0281%" height="15" fill="rgb(236,179,52)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1231.50"></text></g><g><title>dyld`objc::lookup8 (1 samples, 0.03%)</title><rect x="0.8703%" y="1205" width="0.0281%" height="15" fill="rgb(213,23,39)" fg:x="31" fg:w="1"/><text x="1.1203%" y="1215.50"></text></g><g><title>rust-sokoban`ab_glyph::font_arc::FontArc::try_from_slice (1 samples, 0.03%)</title><rect x="0.8984%" y="1445" width="0.0281%" height="15" fill="rgb(238,48,10)" fg:x="32" fg:w="1"/><text x="1.1484%" y="1455.50"></text></g><g><title>rust-sokoban`ab_glyph::ttfp::FontRef::try_from_slice (1 samples, 0.03%)</title><rect x="0.8984%" y="1429" width="0.0281%" height="15" fill="rgb(251,196,23)" fg:x="32" fg:w="1"/><text x="1.1484%" y="1439.50"></text></g><g><title>rust-sokoban`ttf_parser::Face::from_slice (1 samples, 0.03%)</title><rect x="0.8984%" y="1413" width="0.0281%" height="15" fill="rgb(250,152,24)" fg:x="32" fg:w="1"/><text x="1.1484%" y="1423.50"></text></g><g><title>rust-sokoban`ggez::graphics::context::GraphicsContextGeneric&lt;B&gt;::set_window_mode (1 samples, 0.03%)</title><rect x="0.9264%" y="1445" width="0.0281%" height="15" fill="rgb(209,150,17)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1455.50"></text></g><g><title>rust-sokoban`winit::window::Window::set_maximized (1 samples, 0.03%)</title><rect x="0.9264%" y="1429" width="0.0281%" height="15" fill="rgb(234,202,34)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1439.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window::UnownedWindow::set_maximized (1 samples, 0.03%)</title><rect x="0.9264%" y="1413" width="0.0281%" height="15" fill="rgb(253,148,53)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1423.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window::UnownedWindow::is_zoomed (1 samples, 0.03%)</title><rect x="0.9264%" y="1397" width="0.0281%" height="15" fill="rgb(218,129,16)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1407.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::window::UnownedWindow::set_style_mask_sync (1 samples, 0.03%)</title><rect x="0.9264%" y="1381" width="0.0281%" height="15" fill="rgb(216,85,19)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1391.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::util::async::set_style_mask_sync (1 samples, 0.03%)</title><rect x="0.9264%" y="1365" width="0.0281%" height="15" fill="rgb(235,228,7)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1375.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::util::async::set_style_mask (1 samples, 0.03%)</title><rect x="0.9264%" y="1349" width="0.0281%" height="15" fill="rgb(245,175,0)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1359.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::setStyleMask_ (1 samples, 0.03%)</title><rect x="0.9264%" y="1333" width="0.0281%" height="15" fill="rgb(208,168,36)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1343.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (1 samples, 0.03%)</title><rect x="0.9264%" y="1317" width="0.0281%" height="15" fill="rgb(246,171,24)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1327.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.03%)</title><rect x="0.9264%" y="1301" width="0.0281%" height="15" fill="rgb(215,142,24)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1311.50"></text></g><g><title>AppKit`-[NSWindow setStyleMask:] (1 samples, 0.03%)</title><rect x="0.9264%" y="1285" width="0.0281%" height="15" fill="rgb(250,187,7)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1295.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (1 samples, 0.03%)</title><rect x="0.9264%" y="1269" width="0.0281%" height="15" fill="rgb(228,66,33)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1279.50"></text></g><g><title>AppKit`__25-[NSWindow setStyleMask:]_block_invoke (1 samples, 0.03%)</title><rect x="0.9264%" y="1253" width="0.0281%" height="15" fill="rgb(234,215,21)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1263.50"></text></g><g><title>AppKit`-[NSThemeFrame setStyleMask:] (1 samples, 0.03%)</title><rect x="0.9264%" y="1237" width="0.0281%" height="15" fill="rgb(222,191,20)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1247.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _noteAllowedResizeDirectionsMayHaveChanged] (1 samples, 0.03%)</title><rect x="0.9264%" y="1221" width="0.0281%" height="15" fill="rgb(245,79,54)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1231.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _updateEdgeResizingTrackingAreas] (1 samples, 0.03%)</title><rect x="0.9264%" y="1205" width="0.0281%" height="15" fill="rgb(240,10,37)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1215.50"></text></g><g><title>Foundation`-[NSConcreteHashTable addObject:] (1 samples, 0.03%)</title><rect x="0.9264%" y="1189" width="0.0281%" height="15" fill="rgb(214,192,32)" fg:x="33" fg:w="1"/><text x="1.1764%" y="1199.50"></text></g><g><title>libGLProgrammability.dylib`glpASTMergePhase1AddTopLevelNode (1 samples, 0.03%)</title><rect x="0.9545%" y="1285" width="0.0281%" height="15" fill="rgb(209,36,54)" fg:x="34" fg:w="1"/><text x="1.2045%" y="1295.50"></text></g><g><title>libGLProgrammability.dylib`phase1ProcessVariableDeclaration (1 samples, 0.03%)</title><rect x="0.9545%" y="1269" width="0.0281%" height="15" fill="rgb(220,10,11)" fg:x="34" fg:w="1"/><text x="1.2045%" y="1279.50"></text></g><g><title>libGLProgrammability.dylib`_glpStringHashRealPut (1 samples, 0.03%)</title><rect x="0.9545%" y="1253" width="0.0281%" height="15" fill="rgb(221,106,17)" fg:x="34" fg:w="1"/><text x="1.2045%" y="1263.50"></text></g><g><title>libGLProgrammability.dylib`glpGenerateCopyInOut (1 samples, 0.03%)</title><rect x="0.9826%" y="1285" width="0.0281%" height="15" fill="rgb(251,142,44)" fg:x="35" fg:w="1"/><text x="1.2326%" y="1295.50"></text></g><g><title>libGLProgrammability.dylib`glpTypeGetAppleVec4Types (1 samples, 0.03%)</title><rect x="0.9826%" y="1269" width="0.0281%" height="15" fill="rgb(238,13,15)" fg:x="35" fg:w="1"/><text x="1.2326%" y="1279.50"></text></g><g><title>libGLProgrammability.dylib`glpGetVectorType (1 samples, 0.03%)</title><rect x="0.9826%" y="1253" width="0.0281%" height="15" fill="rgb(208,107,27)" fg:x="35" fg:w="1"/><text x="1.2326%" y="1263.50"></text></g><g><title>rust-sokoban`gfx::factory::FactoryExt::create_pipeline_state (3 samples, 0.08%)</title><rect x="0.9545%" y="1429" width="0.0842%" height="15" fill="rgb(205,136,37)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1439.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_program (3 samples, 0.08%)</title><rect x="0.9545%" y="1413" width="0.0842%" height="15" fill="rgb(250,205,27)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1423.50"></text></g><g><title>rust-sokoban`gfx_device_gl::factory::Factory::create_program_raw (3 samples, 0.08%)</title><rect x="0.9545%" y="1397" width="0.0842%" height="15" fill="rgb(210,80,43)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1407.50"></text></g><g><title>rust-sokoban`gfx_device_gl::shade::create_program (3 samples, 0.08%)</title><rect x="0.9545%" y="1381" width="0.0842%" height="15" fill="rgb(247,160,36)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1391.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::LinkProgram (3 samples, 0.08%)</title><rect x="0.9545%" y="1365" width="0.0842%" height="15" fill="rgb(234,13,49)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1375.50"></text></g><g><title>GLEngine`glLinkProgramARB_Exec (3 samples, 0.08%)</title><rect x="0.9545%" y="1349" width="0.0842%" height="15" fill="rgb(234,122,0)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1359.50"></text></g><g><title>GLEngine`gleLinkProgram (3 samples, 0.08%)</title><rect x="0.9545%" y="1333" width="0.0842%" height="15" fill="rgb(207,146,38)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1343.50"></text></g><g><title>libGLProgrammability.dylib`ShLink (3 samples, 0.08%)</title><rect x="0.9545%" y="1317" width="0.0842%" height="15" fill="rgb(207,177,25)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1327.50"></text></g><g><title>libGLProgrammability.dylib`glpLinkProgram (3 samples, 0.08%)</title><rect x="0.9545%" y="1301" width="0.0842%" height="15" fill="rgb(211,178,42)" fg:x="34" fg:w="3"/><text x="1.2045%" y="1311.50"></text></g><g><title>libGLProgrammability.dylib`glpLLVMCGTopLevel (1 samples, 0.03%)</title><rect x="1.0107%" y="1285" width="0.0281%" height="15" fill="rgb(230,69,54)" fg:x="36" fg:w="1"/><text x="1.2607%" y="1295.50"></text></g><g><title>libGLProgrammability.dylib`glpInitSerialContext (1 samples, 0.03%)</title><rect x="1.0107%" y="1269" width="0.0281%" height="15" fill="rgb(214,135,41)" fg:x="36" fg:w="1"/><text x="1.2607%" y="1279.50"></text></g><g><title>libGLProgrammability.dylib`glpMakeStringHash (1 samples, 0.03%)</title><rect x="1.0107%" y="1253" width="0.0281%" height="15" fill="rgb(237,67,25)" fg:x="36" fg:w="1"/><text x="1.2607%" y="1263.50"></text></g><g><title>libGLProgrammability.dylib`___componentwiseConstructor_block_invoke (1 samples, 0.03%)</title><rect x="1.0387%" y="997" width="0.0281%" height="15" fill="rgb(222,189,50)" fg:x="37" fg:w="1"/><text x="1.2887%" y="1007.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (1 samples, 0.03%)</title><rect x="1.0387%" y="981" width="0.0281%" height="15" fill="rgb(245,148,34)" fg:x="37" fg:w="1"/><text x="1.2887%" y="991.50"></text></g><g><title>libGLProgrammability.dylib`glpSAArrayAccess (1 samples, 0.03%)</title><rect x="1.0387%" y="965" width="0.0281%" height="15" fill="rgb(222,29,6)" fg:x="37" fg:w="1"/><text x="1.2887%" y="975.50"></text></g><g><title>libGLProgrammability.dylib`glpIndirectArrayElement (1 samples, 0.03%)</title><rect x="1.0387%" y="949" width="0.0281%" height="15" fill="rgb(221,189,43)" fg:x="37" fg:w="1"/><text x="1.2887%" y="959.50"></text></g><g><title>libGLProgrammability.dylib`glpMakeArrayIndexOffsetFragment (1 samples, 0.03%)</title><rect x="1.0387%" y="933" width="0.0281%" height="15" fill="rgb(207,36,27)" fg:x="37" fg:w="1"/><text x="1.2887%" y="943.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (1 samples, 0.03%)</title><rect x="1.0387%" y="917" width="0.0281%" height="15" fill="rgb(217,90,24)" fg:x="37" fg:w="1"/><text x="1.2887%" y="927.50"></text></g><g><title>libGLProgrammability.dylib`glpAnalyzeBinaryMathOp (1 samples, 0.03%)</title><rect x="1.0387%" y="901" width="0.0281%" height="15" fill="rgb(224,66,35)" fg:x="37" fg:w="1"/><text x="1.2887%" y="911.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (1 samples, 0.03%)</title><rect x="1.0387%" y="885" width="0.0281%" height="15" fill="rgb(221,13,50)" fg:x="37" fg:w="1"/><text x="1.2887%" y="895.50"></text></g><g><title>libGLProgrammability.dylib`glpSAFunctionCall (1 samples, 0.03%)</title><rect x="1.0387%" y="869" width="0.0281%" height="15" fill="rgb(236,68,49)" fg:x="37" fg:w="1"/><text x="1.2887%" y="879.50"></text></g><g><title>libGLProgrammability.dylib`glpLowerCallToBodilessPPStreamOp (1 samples, 0.03%)</title><rect x="1.0387%" y="853" width="0.0281%" height="15" fill="rgb(229,146,28)" fg:x="37" fg:w="1"/><text x="1.2887%" y="863.50"></text></g><g><title>libGLProgrammability.dylib`glpMakeMutableValue (1 samples, 0.03%)</title><rect x="1.0387%" y="837" width="0.0281%" height="15" fill="rgb(225,31,38)" fg:x="37" fg:w="1"/><text x="1.2887%" y="847.50"></text></g><g><title>libGLProgrammability.dylib`glpABIGetTypeSize (1 samples, 0.03%)</title><rect x="1.0387%" y="821" width="0.0281%" height="15" fill="rgb(250,208,3)" fg:x="37" fg:w="1"/><text x="1.2887%" y="831.50"></text></g><g><title>libGLProgrammability.dylib`applevec4TypeSize (1 samples, 0.03%)</title><rect x="1.0387%" y="805" width="0.0281%" height="15" fill="rgb(246,54,23)" fg:x="37" fg:w="1"/><text x="1.2887%" y="815.50"></text></g><g><title>libGLProgrammability.dylib`glpPrimitiveTypeGetNumVec4s (1 samples, 0.03%)</title><rect x="1.0387%" y="789" width="0.0281%" height="15" fill="rgb(243,76,11)" fg:x="37" fg:w="1"/><text x="1.2887%" y="799.50"></text></g><g><title>libGLProgrammability.dylib`glpPrimitiveTypeGetMaxComponentsPerVec4 (1 samples, 0.03%)</title><rect x="1.0387%" y="773" width="0.0281%" height="15" fill="rgb(245,21,50)" fg:x="37" fg:w="1"/><text x="1.2887%" y="783.50"></text></g><g><title>libGLProgrammability.dylib`glpPrimitiveTypeGetScalarType (1 samples, 0.03%)</title><rect x="1.0387%" y="757" width="0.0281%" height="15" fill="rgb(228,9,43)" fg:x="37" fg:w="1"/><text x="1.2887%" y="767.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1285" width="0.0561%" height="15" fill="rgb(208,100,47)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1295.50"></text></g><g><title>libGLProgrammability.dylib`glpSATopLevel (2 samples, 0.06%)</title><rect x="1.0387%" y="1269" width="0.0561%" height="15" fill="rgb(232,26,8)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1279.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1253" width="0.0561%" height="15" fill="rgb(216,166,38)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1263.50"></text></g><g><title>libGLProgrammability.dylib`glpSAFunctionDefinition (2 samples, 0.06%)</title><rect x="1.0387%" y="1237" width="0.0561%" height="15" fill="rgb(251,202,51)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1247.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1221" width="0.0561%" height="15" fill="rgb(254,216,34)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1231.50"></text></g><g><title>libGLProgrammability.dylib`glpSABlock (2 samples, 0.06%)</title><rect x="1.0387%" y="1205" width="0.0561%" height="15" fill="rgb(251,32,27)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1215.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1189" width="0.0561%" height="15" fill="rgb(208,127,28)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1199.50"></text></g><g><title>libGLProgrammability.dylib`glpSAExpressionStatement (2 samples, 0.06%)</title><rect x="1.0387%" y="1173" width="0.0561%" height="15" fill="rgb(224,137,22)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1183.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1157" width="0.0561%" height="15" fill="rgb(254,70,32)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1167.50"></text></g><g><title>libGLProgrammability.dylib`glpSAVariableDeclarationGroup (2 samples, 0.06%)</title><rect x="1.0387%" y="1141" width="0.0561%" height="15" fill="rgb(229,75,37)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1151.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1125" width="0.0561%" height="15" fill="rgb(252,64,23)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1135.50"></text></g><g><title>libGLProgrammability.dylib`glpSAVariableDeclaration (2 samples, 0.06%)</title><rect x="1.0387%" y="1109" width="0.0561%" height="15" fill="rgb(232,162,48)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1119.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (2 samples, 0.06%)</title><rect x="1.0387%" y="1093" width="0.0561%" height="15" fill="rgb(246,160,12)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1103.50"></text></g><g><title>libGLProgrammability.dylib`glpSAConstructorCall (2 samples, 0.06%)</title><rect x="1.0387%" y="1077" width="0.0561%" height="15" fill="rgb(247,166,0)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1087.50"></text></g><g><title>libGLProgrammability.dylib`glpCheckAndSanitizeConstructorCall (2 samples, 0.06%)</title><rect x="1.0387%" y="1061" width="0.0561%" height="15" fill="rgb(249,219,21)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1071.50"></text></g><g><title>libGLProgrammability.dylib`_checkAndSanitizeComponentwiseConstructorCall (2 samples, 0.06%)</title><rect x="1.0387%" y="1045" width="0.0561%" height="15" fill="rgb(205,209,3)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1055.50"></text></g><g><title>libGLProgrammability.dylib`_componentwiseConstructor (2 samples, 0.06%)</title><rect x="1.0387%" y="1029" width="0.0561%" height="15" fill="rgb(243,44,1)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1039.50"></text></g><g><title>libGLProgrammability.dylib`_constructor (2 samples, 0.06%)</title><rect x="1.0387%" y="1013" width="0.0561%" height="15" fill="rgb(206,159,16)" fg:x="37" fg:w="2"/><text x="1.2887%" y="1023.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (1 samples, 0.03%)</title><rect x="1.0668%" y="997" width="0.0281%" height="15" fill="rgb(244,77,30)" fg:x="38" fg:w="1"/><text x="1.3168%" y="1007.50"></text></g><g><title>libGLProgrammability.dylib`glpSACommaExpr (1 samples, 0.03%)</title><rect x="1.0668%" y="981" width="0.0281%" height="15" fill="rgb(218,69,12)" fg:x="38" fg:w="1"/><text x="1.3168%" y="991.50"></text></g><g><title>libGLProgrammability.dylib`glpSANode (1 samples, 0.03%)</title><rect x="1.0668%" y="965" width="0.0281%" height="15" fill="rgb(212,87,7)" fg:x="38" fg:w="1"/><text x="1.3168%" y="975.50"></text></g><g><title>libGLProgrammability.dylib`glpSAVariableIdentifier (1 samples, 0.03%)</title><rect x="1.0668%" y="949" width="0.0281%" height="15" fill="rgb(245,114,25)" fg:x="38" fg:w="1"/><text x="1.3168%" y="959.50"></text></g><g><title>libGLProgrammability.dylib`glpNameTableGet (1 samples, 0.03%)</title><rect x="1.0668%" y="933" width="0.0281%" height="15" fill="rgb(210,61,42)" fg:x="38" fg:w="1"/><text x="1.3168%" y="943.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1237" width="0.0281%" height="15" fill="rgb(211,52,33)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1247.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1221" width="0.0281%" height="15" fill="rgb(234,58,33)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1231.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1205" width="0.0281%" height="15" fill="rgb(220,115,36)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1215.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1189" width="0.0281%" height="15" fill="rgb(243,153,54)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1199.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1173" width="0.0281%" height="15" fill="rgb(251,47,18)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1183.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1157" width="0.0281%" height="15" fill="rgb(242,102,42)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1167.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1141" width="0.0281%" height="15" fill="rgb(234,31,38)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1151.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1125" width="0.0281%" height="15" fill="rgb(221,117,51)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1135.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (1 samples, 0.03%)</title><rect x="1.0949%" y="1109" width="0.0281%" height="15" fill="rgb(212,20,18)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="1.0949%" y="1093" width="0.0281%" height="15" fill="rgb(245,133,36)" fg:x="39" fg:w="1"/><text x="1.3449%" y="1103.50"></text></g><g><title>rust-sokoban`ggez::graphics::shader::create_shader (7 samples, 0.20%)</title><rect x="0.9545%" y="1445" width="0.1965%" height="15" fill="rgb(212,6,19)" fg:x="34" fg:w="7"/><text x="1.2045%" y="1455.50"></text></g><g><title>rust-sokoban`gfx::factory::FactoryExt::create_shader_set (4 samples, 0.11%)</title><rect x="1.0387%" y="1429" width="0.1123%" height="15" fill="rgb(218,1,36)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1439.50"></text></g><g><title>rust-sokoban`gfx_core::factory::Factory::create_shader_vertex (4 samples, 0.11%)</title><rect x="1.0387%" y="1413" width="0.1123%" height="15" fill="rgb(246,84,54)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1423.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_shader (4 samples, 0.11%)</title><rect x="1.0387%" y="1397" width="0.1123%" height="15" fill="rgb(242,110,6)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1407.50"></text></g><g><title>rust-sokoban`gfx_device_gl::shade::create_shader (4 samples, 0.11%)</title><rect x="1.0387%" y="1381" width="0.1123%" height="15" fill="rgb(214,47,5)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1391.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::CompileShader (4 samples, 0.11%)</title><rect x="1.0387%" y="1365" width="0.1123%" height="15" fill="rgb(218,159,25)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1375.50"></text></g><g><title>GLEngine`glCompileShaderIncludeARB_Exec (4 samples, 0.11%)</title><rect x="1.0387%" y="1349" width="0.1123%" height="15" fill="rgb(215,211,28)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1359.50"></text></g><g><title>GLEngine`gleShaderParse (4 samples, 0.11%)</title><rect x="1.0387%" y="1333" width="0.1123%" height="15" fill="rgb(238,59,32)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1343.50"></text></g><g><title>libGLProgrammability.dylib`ShCompile (4 samples, 0.11%)</title><rect x="1.0387%" y="1317" width="0.1123%" height="15" fill="rgb(226,82,3)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1327.50"></text></g><g><title>libGLProgrammability.dylib`glpCompileShader (4 samples, 0.11%)</title><rect x="1.0387%" y="1301" width="0.1123%" height="15" fill="rgb(240,164,32)" fg:x="37" fg:w="4"/><text x="1.2887%" y="1311.50"></text></g><g><title>libGLProgrammability.dylib`glpSerializeAST (2 samples, 0.06%)</title><rect x="1.0949%" y="1285" width="0.0561%" height="15" fill="rgb(232,46,7)" fg:x="39" fg:w="2"/><text x="1.3449%" y="1295.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (2 samples, 0.06%)</title><rect x="1.0949%" y="1269" width="0.0561%" height="15" fill="rgb(229,129,53)" fg:x="39" fg:w="2"/><text x="1.3449%" y="1279.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPASTNode (2 samples, 0.06%)</title><rect x="1.0949%" y="1253" width="0.0561%" height="15" fill="rgb(234,188,29)" fg:x="39" fg:w="2"/><text x="1.3449%" y="1263.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPInterfaceBlockObject (1 samples, 0.03%)</title><rect x="1.1230%" y="1237" width="0.0281%" height="15" fill="rgb(246,141,4)" fg:x="40" fg:w="1"/><text x="1.3730%" y="1247.50"></text></g><g><title>libGLProgrammability.dylib`serialize_GLPVariableObject (1 samples, 0.03%)</title><rect x="1.1230%" y="1221" width="0.0281%" height="15" fill="rgb(229,23,39)" fg:x="40" fg:w="1"/><text x="1.3730%" y="1231.50"></text></g><g><title>libGLProgrammability.dylib`real_serialize_GLPValue (1 samples, 0.03%)</title><rect x="1.1230%" y="1205" width="0.0281%" height="15" fill="rgb(206,12,3)" fg:x="40" fg:w="1"/><text x="1.3730%" y="1215.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="1.1230%" y="1189" width="0.0281%" height="15" fill="rgb(252,226,20)" fg:x="40" fg:w="1"/><text x="1.3730%" y="1199.50"></text></g><g><title>rust-sokoban`ggez::graphics::context::GraphicsContextGeneric&lt;ggez::graphics::GlBackendSpec&gt;::new (33 samples, 0.93%)</title><rect x="0.2527%" y="1461" width="0.9264%" height="15" fill="rgb(216,123,35)" fg:x="9" fg:w="33"/><text x="0.5027%" y="1471.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::builder::GlyphBrushBuilder&lt;()&gt;::using_font (1 samples, 0.03%)</title><rect x="1.1510%" y="1445" width="0.0281%" height="15" fill="rgb(212,68,40)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1455.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::builder::GlyphBrushBuilder&lt;()&gt;::using_fonts (1 samples, 0.03%)</title><rect x="1.1510%" y="1429" width="0.0281%" height="15" fill="rgb(254,125,32)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1439.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::builder::GlyphBrushBuilder&lt;()&gt;::without_fonts (1 samples, 0.03%)</title><rect x="1.1510%" y="1413" width="0.0281%" height="15" fill="rgb(253,97,22)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1423.50"></text></g><g><title>rust-sokoban`&lt;twox_hash::std_support::sixty_four::RandomXxHashBuilder64 as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="1.1510%" y="1397" width="0.0281%" height="15" fill="rgb(241,101,14)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1407.50"></text></g><g><title>rust-sokoban`twox_hash::std_support::sixty_four::RandomXxHashBuilder64::new (1 samples, 0.03%)</title><rect x="1.1510%" y="1381" width="0.0281%" height="15" fill="rgb(238,103,29)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1391.50"></text></g><g><title>rust-sokoban`rand::rng::Rng::gen (1 samples, 0.03%)</title><rect x="1.1510%" y="1365" width="0.0281%" height="15" fill="rgb(233,195,47)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1375.50"></text></g><g><title>rust-sokoban`rand::distributions::integer::_&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.03%)</title><rect x="1.1510%" y="1349" width="0.0281%" height="15" fill="rgb(246,218,30)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1359.50"></text></g><g><title>rust-sokoban`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.03%)</title><rect x="1.1510%" y="1333" width="0.0281%" height="15" fill="rgb(219,145,47)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1343.50"></text></g><g><title>rust-sokoban`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.03%)</title><rect x="1.1510%" y="1317" width="0.0281%" height="15" fill="rgb(243,12,26)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1327.50"></text></g><g><title>rust-sokoban`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.03%)</title><rect x="1.1510%" y="1301" width="0.0281%" height="15" fill="rgb(214,87,16)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1311.50"></text></g><g><title>rust-sokoban`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.03%)</title><rect x="1.1510%" y="1285" width="0.0281%" height="15" fill="rgb(208,99,42)" fg:x="41" fg:w="1"/><text x="1.4010%" y="1295.50"></text></g><g><title>rust-sokoban`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.03%)</title><rect x="1.1791%" y="1365" width="0.0281%" height="15" fill="rgb(253,99,2)" fg:x="42" fg:w="1"/><text x="1.4291%" y="1375.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.03%)</title><rect x="1.1791%" y="1349" width="0.0281%" height="15" fill="rgb(220,168,23)" fg:x="42" fg:w="1"/><text x="1.4291%" y="1359.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="1.1791%" y="1333" width="0.0281%" height="15" fill="rgb(242,38,24)" fg:x="42" fg:w="1"/><text x="1.4291%" y="1343.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="1.1791%" y="1317" width="0.0281%" height="15" fill="rgb(225,182,9)" fg:x="42" fg:w="1"/><text x="1.4291%" y="1327.50"></text></g><g><title>rust-sokoban`core::str::_&lt;impl str&gt;::find (3 samples, 0.08%)</title><rect x="1.1791%" y="1381" width="0.0842%" height="15" fill="rgb(243,178,37)" fg:x="42" fg:w="3"/><text x="1.4291%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.06%)</title><rect x="1.2072%" y="1365" width="0.0561%" height="15" fill="rgb(232,139,19)" fg:x="43" fg:w="2"/><text x="1.4572%" y="1375.50"></text></g><g><title>rust-sokoban`core::str::pattern::TwoWaySearcher::next (2 samples, 0.06%)</title><rect x="1.2072%" y="1349" width="0.0561%" height="15" fill="rgb(225,201,24)" fg:x="43" fg:w="2"/><text x="1.4572%" y="1359.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="1.2353%" y="1333" width="0.0281%" height="15" fill="rgb(221,47,46)" fg:x="44" fg:w="1"/><text x="1.4853%" y="1343.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="1.2353%" y="1317" width="0.0281%" height="15" fill="rgb(249,23,13)" fg:x="44" fg:w="1"/><text x="1.4853%" y="1327.50"></text></g><g><title>rust-sokoban`ggez::input::gamepad::GilrsGamepadContext::new (4 samples, 0.11%)</title><rect x="1.1791%" y="1461" width="0.1123%" height="15" fill="rgb(219,9,5)" fg:x="42" fg:w="4"/><text x="1.4291%" y="1471.50"></text></g><g><title>rust-sokoban`gilrs::gamepad::Gilrs::new (4 samples, 0.11%)</title><rect x="1.1791%" y="1445" width="0.1123%" height="15" fill="rgb(254,171,16)" fg:x="42" fg:w="4"/><text x="1.4291%" y="1455.50"></text></g><g><title>rust-sokoban`gilrs::gamepad::GilrsBuilder::build (4 samples, 0.11%)</title><rect x="1.1791%" y="1429" width="0.1123%" height="15" fill="rgb(230,171,20)" fg:x="42" fg:w="4"/><text x="1.4291%" y="1439.50"></text></g><g><title>rust-sokoban`gilrs::mapping::MappingDb::add_included_mappings (4 samples, 0.11%)</title><rect x="1.1791%" y="1413" width="0.1123%" height="15" fill="rgb(210,71,41)" fg:x="42" fg:w="4"/><text x="1.4291%" y="1423.50"></text></g><g><title>rust-sokoban`gilrs::mapping::MappingDb::insert (4 samples, 0.11%)</title><rect x="1.1791%" y="1397" width="0.1123%" height="15" fill="rgb(206,173,20)" fg:x="42" fg:w="4"/><text x="1.4291%" y="1407.50"></text></g><g><title>rust-sokoban`core::str::_&lt;impl str&gt;::split (1 samples, 0.03%)</title><rect x="1.2633%" y="1381" width="0.0281%" height="15" fill="rgb(233,88,34)" fg:x="45" fg:w="1"/><text x="1.5133%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;char as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.03%)</title><rect x="1.2633%" y="1365" width="0.0281%" height="15" fill="rgb(223,209,46)" fg:x="45" fg:w="1"/><text x="1.5133%" y="1375.50"></text></g><g><title>rust-sokoban`core::char::methods::_&lt;impl char&gt;::encode_utf8 (1 samples, 0.03%)</title><rect x="1.2633%" y="1349" width="0.0281%" height="15" fill="rgb(250,43,18)" fg:x="45" fg:w="1"/><text x="1.5133%" y="1359.50"></text></g><g><title>rust-sokoban`core::char::methods::encode_utf8_raw (1 samples, 0.03%)</title><rect x="1.2633%" y="1333" width="0.0281%" height="15" fill="rgb(208,13,10)" fg:x="45" fg:w="1"/><text x="1.5133%" y="1343.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="1.2633%" y="1317" width="0.0281%" height="15" fill="rgb(212,200,36)" fg:x="45" fg:w="1"/><text x="1.5133%" y="1327.50"></text></g><g><title>AppKit`+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders] (1 samples, 0.03%)</title><rect x="1.2914%" y="1349" width="0.0281%" height="15" fill="rgb(225,90,30)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1359.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.2914%" y="1333" width="0.0281%" height="15" fill="rgb(236,182,39)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1343.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.2914%" y="1317" width="0.0281%" height="15" fill="rgb(212,144,35)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1327.50"></text></g><g><title>AppKit`__71+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders]_block_invoke (1 samples, 0.03%)</title><rect x="1.2914%" y="1301" width="0.0281%" height="15" fill="rgb(228,63,44)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1311.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="1.2914%" y="1285" width="0.0281%" height="15" fill="rgb(228,109,6)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1295.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.03%)</title><rect x="1.2914%" y="1269" width="0.0281%" height="15" fill="rgb(238,117,24)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1279.50"></text></g><g><title>dyld`dyld4::RuntimeState::decWritable (1 samples, 0.03%)</title><rect x="1.2914%" y="1253" width="0.0281%" height="15" fill="rgb(242,26,26)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1263.50"></text></g><g><title>dyld`mprotect (1 samples, 0.03%)</title><rect x="1.2914%" y="1237" width="0.0281%" height="15" fill="rgb(221,92,48)" fg:x="46" fg:w="1"/><text x="1.5414%" y="1247.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1237" width="0.0281%" height="15" fill="rgb(209,209,32)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1247.50"></text></g><g><title>AppKit`+[NSAppearance _aquaAppearance] (1 samples, 0.03%)</title><rect x="1.3195%" y="1221" width="0.0281%" height="15" fill="rgb(221,70,22)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1231.50"></text></g><g><title>AppKit`-[NSWorkspace(NSWorkspaceAccessibilityDisplay) accessibilityDisplayShouldIncreaseContrast] (1 samples, 0.03%)</title><rect x="1.3195%" y="1205" width="0.0281%" height="15" fill="rgb(248,145,5)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1215.50"></text></g><g><title>HIServices`_AXInterfaceGetIncreaseContrastEnabled (1 samples, 0.03%)</title><rect x="1.3195%" y="1189" width="0.0281%" height="15" fill="rgb(226,116,26)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1199.50"></text></g><g><title>CoreFoundation`_CFPreferencesGetAppBooleanValueWithContainer (1 samples, 0.03%)</title><rect x="1.3195%" y="1173" width="0.0281%" height="15" fill="rgb(244,5,17)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1183.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.03%)</title><rect x="1.3195%" y="1157" width="0.0281%" height="15" fill="rgb(252,159,33)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1167.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1141" width="0.0281%" height="15" fill="rgb(206,71,0)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1151.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1125" width="0.0281%" height="15" fill="rgb(233,118,54)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1135.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.03%)</title><rect x="1.3195%" y="1109" width="0.0281%" height="15" fill="rgb(234,83,48)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1119.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (1 samples, 0.03%)</title><rect x="1.3195%" y="1093" width="0.0281%" height="15" fill="rgb(228,3,54)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1103.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1077" width="0.0281%" height="15" fill="rgb(226,155,13)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1087.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1061" width="0.0281%" height="15" fill="rgb(241,28,37)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1071.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_getDictionary:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1045" width="0.0281%" height="15" fill="rgb(233,93,10)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1055.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1029" width="0.0281%" height="15" fill="rgb(225,113,19)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1039.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:] (1 samples, 0.03%)</title><rect x="1.3195%" y="1013" width="0.0281%" height="15" fill="rgb(241,2,18)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1023.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 0.03%)</title><rect x="1.3195%" y="997" width="0.0281%" height="15" fill="rgb(228,207,21)" fg:x="47" fg:w="1"/><text x="1.5695%" y="1007.50"></text></g><g><title>CoreFoundation`__104-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:]_block_invoke (1 samples, 0.03%)</title><rect x="1.3195%" y="981" width="0.0281%" height="15" fill="rgb(213,211,35)" fg:x="47" fg:w="1"/><text x="1.5695%" y="991.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:performBlock:] (1 samples, 0.03%)</title><rect x="1.3195%" y="965" width="0.0281%" height="15" fill="rgb(209,83,10)" fg:x="47" fg:w="1"/><text x="1.5695%" y="975.50"></text></g><g><title>CoreFoundation`__104-[CFPrefsSearchListSource synchronouslySendDaemonMessage:andAgentMessage:andDirectMessage:replyHandler:]_block_invoke_2 (1 samples, 0.03%)</title><rect x="1.3195%" y="949" width="0.0281%" height="15" fill="rgb(209,164,1)" fg:x="47" fg:w="1"/><text x="1.5695%" y="959.50"></text></g><g><title>CoreFoundation`__80-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]_block_invoke (1 samples, 0.03%)</title><rect x="1.3195%" y="933" width="0.0281%" height="15" fill="rgb(213,184,43)" fg:x="47" fg:w="1"/><text x="1.5695%" y="943.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.03%)</title><rect x="1.3195%" y="917" width="0.0281%" height="15" fill="rgb(231,61,34)" fg:x="47" fg:w="1"/><text x="1.5695%" y="927.50"></text></g><g><title>libxpc.dylib`xpc_array_apply (1 samples, 0.03%)</title><rect x="1.3195%" y="901" width="0.0281%" height="15" fill="rgb(235,75,3)" fg:x="47" fg:w="1"/><text x="1.5695%" y="911.50"></text></g><g><title>CoreFoundation`__93-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:]_block_invoke (1 samples, 0.03%)</title><rect x="1.3195%" y="885" width="0.0281%" height="15" fill="rgb(220,106,47)" fg:x="47" fg:w="1"/><text x="1.5695%" y="895.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.03%)</title><rect x="1.3195%" y="869" width="0.0281%" height="15" fill="rgb(210,196,33)" fg:x="47" fg:w="1"/><text x="1.5695%" y="879.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI dealloc] (1 samples, 0.03%)</title><rect x="1.3195%" y="853" width="0.0281%" height="15" fill="rgb(229,154,42)" fg:x="47" fg:w="1"/><text x="1.5695%" y="863.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="1.3195%" y="837" width="0.0281%" height="15" fill="rgb(228,114,26)" fg:x="47" fg:w="1"/><text x="1.5695%" y="847.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (1 samples, 0.03%)</title><rect x="1.3195%" y="821" width="0.0281%" height="15" fill="rgb(208,144,1)" fg:x="47" fg:w="1"/><text x="1.5695%" y="831.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (2 samples, 0.06%)</title><rect x="1.3195%" y="1349" width="0.0561%" height="15" fill="rgb(239,112,37)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1359.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (2 samples, 0.06%)</title><rect x="1.3195%" y="1333" width="0.0561%" height="15" fill="rgb(210,96,50)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1343.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.06%)</title><rect x="1.3195%" y="1317" width="0.0561%" height="15" fill="rgb(222,178,2)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1327.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.06%)</title><rect x="1.3195%" y="1301" width="0.0561%" height="15" fill="rgb(226,74,18)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1311.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (2 samples, 0.06%)</title><rect x="1.3195%" y="1285" width="0.0561%" height="15" fill="rgb(225,67,54)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1295.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (2 samples, 0.06%)</title><rect x="1.3195%" y="1269" width="0.0561%" height="15" fill="rgb(251,92,32)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1279.50"></text></g><g><title>AppKit`_NSAppearanceCurrentSystemAppearance (2 samples, 0.06%)</title><rect x="1.3195%" y="1253" width="0.0561%" height="15" fill="rgb(228,149,22)" fg:x="47" fg:w="2"/><text x="1.5695%" y="1263.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.3476%" y="1237" width="0.0281%" height="15" fill="rgb(243,54,13)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.3476%" y="1221" width="0.0281%" height="15" fill="rgb(243,180,28)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1231.50"></text></g><g><title>AppKit`__createAllLogObjects_block_invoke (1 samples, 0.03%)</title><rect x="1.3476%" y="1205" width="0.0281%" height="15" fill="rgb(208,167,24)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1215.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.03%)</title><rect x="1.3476%" y="1189" width="0.0281%" height="15" fill="rgb(245,73,45)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1199.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preferences_refresh (1 samples, 0.03%)</title><rect x="1.3476%" y="1173" width="0.0281%" height="15" fill="rgb(237,203,48)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1183.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preferences_cache_find_record_by_name (1 samples, 0.03%)</title><rect x="1.3476%" y="1157" width="0.0281%" height="15" fill="rgb(211,197,16)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1167.50"></text></g><g><title>libsystem_trace.dylib`___os_log_preferences_cache_find_record_by_name_block_invoke (1 samples, 0.03%)</title><rect x="1.3476%" y="1141" width="0.0281%" height="15" fill="rgb(243,99,51)" fg:x="48" fg:w="1"/><text x="1.5976%" y="1151.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationWorkspaceAccessibilityInternal) _registerForAccessibilityNotifications] (1 samples, 0.03%)</title><rect x="1.3756%" y="1349" width="0.0281%" height="15" fill="rgb(215,123,29)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1359.50"></text></g><g><title>AppKit`-[NSWorkspace(NSWorkspaceAccessibility) isAccessibilityFullKeyboardAccessDrawingFocusRing] (1 samples, 0.03%)</title><rect x="1.3756%" y="1333" width="0.0281%" height="15" fill="rgb(239,186,37)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1343.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) persistentDomainForName:] (1 samples, 0.03%)</title><rect x="1.3756%" y="1317" width="0.0281%" height="15" fill="rgb(252,136,39)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1327.50"></text></g><g><title>CoreFoundation`_CFXPreferencesCopyDictionaryForSourceWithBundleID (1 samples, 0.03%)</title><rect x="1.3756%" y="1301" width="0.0281%" height="15" fill="rgb(223,213,32)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1311.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyDictionaryForSourceWithIdentifier:] (1 samples, 0.03%)</title><rect x="1.3756%" y="1285" width="0.0281%" height="15" fill="rgb(233,115,5)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1295.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 0.03%)</title><rect x="1.3756%" y="1269" width="0.0281%" height="15" fill="rgb(207,226,44)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1279.50"></text></g><g><title>CoreFoundation`__57-[_CFXPreferences copyDictionaryForSourceWithIdentifier:]_block_invoke (1 samples, 0.03%)</title><rect x="1.3756%" y="1253" width="0.0281%" height="15" fill="rgb(208,126,0)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1263.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyDictionary] (1 samples, 0.03%)</title><rect x="1.3756%" y="1237" width="0.0281%" height="15" fill="rgb(244,66,21)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1247.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource alreadylocked_copyDictionary] (1 samples, 0.03%)</title><rect x="1.3756%" y="1221" width="0.0281%" height="15" fill="rgb(222,97,12)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1231.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM copyWithZone:] (1 samples, 0.03%)</title><rect x="1.3756%" y="1205" width="0.0281%" height="15" fill="rgb(219,213,19)" fg:x="49" fg:w="1"/><text x="1.6256%" y="1215.50"></text></g><g><title>ColorSync`ColorSyncVerifyGenericGrayGamma2_2Data (1 samples, 0.03%)</title><rect x="1.4037%" y="1093" width="0.0281%" height="15" fill="rgb(252,169,30)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.4037%" y="1077" width="0.0281%" height="15" fill="rgb(206,32,51)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.4037%" y="1061" width="0.0281%" height="15" fill="rgb(250,172,42)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1071.50"></text></g><g><title>ColorSync`__getGenericGrayGamma2_2Data_block_invoke (1 samples, 0.03%)</title><rect x="1.4037%" y="1045" width="0.0281%" height="15" fill="rgb(209,34,43)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.4037%" y="1029" width="0.0281%" height="15" fill="rgb(223,11,35)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.4037%" y="1013" width="0.0281%" height="15" fill="rgb(251,219,26)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1023.50"></text></g><g><title>ColorSync`__getGenericGrayGamma2_2Profile_block_invoke (1 samples, 0.03%)</title><rect x="1.4037%" y="997" width="0.0281%" height="15" fill="rgb(231,119,3)" fg:x="50" fg:w="1"/><text x="1.6537%" y="1007.50"></text></g><g><title>ColorSync`create_GenericGrayGamma22Profile (1 samples, 0.03%)</title><rect x="1.4037%" y="981" width="0.0281%" height="15" fill="rgb(216,97,11)" fg:x="50" fg:w="1"/><text x="1.6537%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.4037%" y="965" width="0.0281%" height="15" fill="rgb(223,59,9)" fg:x="50" fg:w="1"/><text x="1.6537%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.4037%" y="949" width="0.0281%" height="15" fill="rgb(233,93,31)" fg:x="50" fg:w="1"/><text x="1.6537%" y="959.50"></text></g><g><title>ColorSync`__create_GenericGrayGamma22Profile_block_invoke (1 samples, 0.03%)</title><rect x="1.4037%" y="933" width="0.0281%" height="15" fill="rgb(239,81,33)" fg:x="50" fg:w="1"/><text x="1.6537%" y="943.50"></text></g><g><title>ColorSync`ColorSyncProfileCreateSigleton (1 samples, 0.03%)</title><rect x="1.4037%" y="917" width="0.0281%" height="15" fill="rgb(213,120,34)" fg:x="50" fg:w="1"/><text x="1.6537%" y="927.50"></text></g><g><title>ColorSync`create (1 samples, 0.03%)</title><rect x="1.4037%" y="901" width="0.0281%" height="15" fill="rgb(243,49,53)" fg:x="50" fg:w="1"/><text x="1.6537%" y="911.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (2 samples, 0.06%)</title><rect x="1.4037%" y="1349" width="0.0561%" height="15" fill="rgb(247,216,33)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1359.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.06%)</title><rect x="1.4037%" y="1333" width="0.0561%" height="15" fill="rgb(226,26,14)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1343.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.06%)</title><rect x="1.4037%" y="1317" width="0.0561%" height="15" fill="rgb(215,49,53)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1327.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (2 samples, 0.06%)</title><rect x="1.4037%" y="1301" width="0.0561%" height="15" fill="rgb(245,162,40)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1311.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (2 samples, 0.06%)</title><rect x="1.4037%" y="1285" width="0.0561%" height="15" fill="rgb(229,68,17)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1295.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (2 samples, 0.06%)</title><rect x="1.4037%" y="1269" width="0.0561%" height="15" fill="rgb(213,182,10)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1279.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.06%)</title><rect x="1.4037%" y="1253" width="0.0561%" height="15" fill="rgb(245,125,30)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1263.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.06%)</title><rect x="1.4037%" y="1237" width="0.0561%" height="15" fill="rgb(232,202,2)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1247.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (2 samples, 0.06%)</title><rect x="1.4037%" y="1221" width="0.0561%" height="15" fill="rgb(237,140,51)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1231.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (2 samples, 0.06%)</title><rect x="1.4037%" y="1205" width="0.0561%" height="15" fill="rgb(236,157,25)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1215.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (2 samples, 0.06%)</title><rect x="1.4037%" y="1189" width="0.0561%" height="15" fill="rgb(219,209,0)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1199.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (2 samples, 0.06%)</title><rect x="1.4037%" y="1173" width="0.0561%" height="15" fill="rgb(240,116,54)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1183.50"></text></g><g><title>SkyLight`SLSCopyDisplayColorSpace (2 samples, 0.06%)</title><rect x="1.4037%" y="1157" width="0.0561%" height="15" fill="rgb(216,10,36)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1167.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryCopyColorSpace (2 samples, 0.06%)</title><rect x="1.4037%" y="1141" width="0.0561%" height="15" fill="rgb(222,72,44)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1151.50"></text></g><g><title>CoreGraphics`CGColorSpaceFromICCDataCacheGetRetained (2 samples, 0.06%)</title><rect x="1.4037%" y="1125" width="0.0561%" height="15" fill="rgb(232,159,9)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1135.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithICCDataInternal (2 samples, 0.06%)</title><rect x="1.4037%" y="1109" width="0.0561%" height="15" fill="rgb(210,39,32)" fg:x="50" fg:w="2"/><text x="1.6537%" y="1119.50"></text></g><g><title>CoreGraphics`CGColorSpaceFindMatchingSingleton (1 samples, 0.03%)</title><rect x="1.4318%" y="1093" width="0.0281%" height="15" fill="rgb(216,194,45)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.4318%" y="1077" width="0.0281%" height="15" fill="rgb(218,18,35)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.4318%" y="1061" width="0.0281%" height="15" fill="rgb(207,83,51)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1071.50"></text></g><g><title>CoreGraphics`__CGColorSpaceFindMatchingSingleton_block_invoke_2 (1 samples, 0.03%)</title><rect x="1.4318%" y="1045" width="0.0281%" height="15" fill="rgb(225,63,43)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1055.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.03%)</title><rect x="1.4318%" y="1029" width="0.0281%" height="15" fill="rgb(207,57,36)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1039.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateAdobeRGB1998 (1 samples, 0.03%)</title><rect x="1.4318%" y="1013" width="0.0281%" height="15" fill="rgb(216,99,33)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="1.4318%" y="997" width="0.0281%" height="15" fill="rgb(225,42,16)" fg:x="51" fg:w="1"/><text x="1.6818%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="1.4318%" y="981" width="0.0281%" height="15" fill="rgb(220,201,45)" fg:x="51" fg:w="1"/><text x="1.6818%" y="991.50"></text></g><g><title>CoreGraphics`__CGColorSpaceCreateAdobeRGB1998_block_invoke (1 samples, 0.03%)</title><rect x="1.4318%" y="965" width="0.0281%" height="15" fill="rgb(225,33,4)" fg:x="51" fg:w="1"/><text x="1.6818%" y="975.50"></text></g><g><title>CoreGraphics`create_singleton (1 samples, 0.03%)</title><rect x="1.4318%" y="949" width="0.0281%" height="15" fill="rgb(224,33,50)" fg:x="51" fg:w="1"/><text x="1.6818%" y="959.50"></text></g><g><title>CoreGraphics`color_space_state_create_adobe_rgb_1998 (1 samples, 0.03%)</title><rect x="1.4318%" y="933" width="0.0281%" height="15" fill="rgb(246,198,51)" fg:x="51" fg:w="1"/><text x="1.6818%" y="943.50"></text></g><g><title>CoreGraphics`create_from_profile (1 samples, 0.03%)</title><rect x="1.4318%" y="917" width="0.0281%" height="15" fill="rgb(205,22,4)" fg:x="51" fg:w="1"/><text x="1.6818%" y="927.50"></text></g><g><title>ColorSync`ColorSyncProfileCopyData (1 samples, 0.03%)</title><rect x="1.4318%" y="901" width="0.0281%" height="15" fill="rgb(206,3,8)" fg:x="51" fg:w="1"/><text x="1.6818%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.03%)</title><rect x="1.4318%" y="885" width="0.0281%" height="15" fill="rgb(251,23,15)" fg:x="51" fg:w="1"/><text x="1.6818%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="1.4318%" y="869" width="0.0281%" height="15" fill="rgb(252,88,28)" fg:x="51" fg:w="1"/><text x="1.6818%" y="879.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.03%)</title><rect x="1.4599%" y="1349" width="0.0281%" height="15" fill="rgb(212,127,14)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1359.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.03%)</title><rect x="1.4599%" y="1333" width="0.0281%" height="15" fill="rgb(247,145,37)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1343.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="1.4599%" y="1317" width="0.0281%" height="15" fill="rgb(209,117,53)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1327.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.03%)</title><rect x="1.4599%" y="1301" width="0.0281%" height="15" fill="rgb(212,90,42)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1311.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.03%)</title><rect x="1.4599%" y="1285" width="0.0281%" height="15" fill="rgb(218,164,37)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1295.50"></text></g><g><title>AppKit`+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (1 samples, 0.03%)</title><rect x="1.4599%" y="1269" width="0.0281%" height="15" fill="rgb(246,65,34)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1279.50"></text></g><g><title>dyld`dyld4::APIs::dyld_image_header_containing_address (1 samples, 0.03%)</title><rect x="1.4599%" y="1253" width="0.0281%" height="15" fill="rgb(231,100,33)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1263.50"></text></g><g><title>dyld`dyld4::APIs::findImageMappedAt (1 samples, 0.03%)</title><rect x="1.4599%" y="1237" width="0.0281%" height="15" fill="rgb(228,126,14)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1247.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.03%)</title><rect x="1.4599%" y="1221" width="0.0281%" height="15" fill="rgb(215,173,21)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1231.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::findImageMappedAt (1 samples, 0.03%)</title><rect x="1.4599%" y="1205" width="0.0281%" height="15" fill="rgb(210,6,40)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1215.50"></text></g><g><title>dyld`dyld4::PrebuiltLoader::contains (1 samples, 0.03%)</title><rect x="1.4599%" y="1189" width="0.0281%" height="15" fill="rgb(212,48,18)" fg:x="52" fg:w="1"/><text x="1.7099%" y="1199.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (8 samples, 0.22%)</title><rect x="1.2914%" y="1381" width="0.2246%" height="15" fill="rgb(230,214,11)" fg:x="46" fg:w="8"/><text x="1.5414%" y="1391.50"></text></g><g><title>AppKit`-[NSApplication init] (8 samples, 0.22%)</title><rect x="1.2914%" y="1365" width="0.2246%" height="15" fill="rgb(254,105,39)" fg:x="46" fg:w="8"/><text x="1.5414%" y="1375.50"></text></g><g><title>AppKit`_NSInitializeAppContext (1 samples, 0.03%)</title><rect x="1.4879%" y="1349" width="0.0281%" height="15" fill="rgb(245,158,5)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1359.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (1 samples, 0.03%)</title><rect x="1.4879%" y="1333" width="0.0281%" height="15" fill="rgb(249,208,11)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1343.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (1 samples, 0.03%)</title><rect x="1.4879%" y="1317" width="0.0281%" height="15" fill="rgb(210,39,28)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1327.50"></text></g><g><title>HIServices`GetCurrentProcess (1 samples, 0.03%)</title><rect x="1.4879%" y="1301" width="0.0281%" height="15" fill="rgb(211,56,53)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1311.50"></text></g><g><title>HIServices`_RegisterApplication (1 samples, 0.03%)</title><rect x="1.4879%" y="1285" width="0.0281%" height="15" fill="rgb(226,201,30)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1295.50"></text></g><g><title>LaunchServices`_LSApplicationCheckIn (1 samples, 0.03%)</title><rect x="1.4879%" y="1269" width="0.0281%" height="15" fill="rgb(239,101,34)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1279.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.03%)</title><rect x="1.4879%" y="1253" width="0.0281%" height="15" fill="rgb(226,209,5)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1263.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.03%)</title><rect x="1.4879%" y="1237" width="0.0281%" height="15" fill="rgb(250,105,47)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1247.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetGregorianDate (1 samples, 0.03%)</title><rect x="1.4879%" y="1221" width="0.0281%" height="15" fill="rgb(230,72,3)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1231.50"></text></g><g><title>CoreFoundation`CFTimeZoneGetSecondsFromGMT (1 samples, 0.03%)</title><rect x="1.4879%" y="1205" width="0.0281%" height="15" fill="rgb(232,218,39)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1215.50"></text></g><g><title>CoreFoundation`-[__NSTimeZone secondsFromGMTForDate:] (1 samples, 0.03%)</title><rect x="1.4879%" y="1189" width="0.0281%" height="15" fill="rgb(248,166,6)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1199.50"></text></g><g><title>libicucore.A.dylib`ucal_open (1 samples, 0.03%)</title><rect x="1.4879%" y="1173" width="0.0281%" height="15" fill="rgb(247,89,20)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1183.50"></text></g><g><title>libicucore.A.dylib`0x0000000190c08850 (1 samples, 0.03%)</title><rect x="1.4879%" y="1157" width="0.0281%" height="15" fill="rgb(248,130,54)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1167.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::createTimeZone (1 samples, 0.03%)</title><rect x="1.4879%" y="1141" width="0.0281%" height="15" fill="rgb(234,196,4)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1151.50"></text></g><g><title>libicucore.A.dylib`0x0000000190be92c8 (1 samples, 0.03%)</title><rect x="1.4879%" y="1125" width="0.0281%" height="15" fill="rgb(250,143,31)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1135.50"></text></g><g><title>libicucore.A.dylib`0x0000000190be70f0 (1 samples, 0.03%)</title><rect x="1.4879%" y="1109" width="0.0281%" height="15" fill="rgb(211,110,34)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1119.50"></text></g><g><title>libicucore.A.dylib`ures_getByIndex (1 samples, 0.03%)</title><rect x="1.4879%" y="1093" width="0.0281%" height="15" fill="rgb(215,124,48)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1103.50"></text></g><g><title>libicucore.A.dylib`res_countArrayItems (1 samples, 0.03%)</title><rect x="1.4879%" y="1077" width="0.0281%" height="15" fill="rgb(216,46,13)" fg:x="53" fg:w="1"/><text x="1.7379%" y="1087.50"></text></g><g><title>rust-sokoban`ggez::context::Context::from_conf (52 samples, 1.46%)</title><rect x="0.0842%" y="1477" width="1.4599%" height="15" fill="rgb(205,184,25)" fg:x="3" fg:w="52"/><text x="0.3342%" y="1487.50"></text></g><g><title>rust-sokoban`winit::event_loop::EventLoop&lt;()&gt;::new (9 samples, 0.25%)</title><rect x="1.2914%" y="1461" width="0.2527%" height="15" fill="rgb(228,1,10)" fg:x="46" fg:w="9"/><text x="1.5414%" y="1471.50"></text></g><g><title>rust-sokoban`winit::event_loop::EventLoop&lt;T&gt;::with_user_event (9 samples, 0.25%)</title><rect x="1.2914%" y="1445" width="0.2527%" height="15" fill="rgb(213,116,27)" fg:x="46" fg:w="9"/><text x="1.5414%" y="1455.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (9 samples, 0.25%)</title><rect x="1.2914%" y="1429" width="0.2527%" height="15" fill="rgb(241,95,50)" fg:x="46" fg:w="9"/><text x="1.5414%" y="1439.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (9 samples, 0.25%)</title><rect x="1.2914%" y="1413" width="0.2527%" height="15" fill="rgb(238,48,32)" fg:x="46" fg:w="9"/><text x="1.5414%" y="1423.50"></text></g><g><title>rust-sokoban`&lt;() as objc::message::MessageArguments&gt;::invoke (9 samples, 0.25%)</title><rect x="1.2914%" y="1397" width="0.2527%" height="15" fill="rgb(235,113,49)" fg:x="46" fg:w="9"/><text x="1.5414%" y="1407.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="1.5160%" y="1381" width="0.0281%" height="15" fill="rgb(205,127,43)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1391.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="1.5160%" y="1365" width="0.0281%" height="15" fill="rgb(250,162,2)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1375.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.03%)</title><rect x="1.5160%" y="1349" width="0.0281%" height="15" fill="rgb(220,13,41)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1359.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.03%)</title><rect x="1.5160%" y="1333" width="0.0281%" height="15" fill="rgb(249,221,25)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1343.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.03%)</title><rect x="1.5160%" y="1317" width="0.0281%" height="15" fill="rgb(215,208,19)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1327.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.03%)</title><rect x="1.5160%" y="1301" width="0.0281%" height="15" fill="rgb(236,175,2)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1311.50"></text></g><g><title>AppKit`+[NSApplication initialize] (1 samples, 0.03%)</title><rect x="1.5160%" y="1285" width="0.0281%" height="15" fill="rgb(241,52,2)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1295.50"></text></g><g><title>Foundation`+[NSUserDefaults(NSUserDefaults) standardUserDefaults] (1 samples, 0.03%)</title><rect x="1.5160%" y="1269" width="0.0281%" height="15" fill="rgb(248,140,14)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1279.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) init] (1 samples, 0.03%)</title><rect x="1.5160%" y="1253" width="0.0281%" height="15" fill="rgb(253,22,42)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1263.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="1.5160%" y="1237" width="0.0281%" height="15" fill="rgb(234,61,47)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1247.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (1 samples, 0.03%)</title><rect x="1.5160%" y="1221" width="0.0281%" height="15" fill="rgb(208,226,15)" fg:x="54" fg:w="1"/><text x="1.7660%" y="1231.50"></text></g><g><title>rust-sokoban`ggez::context::ContextBuilder::build (54 samples, 1.52%)</title><rect x="0.0561%" y="1493" width="1.5160%" height="15" fill="rgb(217,221,4)" fg:x="2" fg:w="54"/><text x="0.3061%" y="1503.50"></text></g><g><title>rust-sokoban`ggez::filesystem::Filesystem::new (1 samples, 0.03%)</title><rect x="1.5441%" y="1477" width="0.0281%" height="15" fill="rgb(212,174,34)" fg:x="55" fg:w="1"/><text x="1.7941%" y="1487.50"></text></g><g><title>rust-sokoban`std::path::Path::exists (1 samples, 0.03%)</title><rect x="1.5441%" y="1461" width="0.0281%" height="15" fill="rgb(253,83,4)" fg:x="55" fg:w="1"/><text x="1.7941%" y="1471.50"></text></g><g><title>rust-sokoban`std::fs::metadata (1 samples, 0.03%)</title><rect x="1.5441%" y="1445" width="0.0281%" height="15" fill="rgb(250,195,49)" fg:x="55" fg:w="1"/><text x="1.7941%" y="1455.50"></text></g><g><title>rust-sokoban`&lt;std::path::Path as core::convert::AsRef&lt;std::path::Path&gt;&gt;::as_ref (1 samples, 0.03%)</title><rect x="1.5441%" y="1429" width="0.0281%" height="15" fill="rgb(241,192,25)" fg:x="55" fg:w="1"/><text x="1.7941%" y="1439.50"></text></g><g><title>rust-sokoban`std::sync::mpsc::blocking::tokens (1 samples, 0.03%)</title><rect x="1.5722%" y="1445" width="0.0281%" height="15" fill="rgb(208,124,10)" fg:x="56" fg:w="1"/><text x="1.8222%" y="1455.50"></text></g><g><title>rust-sokoban`&lt;std::sys::unix::os_str::Slice as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="1.5722%" y="1429" width="0.0281%" height="15" fill="rgb(222,33,0)" fg:x="56" fg:w="1"/><text x="1.8222%" y="1439.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.03%)</title><rect x="1.5722%" y="1413" width="0.0281%" height="15" fill="rgb(234,209,28)" fg:x="56" fg:w="1"/><text x="1.8222%" y="1423.50"></text></g><g><title>IOKit`IOHIDEventSystemClientSetMatchingMultiple (1 samples, 0.03%)</title><rect x="1.6002%" y="1189" width="0.0281%" height="15" fill="rgb(224,11,23)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1199.50"></text></g><g><title>IOKit`__IOHIDEventSystemClientCacheMatchingServices (1 samples, 0.03%)</title><rect x="1.6002%" y="1173" width="0.0281%" height="15" fill="rgb(232,99,1)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1183.50"></text></g><g><title>IOKit`_IOHIDUnserializeAndVMDeallocWithTypeID (1 samples, 0.03%)</title><rect x="1.6002%" y="1157" width="0.0281%" height="15" fill="rgb(237,95,45)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1167.50"></text></g><g><title>IOKit`_IOHIDUnserializeAndVMDealloc (1 samples, 0.03%)</title><rect x="1.6002%" y="1141" width="0.0281%" height="15" fill="rgb(208,109,11)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1151.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateFromStream (1 samples, 0.03%)</title><rect x="1.6002%" y="1125" width="0.0281%" height="15" fill="rgb(216,190,48)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1135.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateWithStream (1 samples, 0.03%)</title><rect x="1.6002%" y="1109" width="0.0281%" height="15" fill="rgb(251,171,36)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1119.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="1.6002%" y="1093" width="0.0281%" height="15" fill="rgb(230,62,22)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1103.50"></text></g><g><title>CoreFoundation`__CFTryParseBinaryPlist (1 samples, 0.03%)</title><rect x="1.6002%" y="1077" width="0.0281%" height="15" fill="rgb(225,114,35)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1087.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="1.6002%" y="1061" width="0.0281%" height="15" fill="rgb(215,118,42)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1071.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="1.6002%" y="1045" width="0.0281%" height="15" fill="rgb(243,119,21)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1055.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="1.6002%" y="1029" width="0.0281%" height="15" fill="rgb(252,177,53)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1039.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="1.6002%" y="1013" width="0.0281%" height="15" fill="rgb(237,209,29)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1023.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="1.6002%" y="997" width="0.0281%" height="15" fill="rgb(212,65,23)" fg:x="57" fg:w="1"/><text x="1.8502%" y="1007.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="1.6002%" y="981" width="0.0281%" height="15" fill="rgb(230,222,46)" fg:x="57" fg:w="1"/><text x="1.8502%" y="991.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.03%)</title><rect x="1.6002%" y="965" width="0.0281%" height="15" fill="rgb(215,135,32)" fg:x="57" fg:w="1"/><text x="1.8502%" y="975.50"></text></g><g><title>HIToolbox`_TISGetPhysicalKeyboardLanguage (2 samples, 0.06%)</title><rect x="1.6002%" y="1253" width="0.0561%" height="15" fill="rgb(246,101,22)" fg:x="57" fg:w="2"/><text x="1.8502%" y="1263.50"></text></g><g><title>HIToolbox`_TISCopyAttachedKeyboardLanguages (2 samples, 0.06%)</title><rect x="1.6002%" y="1237" width="0.0561%" height="15" fill="rgb(206,107,13)" fg:x="57" fg:w="2"/><text x="1.8502%" y="1247.50"></text></g><g><title>IOKit`IOHIDEventSystemClientCreateWithType (2 samples, 0.06%)</title><rect x="1.6002%" y="1221" width="0.0561%" height="15" fill="rgb(250,100,44)" fg:x="57" fg:w="2"/><text x="1.8502%" y="1231.50"></text></g><g><title>IOKit`__IOHIDEventSystemClientRefresh (2 samples, 0.06%)</title><rect x="1.6002%" y="1205" width="0.0561%" height="15" fill="rgb(231,147,38)" fg:x="57" fg:w="2"/><text x="1.8502%" y="1215.50"></text></g><g><title>libxpc.dylib`xpc_copy_entitlement_for_token (1 samples, 0.03%)</title><rect x="1.6283%" y="1189" width="0.0281%" height="15" fill="rgb(229,8,40)" fg:x="58" fg:w="1"/><text x="1.8783%" y="1199.50"></text></g><g><title>libxpc.dylib`_xpc_copy_entitlements (1 samples, 0.03%)</title><rect x="1.6283%" y="1173" width="0.0281%" height="15" fill="rgb(221,135,30)" fg:x="58" fg:w="1"/><text x="1.8783%" y="1183.50"></text></g><g><title>libxpc.dylib`_xpc_copy_entitlements_data (1 samples, 0.03%)</title><rect x="1.6283%" y="1157" width="0.0281%" height="15" fill="rgb(249,193,18)" fg:x="58" fg:w="1"/><text x="1.8783%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`csops_audittoken (1 samples, 0.03%)</title><rect x="1.6283%" y="1141" width="0.0281%" height="15" fill="rgb(209,133,39)" fg:x="58" fg:w="1"/><text x="1.8783%" y="1151.50"></text></g><g><title>AppKit`+[NSTextInputContext processInputKeyBindings:] (3 samples, 0.08%)</title><rect x="1.6002%" y="1301" width="0.0842%" height="15" fill="rgb(232,100,14)" fg:x="57" fg:w="3"/><text x="1.8502%" y="1311.50"></text></g><g><title>HIToolbox`ProcessInputSourceSwitchEventCandidate (3 samples, 0.08%)</title><rect x="1.6002%" y="1285" width="0.0842%" height="15" fill="rgb(224,185,1)" fg:x="57" fg:w="3"/><text x="1.8502%" y="1295.50"></text></g><g><title>HIToolbox`ProcessInputSourceAnalytic (3 samples, 0.08%)</title><rect x="1.6002%" y="1269" width="0.0842%" height="15" fill="rgb(223,139,8)" fg:x="57" fg:w="3"/><text x="1.8502%" y="1279.50"></text></g><g><title>HIToolbox`initanalytics_send_event (1 samples, 0.03%)</title><rect x="1.6564%" y="1253" width="0.0281%" height="15" fill="rgb(232,213,38)" fg:x="59" fg:w="1"/><text x="1.9064%" y="1263.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.03%)</title><rect x="1.6564%" y="1237" width="0.0281%" height="15" fill="rgb(207,94,22)" fg:x="59" fg:w="1"/><text x="1.9064%" y="1247.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::pthread_getspecific (1 samples, 0.03%)</title><rect x="1.6564%" y="1221" width="0.0281%" height="15" fill="rgb(219,183,54)" fg:x="59" fg:w="1"/><text x="1.9064%" y="1231.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (1 samples, 0.03%)</title><rect x="1.6844%" y="1301" width="0.0281%" height="15" fill="rgb(216,185,54)" fg:x="60" fg:w="1"/><text x="1.9344%" y="1311.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (1 samples, 0.03%)</title><rect x="1.6844%" y="1285" width="0.0281%" height="15" fill="rgb(254,217,39)" fg:x="60" fg:w="1"/><text x="1.9344%" y="1295.50"></text></g><g><title>CoreFoundation`-[NSDate timeIntervalSinceNow] (1 samples, 0.03%)</title><rect x="1.6844%" y="1269" width="0.0281%" height="15" fill="rgb(240,178,23)" fg:x="60" fg:w="1"/><text x="1.9344%" y="1279.50"></text></g><g><title>AppKit`-[NSEvent deviceID] (1 samples, 0.03%)</title><rect x="1.7125%" y="1173" width="0.0281%" height="15" fill="rgb(218,11,47)" fg:x="61" fg:w="1"/><text x="1.9625%" y="1183.50"></text></g><g><title>MultitouchSupport`_mthid_getDeviceIDForRegistryEntryID (1 samples, 0.03%)</title><rect x="1.7125%" y="1157" width="0.0281%" height="15" fill="rgb(218,51,51)" fg:x="61" fg:w="1"/><text x="1.9625%" y="1167.50"></text></g><g><title>MultitouchSupport`_mthid_getDeviceIDForService (1 samples, 0.03%)</title><rect x="1.7125%" y="1141" width="0.0281%" height="15" fill="rgb(238,126,27)" fg:x="61" fg:w="1"/><text x="1.9625%" y="1151.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (1 samples, 0.03%)</title><rect x="1.7125%" y="1125" width="0.0281%" height="15" fill="rgb(249,202,22)" fg:x="61" fg:w="1"/><text x="1.9625%" y="1135.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (1 samples, 0.03%)</title><rect x="1.7125%" y="1109" width="0.0281%" height="15" fill="rgb(254,195,49)" fg:x="61" fg:w="1"/><text x="1.9625%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="1.7125%" y="1093" width="0.0281%" height="15" fill="rgb(208,123,14)" fg:x="61" fg:w="1"/><text x="1.9625%" y="1103.50"></text></g><g><title>CarbonCore`MPTaskIsPreemptive (1 samples, 0.03%)</title><rect x="1.7406%" y="1093" width="0.0281%" height="15" fill="rgb(224,200,8)" fg:x="62" fg:w="1"/><text x="1.9906%" y="1103.50"></text></g><g><title>HIToolbox`DYLD-STUB$$CFRunLoopRunInMode (1 samples, 0.03%)</title><rect x="1.7687%" y="1093" width="0.0281%" height="15" fill="rgb(217,61,36)" fg:x="63" fg:w="1"/><text x="2.0187%" y="1103.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (1 samples, 0.03%)</title><rect x="1.7967%" y="1093" width="0.0281%" height="15" fill="rgb(206,35,45)" fg:x="64" fg:w="1"/><text x="2.0467%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.03%)</title><rect x="1.7967%" y="1077" width="0.0281%" height="15" fill="rgb(217,65,33)" fg:x="64" fg:w="1"/><text x="2.0467%" y="1087.50"></text></g><g><title>CoreFoundation`CFRunLoopRunInMode (1 samples, 0.03%)</title><rect x="1.8248%" y="1077" width="0.0281%" height="15" fill="rgb(222,158,48)" fg:x="65" fg:w="1"/><text x="2.0748%" y="1087.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (1 samples, 0.03%)</title><rect x="1.8529%" y="1061" width="0.0281%" height="15" fill="rgb(254,2,54)" fg:x="66" fg:w="1"/><text x="2.1029%" y="1071.50"></text></g><g><title>CoreFoundation`CFSetGetValue (1 samples, 0.03%)</title><rect x="1.8529%" y="1045" width="0.0281%" height="15" fill="rgb(250,143,38)" fg:x="66" fg:w="1"/><text x="2.1029%" y="1055.50"></text></g><g><title>CoreFoundation`CFEqual (1 samples, 0.03%)</title><rect x="1.8529%" y="1029" width="0.0281%" height="15" fill="rgb(248,25,0)" fg:x="66" fg:w="1"/><text x="2.1029%" y="1039.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="1.8810%" y="725" width="0.0281%" height="15" fill="rgb(206,152,27)" fg:x="67" fg:w="1"/><text x="2.1310%" y="735.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="1.8810%" y="709" width="0.0281%" height="15" fill="rgb(240,77,30)" fg:x="67" fg:w="1"/><text x="2.1310%" y="719.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="1.8810%" y="693" width="0.0281%" height="15" fill="rgb(231,5,3)" fg:x="67" fg:w="1"/><text x="2.1310%" y="703.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="1.8810%" y="677" width="0.0281%" height="15" fill="rgb(207,226,32)" fg:x="67" fg:w="1"/><text x="2.1310%" y="687.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="1.8810%" y="661" width="0.0281%" height="15" fill="rgb(222,207,47)" fg:x="67" fg:w="1"/><text x="2.1310%" y="671.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="1.8810%" y="645" width="0.0281%" height="15" fill="rgb(229,115,45)" fg:x="67" fg:w="1"/><text x="2.1310%" y="655.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="1.8810%" y="629" width="0.0281%" height="15" fill="rgb(224,191,6)" fg:x="67" fg:w="1"/><text x="2.1310%" y="639.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="1.8810%" y="613" width="0.0281%" height="15" fill="rgb(230,227,24)" fg:x="67" fg:w="1"/><text x="2.1310%" y="623.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="1.8810%" y="597" width="0.0281%" height="15" fill="rgb(228,80,19)" fg:x="67" fg:w="1"/><text x="2.1310%" y="607.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="1.8810%" y="581" width="0.0281%" height="15" fill="rgb(247,229,0)" fg:x="67" fg:w="1"/><text x="2.1310%" y="591.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="1.8810%" y="565" width="0.0281%" height="15" fill="rgb(237,194,15)" fg:x="67" fg:w="1"/><text x="2.1310%" y="575.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::new (1 samples, 0.03%)</title><rect x="1.8810%" y="549" width="0.0281%" height="15" fill="rgb(219,203,20)" fg:x="67" fg:w="1"/><text x="2.1310%" y="559.50"></text></g><g><title>rust-sokoban`ggez::graphics::SamplerCache&lt;B&gt;::get_or_insert (1 samples, 0.03%)</title><rect x="1.9090%" y="677" width="0.0281%" height="15" fill="rgb(234,128,8)" fg:x="68" fg:w="1"/><text x="2.1590%" y="687.50"></text></g><g><title>rust-sokoban`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.03%)</title><rect x="1.9090%" y="661" width="0.0281%" height="15" fill="rgb(248,202,8)" fg:x="68" fg:w="1"/><text x="2.1590%" y="671.50"></text></g><g><title>rust-sokoban`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.03%)</title><rect x="1.9090%" y="645" width="0.0281%" height="15" fill="rgb(206,104,37)" fg:x="68" fg:w="1"/><text x="2.1590%" y="655.50"></text></g><g><title>rust-sokoban`hashbrown::map::make_insert_hash (1 samples, 0.03%)</title><rect x="1.9090%" y="629" width="0.0281%" height="15" fill="rgb(223,8,27)" fg:x="68" fg:w="1"/><text x="2.1590%" y="639.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::texture::SamplerInfo as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="1.9090%" y="613" width="0.0281%" height="15" fill="rgb(216,217,28)" fg:x="68" fg:w="1"/><text x="2.1590%" y="623.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::texture::FilterMethod as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="1.9090%" y="597" width="0.0281%" height="15" fill="rgb(249,199,1)" fg:x="68" fg:w="1"/><text x="2.1590%" y="607.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="1.9090%" y="581" width="0.0281%" height="15" fill="rgb(240,85,17)" fg:x="68" fg:w="1"/><text x="2.1590%" y="591.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="1.9090%" y="565" width="0.0281%" height="15" fill="rgb(206,108,45)" fg:x="68" fg:w="1"/><text x="2.1590%" y="575.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="1.9090%" y="549" width="0.0281%" height="15" fill="rgb(245,210,41)" fg:x="68" fg:w="1"/><text x="2.1590%" y="559.50"></text></g><g><title>rust-sokoban`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="1.9090%" y="533" width="0.0281%" height="15" fill="rgb(206,13,37)" fg:x="68" fg:w="1"/><text x="2.1590%" y="543.50"></text></g><g><title>rust-sokoban`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="1.9090%" y="517" width="0.0281%" height="15" fill="rgb(250,61,18)" fg:x="68" fg:w="1"/><text x="2.1590%" y="527.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_index (1 samples, 0.03%)</title><rect x="1.9371%" y="597" width="0.0281%" height="15" fill="rgb(235,172,48)" fg:x="69" fg:w="1"/><text x="2.1871%" y="607.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="1.9371%" y="581" width="0.0281%" height="15" fill="rgb(249,201,17)" fg:x="69" fg:w="1"/><text x="2.1871%" y="591.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="1.9371%" y="565" width="0.0281%" height="15" fill="rgb(219,208,6)" fg:x="69" fg:w="1"/><text x="2.1871%" y="575.50"></text></g><g><title>rust-sokoban`ggez::graphics::draw (3 samples, 0.08%)</title><rect x="1.9090%" y="725" width="0.0842%" height="15" fill="rgb(248,31,23)" fg:x="68" fg:w="3"/><text x="2.1590%" y="735.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt; as ggez::graphics::Drawable&gt;::draw (3 samples, 0.08%)</title><rect x="1.9090%" y="709" width="0.0842%" height="15" fill="rgb(245,15,42)" fg:x="68" fg:w="3"/><text x="2.1590%" y="719.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::draw_image_raw (3 samples, 0.08%)</title><rect x="1.9090%" y="693" width="0.0842%" height="15" fill="rgb(222,217,39)" fg:x="68" fg:w="3"/><text x="2.1590%" y="703.50"></text></g><g><title>rust-sokoban`ggez::graphics::context::GraphicsContextGeneric&lt;B&gt;::draw (2 samples, 0.06%)</title><rect x="1.9371%" y="677" width="0.0561%" height="15" fill="rgb(210,219,27)" fg:x="69" fg:w="2"/><text x="2.1871%" y="687.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::shader::ShaderProgram&lt;Spec,C&gt; as ggez::graphics::shader::ShaderHandle&lt;Spec&gt;&gt;::draw (2 samples, 0.06%)</title><rect x="1.9371%" y="661" width="0.0561%" height="15" fill="rgb(252,166,36)" fg:x="69" fg:w="2"/><text x="2.1871%" y="671.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw (2 samples, 0.06%)</title><rect x="1.9371%" y="645" width="0.0561%" height="15" fill="rgb(245,132,34)" fg:x="69" fg:w="2"/><text x="2.1871%" y="655.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw_slice (2 samples, 0.06%)</title><rect x="1.9371%" y="629" width="0.0561%" height="15" fill="rgb(236,54,3)" fg:x="69" fg:w="2"/><text x="2.1871%" y="639.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw_indexed (2 samples, 0.06%)</title><rect x="1.9371%" y="613" width="0.0561%" height="15" fill="rgb(241,173,43)" fg:x="69" fg:w="2"/><text x="2.1871%" y="623.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::ref_buffer (1 samples, 0.03%)</title><rect x="1.9652%" y="597" width="0.0281%" height="15" fill="rgb(215,190,9)" fg:x="70" fg:w="1"/><text x="2.2152%" y="607.50"></text></g><g><title>rust-sokoban`ggez::vfs::PhysicalFS::to_absolute (1 samples, 0.03%)</title><rect x="1.9933%" y="645" width="0.0281%" height="15" fill="rgb(242,101,16)" fg:x="71" fg:w="1"/><text x="2.2433%" y="655.50"></text></g><g><title>rust-sokoban`std::path::PathBuf::push (1 samples, 0.03%)</title><rect x="1.9933%" y="629" width="0.0281%" height="15" fill="rgb(223,190,21)" fg:x="71" fg:w="1"/><text x="2.2433%" y="639.50"></text></g><g><title>rust-sokoban`&lt;std::path::PathBuf as core::convert::AsRef&lt;std::path::Path&gt;&gt;::as_ref (1 samples, 0.03%)</title><rect x="1.9933%" y="613" width="0.0281%" height="15" fill="rgb(215,228,25)" fg:x="71" fg:w="1"/><text x="2.2433%" y="623.50"></text></g><g><title>rust-sokoban`&lt;std::path::PathBuf as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="1.9933%" y="597" width="0.0281%" height="15" fill="rgb(225,36,22)" fg:x="71" fg:w="1"/><text x="2.2433%" y="607.50"></text></g><g><title>rust-sokoban`std::path::Path::new (1 samples, 0.03%)</title><rect x="1.9933%" y="581" width="0.0281%" height="15" fill="rgb(251,106,46)" fg:x="71" fg:w="1"/><text x="2.2433%" y="591.50"></text></g><g><title>rust-sokoban`&lt;std::ffi::os_str::OsString as core::convert::AsRef&lt;std::ffi::os_str::OsStr&gt;&gt;::as_ref (1 samples, 0.03%)</title><rect x="1.9933%" y="565" width="0.0281%" height="15" fill="rgb(208,90,1)" fg:x="71" fg:w="1"/><text x="2.2433%" y="575.50"></text></g><g><title>rust-sokoban`&lt;std::ffi::os_str::OsString as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="1.9933%" y="549" width="0.0281%" height="15" fill="rgb(243,10,4)" fg:x="71" fg:w="1"/><text x="2.2433%" y="559.50"></text></g><g><title>rust-sokoban`&lt;std::ffi::os_str::OsString as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.03%)</title><rect x="1.9933%" y="533" width="0.0281%" height="15" fill="rgb(212,137,27)" fg:x="71" fg:w="1"/><text x="2.2433%" y="543.50"></text></g><g><title>rust-sokoban`std::sys::unix::os_str::Buf::as_slice (1 samples, 0.03%)</title><rect x="1.9933%" y="517" width="0.0281%" height="15" fill="rgb(231,220,49)" fg:x="71" fg:w="1"/><text x="2.2433%" y="527.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="1.9933%" y="501" width="0.0281%" height="15" fill="rgb(237,96,20)" fg:x="71" fg:w="1"/><text x="2.2433%" y="511.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="1.9933%" y="485" width="0.0281%" height="15" fill="rgb(239,229,30)" fg:x="71" fg:w="1"/><text x="2.2433%" y="495.50"></text></g><g><title>rust-sokoban`&lt;ggez::vfs::PhysicalFS as ggez::vfs::VFS&gt;::open_options (4 samples, 0.11%)</title><rect x="1.9933%" y="661" width="0.1123%" height="15" fill="rgb(219,65,33)" fg:x="71" fg:w="4"/><text x="2.2433%" y="671.50"></text></g><g><title>rust-sokoban`std::fs::OpenOptions::open (3 samples, 0.08%)</title><rect x="2.0213%" y="645" width="0.0842%" height="15" fill="rgb(243,134,7)" fg:x="72" fg:w="3"/><text x="2.2713%" y="655.50"></text></g><g><title>rust-sokoban`std::fs::OpenOptions::_open (3 samples, 0.08%)</title><rect x="2.0213%" y="629" width="0.0842%" height="15" fill="rgb(216,177,54)" fg:x="72" fg:w="3"/><text x="2.2713%" y="639.50"></text></g><g><title>rust-sokoban`std::sys::unix::fs::File::open_c (3 samples, 0.08%)</title><rect x="2.0213%" y="613" width="0.0842%" height="15" fill="rgb(211,160,20)" fg:x="72" fg:w="3"/><text x="2.2713%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__open (3 samples, 0.08%)</title><rect x="2.0213%" y="597" width="0.0842%" height="15" fill="rgb(239,85,39)" fg:x="72" fg:w="3"/><text x="2.2713%" y="607.50"></text></g><g><title>rust-sokoban`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="2.1056%" y="661" width="0.0281%" height="15" fill="rgb(232,125,22)" fg:x="75" fg:w="1"/><text x="2.3556%" y="671.50"></text></g><g><title>rust-sokoban`ggez::filesystem::Filesystem::open (6 samples, 0.17%)</title><rect x="1.9933%" y="709" width="0.1684%" height="15" fill="rgb(244,57,34)" fg:x="71" fg:w="6"/><text x="2.2433%" y="719.50"></text></g><g><title>rust-sokoban`ggez::vfs::VFS::open (6 samples, 0.17%)</title><rect x="1.9933%" y="693" width="0.1684%" height="15" fill="rgb(214,203,32)" fg:x="71" fg:w="6"/><text x="2.2433%" y="703.50"></text></g><g><title>rust-sokoban`&lt;ggez::vfs::OverlayFS as ggez::vfs::VFS&gt;::open_options (6 samples, 0.17%)</title><rect x="1.9933%" y="677" width="0.1684%" height="15" fill="rgb(207,58,43)" fg:x="71" fg:w="6"/><text x="2.2433%" y="687.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="2.1336%" y="661" width="0.0281%" height="15" fill="rgb(215,193,15)" fg:x="76" fg:w="1"/><text x="2.3836%" y="671.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="2.1336%" y="645" width="0.0281%" height="15" fill="rgb(232,15,44)" fg:x="76" fg:w="1"/><text x="2.3836%" y="655.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="2.1336%" y="629" width="0.0281%" height="15" fill="rgb(212,3,48)" fg:x="76" fg:w="1"/><text x="2.3836%" y="639.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="2.1336%" y="613" width="0.0281%" height="15" fill="rgb(218,128,7)" fg:x="76" fg:w="1"/><text x="2.3836%" y="623.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="2.1336%" y="597" width="0.0281%" height="15" fill="rgb(226,216,39)" fg:x="76" fg:w="1"/><text x="2.3836%" y="607.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="2.1336%" y="581" width="0.0281%" height="15" fill="rgb(243,47,51)" fg:x="76" fg:w="1"/><text x="2.3836%" y="591.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="2.1336%" y="565" width="0.0281%" height="15" fill="rgb(241,183,40)" fg:x="76" fg:w="1"/><text x="2.3836%" y="575.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.03%)</title><rect x="2.1336%" y="549" width="0.0281%" height="15" fill="rgb(231,217,32)" fg:x="76" fg:w="1"/><text x="2.3836%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="2.1617%" y="693" width="0.0281%" height="15" fill="rgb(229,61,38)" fg:x="77" fg:w="1"/><text x="2.4117%" y="703.50"></text></g><g><title>AGXMetalG13X`0x00000001d407196c (1 samples, 0.03%)</title><rect x="2.1898%" y="501" width="0.0281%" height="15" fill="rgb(225,210,5)" fg:x="78" fg:w="1"/><text x="2.4398%" y="511.50"></text></g><g><title>AGXMetalG13X`0x00000001d405f6e8 (1 samples, 0.03%)</title><rect x="2.1898%" y="485" width="0.0281%" height="15" fill="rgb(231,79,45)" fg:x="78" fg:w="1"/><text x="2.4398%" y="495.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::loadObj (2 samples, 0.06%)</title><rect x="2.1898%" y="517" width="0.0561%" height="15" fill="rgb(224,100,7)" fg:x="78" fg:w="2"/><text x="2.4398%" y="527.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::isValidTexture (1 samples, 0.03%)</title><rect x="2.2179%" y="501" width="0.0281%" height="15" fill="rgb(241,198,18)" fg:x="79" fg:w="1"/><text x="2.4679%" y="511.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (1 samples, 0.03%)</title><rect x="2.2179%" y="485" width="0.0281%" height="15" fill="rgb(252,97,53)" fg:x="79" fg:w="1"/><text x="2.4679%" y="495.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_rgba_image (3 samples, 0.08%)</title><rect x="2.1898%" y="693" width="0.0842%" height="15" fill="rgb(220,88,7)" fg:x="78" fg:w="3"/><text x="2.4398%" y="703.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_rgba8 (3 samples, 0.08%)</title><rect x="2.1898%" y="677" width="0.0842%" height="15" fill="rgb(213,176,14)" fg:x="78" fg:w="3"/><text x="2.4398%" y="687.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;B&gt;::make_raw (3 samples, 0.08%)</title><rect x="2.1898%" y="661" width="0.0842%" height="15" fill="rgb(246,73,7)" fg:x="78" fg:w="3"/><text x="2.4398%" y="671.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_texture_raw (3 samples, 0.08%)</title><rect x="2.1898%" y="645" width="0.0842%" height="15" fill="rgb(245,64,36)" fg:x="78" fg:w="3"/><text x="2.4398%" y="655.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::init_texture_data (3 samples, 0.08%)</title><rect x="2.1898%" y="629" width="0.0842%" height="15" fill="rgb(245,80,10)" fg:x="78" fg:w="3"/><text x="2.4398%" y="639.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::update_texture (3 samples, 0.08%)</title><rect x="2.1898%" y="613" width="0.0842%" height="15" fill="rgb(232,107,50)" fg:x="78" fg:w="3"/><text x="2.4398%" y="623.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::tex_sub_image (3 samples, 0.08%)</title><rect x="2.1898%" y="597" width="0.0842%" height="15" fill="rgb(253,3,0)" fg:x="78" fg:w="3"/><text x="2.4398%" y="607.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::TexSubImage2D (3 samples, 0.08%)</title><rect x="2.1898%" y="581" width="0.0842%" height="15" fill="rgb(212,99,53)" fg:x="78" fg:w="3"/><text x="2.4398%" y="591.50"></text></g><g><title>libGL.dylib`glTexSubImage2D (3 samples, 0.08%)</title><rect x="2.1898%" y="565" width="0.0842%" height="15" fill="rgb(249,111,54)" fg:x="78" fg:w="3"/><text x="2.4398%" y="575.50"></text></g><g><title>GLEngine`glTexSubImage2D_Exec (3 samples, 0.08%)</title><rect x="2.1898%" y="549" width="0.0842%" height="15" fill="rgb(249,55,30)" fg:x="78" fg:w="3"/><text x="2.4398%" y="559.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldModifyTexSubImage (3 samples, 0.08%)</title><rect x="2.1898%" y="533" width="0.0842%" height="15" fill="rgb(237,47,42)" fg:x="78" fg:w="3"/><text x="2.4398%" y="543.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (1 samples, 0.03%)</title><rect x="2.2459%" y="517" width="0.0281%" height="15" fill="rgb(211,20,18)" fg:x="80" fg:w="1"/><text x="2.4959%" y="527.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (1 samples, 0.03%)</title><rect x="2.2459%" y="501" width="0.0281%" height="15" fill="rgb(231,203,46)" fg:x="80" fg:w="1"/><text x="2.4959%" y="511.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea61fc (1 samples, 0.03%)</title><rect x="2.2459%" y="485" width="0.0281%" height="15" fill="rgb(237,142,3)" fg:x="80" fg:w="1"/><text x="2.4959%" y="495.50"></text></g><g><title>AGXMetalG13X`0x00000001d3eeb204 (1 samples, 0.03%)</title><rect x="2.2459%" y="469" width="0.0281%" height="15" fill="rgb(241,107,1)" fg:x="80" fg:w="1"/><text x="2.4959%" y="479.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="2.3582%" y="549" width="0.0281%" height="15" fill="rgb(229,83,13)" fg:x="84" fg:w="1"/><text x="2.6082%" y="559.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.08%)</title><rect x="2.3582%" y="565" width="0.0842%" height="15" fill="rgb(241,91,40)" fg:x="84" fg:w="3"/><text x="2.6082%" y="575.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (2 samples, 0.06%)</title><rect x="2.3863%" y="549" width="0.0561%" height="15" fill="rgb(225,3,45)" fg:x="85" fg:w="2"/><text x="2.6363%" y="559.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.28%)</title><rect x="2.3302%" y="629" width="0.2807%" height="15" fill="rgb(244,223,14)" fg:x="83" fg:w="10"/><text x="2.5802%" y="639.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (10 samples, 0.28%)</title><rect x="2.3302%" y="613" width="0.2807%" height="15" fill="rgb(224,124,37)" fg:x="83" fg:w="10"/><text x="2.5802%" y="623.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (10 samples, 0.28%)</title><rect x="2.3302%" y="597" width="0.2807%" height="15" fill="rgb(251,171,30)" fg:x="83" fg:w="10"/><text x="2.5802%" y="607.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (10 samples, 0.28%)</title><rect x="2.3302%" y="581" width="0.2807%" height="15" fill="rgb(236,46,54)" fg:x="83" fg:w="10"/><text x="2.5802%" y="591.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.17%)</title><rect x="2.4424%" y="565" width="0.1684%" height="15" fill="rgb(245,213,5)" fg:x="87" fg:w="6"/><text x="2.6924%" y="575.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.11%)</title><rect x="2.4986%" y="549" width="0.1123%" height="15" fill="rgb(230,144,27)" fg:x="89" fg:w="4"/><text x="2.7486%" y="559.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="2.5828%" y="533" width="0.0281%" height="15" fill="rgb(220,86,6)" fg:x="92" fg:w="1"/><text x="2.8328%" y="543.50"></text></g><g><title>rust-sokoban`core::ptr::read (4 samples, 0.11%)</title><rect x="2.6670%" y="613" width="0.1123%" height="15" fill="rgb(240,20,13)" fg:x="95" fg:w="4"/><text x="2.9170%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.22%)</title><rect x="2.6109%" y="629" width="0.2246%" height="15" fill="rgb(217,89,34)" fg:x="93" fg:w="8"/><text x="2.8609%" y="639.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (2 samples, 0.06%)</title><rect x="2.7793%" y="613" width="0.0561%" height="15" fill="rgb(229,13,5)" fg:x="99" fg:w="2"/><text x="3.0293%" y="623.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (2 samples, 0.06%)</title><rect x="2.7793%" y="597" width="0.0561%" height="15" fill="rgb(244,67,35)" fg:x="99" fg:w="2"/><text x="3.0293%" y="607.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="2.7793%" y="581" width="0.0561%" height="15" fill="rgb(221,40,2)" fg:x="99" fg:w="2"/><text x="3.0293%" y="591.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="2.8074%" y="565" width="0.0281%" height="15" fill="rgb(237,157,21)" fg:x="100" fg:w="1"/><text x="3.0574%" y="575.50"></text></g><g><title>rust-sokoban`&lt;image::buffer_::Pixels&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (2 samples, 0.06%)</title><rect x="2.8916%" y="613" width="0.0561%" height="15" fill="rgb(222,94,11)" fg:x="103" fg:w="2"/><text x="3.1416%" y="623.50"></text></g><g><title>rust-sokoban`&lt;image::color::Rgba&lt;T&gt; as image::traits::Pixel&gt;::from_slice (2 samples, 0.06%)</title><rect x="2.8916%" y="597" width="0.0561%" height="15" fill="rgb(249,113,6)" fg:x="103" fg:w="2"/><text x="3.1416%" y="607.50"></text></g><g><title>rust-sokoban`image::dynimage::DynamicImage::to_rgba8 (26 samples, 0.73%)</title><rect x="2.2740%" y="693" width="0.7299%" height="15" fill="rgb(238,137,36)" fg:x="81" fg:w="26"/><text x="2.5240%" y="703.50"></text></g><g><title>rust-sokoban`&lt;image::buffer_::ImageBuffer&lt;FromType,Container&gt; as image::buffer_::ConvertBuffer&lt;image::buffer_::ImageBuffer&lt;ToType,alloc::vec::Vec&lt;&lt;ToType as image::traits::Pixel&gt;::Subpixel&gt;&gt;&gt;&gt;::convert (26 samples, 0.73%)</title><rect x="2.2740%" y="677" width="0.7299%" height="15" fill="rgb(210,102,26)" fg:x="81" fg:w="26"/><text x="2.5240%" y="687.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.73%)</title><rect x="2.2740%" y="661" width="0.7299%" height="15" fill="rgb(218,30,30)" fg:x="81" fg:w="26"/><text x="2.5240%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (25 samples, 0.70%)</title><rect x="2.3021%" y="645" width="0.7019%" height="15" fill="rgb(214,67,26)" fg:x="82" fg:w="25"/><text x="2.5521%" y="655.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::map (6 samples, 0.17%)</title><rect x="2.8355%" y="629" width="0.1684%" height="15" fill="rgb(251,9,53)" fg:x="101" fg:w="6"/><text x="3.0855%" y="639.50"></text></g><g><title>rust-sokoban`&lt;image::buffer_::PixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (2 samples, 0.06%)</title><rect x="2.9478%" y="613" width="0.0561%" height="15" fill="rgb(228,204,25)" fg:x="105" fg:w="2"/><text x="3.1978%" y="623.50"></text></g><g><title>rust-sokoban`&lt;image::color::Rgba&lt;T&gt; as image::traits::Pixel&gt;::from_slice_mut (2 samples, 0.06%)</title><rect x="2.9478%" y="597" width="0.0561%" height="15" fill="rgb(207,153,8)" fg:x="105" fg:w="2"/><text x="3.1978%" y="607.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="3.0039%" y="597" width="0.0281%" height="15" fill="rgb(242,9,16)" fg:x="107" fg:w="1"/><text x="3.2539%" y="607.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="3.0039%" y="581" width="0.0281%" height="15" fill="rgb(217,211,10)" fg:x="107" fg:w="1"/><text x="3.2539%" y="591.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="3.0039%" y="565" width="0.0281%" height="15" fill="rgb(219,228,52)" fg:x="107" fg:w="1"/><text x="3.2539%" y="575.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="3.0039%" y="549" width="0.0281%" height="15" fill="rgb(231,92,29)" fg:x="107" fg:w="1"/><text x="3.2539%" y="559.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="3.0601%" y="549" width="0.0281%" height="15" fill="rgb(232,8,23)" fg:x="109" fg:w="1"/><text x="3.3101%" y="559.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.0601%" y="533" width="0.0281%" height="15" fill="rgb(216,211,34)" fg:x="109" fg:w="1"/><text x="3.3101%" y="543.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="3.0601%" y="517" width="0.0281%" height="15" fill="rgb(236,151,0)" fg:x="109" fg:w="1"/><text x="3.3101%" y="527.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="3.0601%" y="501" width="0.0281%" height="15" fill="rgb(209,168,3)" fg:x="109" fg:w="1"/><text x="3.3101%" y="511.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="3.0882%" y="533" width="0.0281%" height="15" fill="rgb(208,129,28)" fg:x="110" fg:w="1"/><text x="3.3382%" y="543.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="3.0882%" y="517" width="0.0281%" height="15" fill="rgb(229,78,22)" fg:x="110" fg:w="1"/><text x="3.3382%" y="527.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="3.0882%" y="501" width="0.0281%" height="15" fill="rgb(228,187,13)" fg:x="110" fg:w="1"/><text x="3.3382%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="3.1162%" y="485" width="0.0281%" height="15" fill="rgb(240,119,24)" fg:x="111" fg:w="1"/><text x="3.3662%" y="495.50"></text></g><g><title>rust-sokoban`crc32fast::Hasher::update (1 samples, 0.03%)</title><rect x="3.1443%" y="485" width="0.0281%" height="15" fill="rgb(209,194,42)" fg:x="112" fg:w="1"/><text x="3.3943%" y="495.50"></text></g><g><title>rust-sokoban`crc32fast::baseline::State::update (1 samples, 0.03%)</title><rect x="3.1443%" y="469" width="0.0281%" height="15" fill="rgb(247,200,46)" fg:x="112" fg:w="1"/><text x="3.3943%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="3.1443%" y="453" width="0.0281%" height="15" fill="rgb(218,76,16)" fg:x="112" fg:w="1"/><text x="3.3943%" y="463.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::apply_match (1 samples, 0.03%)</title><rect x="3.1724%" y="437" width="0.0281%" height="15" fill="rgb(225,21,48)" fg:x="113" fg:w="1"/><text x="3.4224%" y="447.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::transfer (1 samples, 0.03%)</title><rect x="3.1724%" y="421" width="0.0281%" height="15" fill="rgb(239,223,50)" fg:x="113" fg:w="1"/><text x="3.4224%" y="431.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="3.2566%" y="357" width="0.0281%" height="15" fill="rgb(244,45,21)" fg:x="116" fg:w="1"/><text x="3.5066%" y="367.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_fast (4 samples, 0.11%)</title><rect x="3.2004%" y="437" width="0.1123%" height="15" fill="rgb(232,33,43)" fg:x="114" fg:w="4"/><text x="3.4504%" y="447.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::apply_match (3 samples, 0.08%)</title><rect x="3.2285%" y="421" width="0.0842%" height="15" fill="rgb(209,8,3)" fg:x="115" fg:w="3"/><text x="3.4785%" y="431.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::transfer (3 samples, 0.08%)</title><rect x="3.2285%" y="405" width="0.0842%" height="15" fill="rgb(214,25,53)" fg:x="115" fg:w="3"/><text x="3.4785%" y="415.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="3.2566%" y="389" width="0.0561%" height="15" fill="rgb(254,186,54)" fg:x="116" fg:w="2"/><text x="3.5066%" y="399.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="3.2566%" y="373" width="0.0561%" height="15" fill="rgb(208,174,49)" fg:x="116" fg:w="2"/><text x="3.5066%" y="383.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="3.2847%" y="357" width="0.0281%" height="15" fill="rgb(233,191,51)" fg:x="117" fg:w="1"/><text x="3.5347%" y="367.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="3.3970%" y="421" width="0.0281%" height="15" fill="rgb(222,134,10)" fg:x="121" fg:w="1"/><text x="3.6470%" y="431.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.06%)</title><rect x="3.5373%" y="389" width="0.0561%" height="15" fill="rgb(230,226,20)" fg:x="126" fg:w="2"/><text x="3.7873%" y="399.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="3.4531%" y="405" width="0.1684%" height="15" fill="rgb(251,111,25)" fg:x="123" fg:w="6"/><text x="3.7031%" y="415.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="3.5935%" y="389" width="0.0281%" height="15" fill="rgb(224,40,46)" fg:x="128" fg:w="1"/><text x="3.8435%" y="399.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.06%)</title><rect x="3.6216%" y="405" width="0.0561%" height="15" fill="rgb(236,108,47)" fg:x="129" fg:w="2"/><text x="3.8716%" y="415.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::init_tree (14 samples, 0.39%)</title><rect x="3.3127%" y="437" width="0.3930%" height="15" fill="rgb(234,93,0)" fg:x="118" fg:w="14"/><text x="3.5627%" y="447.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::memset (10 samples, 0.28%)</title><rect x="3.4250%" y="421" width="0.2807%" height="15" fill="rgb(224,213,32)" fg:x="122" fg:w="10"/><text x="3.6750%" y="431.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="3.6777%" y="405" width="0.0281%" height="15" fill="rgb(251,11,48)" fg:x="131" fg:w="1"/><text x="3.9277%" y="415.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::read_bits (3 samples, 0.08%)</title><rect x="3.7058%" y="437" width="0.0842%" height="15" fill="rgb(236,173,5)" fg:x="132" fg:w="3"/><text x="3.9558%" y="447.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_inner::_{{closure}} (3 samples, 0.08%)</title><rect x="3.7058%" y="421" width="0.0842%" height="15" fill="rgb(230,95,12)" fg:x="132" fg:w="3"/><text x="3.9558%" y="431.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::memset (3 samples, 0.08%)</title><rect x="3.7058%" y="405" width="0.0842%" height="15" fill="rgb(232,209,1)" fg:x="132" fg:w="3"/><text x="3.9558%" y="415.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="3.7339%" y="389" width="0.0561%" height="15" fill="rgb(232,6,1)" fg:x="133" fg:w="2"/><text x="3.9839%" y="399.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="3.7619%" y="373" width="0.0281%" height="15" fill="rgb(210,224,50)" fg:x="134" fg:w="1"/><text x="4.0119%" y="383.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="4.4919%" y="357" width="0.0281%" height="15" fill="rgb(228,127,35)" fg:x="160" fg:w="1"/><text x="4.7419%" y="367.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="4.5199%" y="357" width="0.0281%" height="15" fill="rgb(245,102,45)" fg:x="161" fg:w="1"/><text x="4.7699%" y="367.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.17%)</title><rect x="4.4076%" y="373" width="0.1684%" height="15" fill="rgb(214,1,49)" fg:x="157" fg:w="6"/><text x="4.6576%" y="383.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="4.5480%" y="357" width="0.0281%" height="15" fill="rgb(226,163,40)" fg:x="162" fg:w="1"/><text x="4.7980%" y="367.50"></text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::decompress (51 samples, 1.43%)</title><rect x="3.1724%" y="485" width="1.4318%" height="15" fill="rgb(239,212,28)" fg:x="113" fg:w="51"/><text x="3.4224%" y="495.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress (51 samples, 1.43%)</title><rect x="3.1724%" y="469" width="1.4318%" height="15" fill="rgb(220,20,13)" fg:x="113" fg:w="51"/><text x="3.4224%" y="479.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_inner (51 samples, 1.43%)</title><rect x="3.1724%" y="453" width="1.4318%" height="15" fill="rgb(210,164,35)" fg:x="113" fg:w="51"/><text x="3.4224%" y="463.50"></text></g><g><title>rust-sokoban`miniz_oxide::shared::update_adler32 (29 samples, 0.81%)</title><rect x="3.7900%" y="437" width="0.8141%" height="15" fill="rgb(248,109,41)" fg:x="135" fg:w="29"/><text x="4.0400%" y="447.50"></text></g><g><title>rust-sokoban`adler32::RollingAdler32::update_buffer (29 samples, 0.81%)</title><rect x="3.7900%" y="421" width="0.8141%" height="15" fill="rgb(238,23,50)" fg:x="135" fg:w="29"/><text x="4.0400%" y="431.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.53%)</title><rect x="4.0707%" y="405" width="0.5334%" height="15" fill="rgb(211,48,49)" fg:x="145" fg:w="19"/><text x="4.3207%" y="415.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.48%)</title><rect x="4.1269%" y="389" width="0.4773%" height="15" fill="rgb(223,36,21)" fg:x="147" fg:w="17"/><text x="4.3769%" y="399.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="4.5761%" y="373" width="0.0281%" height="15" fill="rgb(207,123,46)" fg:x="163" fg:w="1"/><text x="4.8261%" y="383.50"></text></g><g><title>rust-sokoban`png::decoder::ReadDecoder&lt;R&gt;::decode_next (54 samples, 1.52%)</title><rect x="3.1162%" y="533" width="1.5160%" height="15" fill="rgb(240,218,32)" fg:x="111" fg:w="54"/><text x="3.3662%" y="543.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::update (54 samples, 1.52%)</title><rect x="3.1162%" y="517" width="1.5160%" height="15" fill="rgb(252,5,43)" fg:x="111" fg:w="54"/><text x="3.3662%" y="527.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::next_state (54 samples, 1.52%)</title><rect x="3.1162%" y="501" width="1.5160%" height="15" fill="rgb(252,84,19)" fg:x="111" fg:w="54"/><text x="3.3662%" y="511.50"></text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::reset (1 samples, 0.03%)</title><rect x="4.6042%" y="485" width="0.0281%" height="15" fill="rgb(243,152,39)" fg:x="164" fg:w="1"/><text x="4.8542%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="4.6042%" y="469" width="0.0281%" height="15" fill="rgb(234,160,15)" fg:x="164" fg:w="1"/><text x="4.8542%" y="479.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_pass (1 samples, 0.03%)</title><rect x="4.6322%" y="533" width="0.0281%" height="15" fill="rgb(237,34,20)" fg:x="165" fg:w="1"/><text x="4.8822%" y="543.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="4.6322%" y="517" width="0.0281%" height="15" fill="rgb(229,97,13)" fg:x="165" fg:w="1"/><text x="4.8822%" y="527.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="4.6322%" y="501" width="0.0281%" height="15" fill="rgb(234,71,50)" fg:x="165" fg:w="1"/><text x="4.8822%" y="511.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="4.6322%" y="485" width="0.0281%" height="15" fill="rgb(253,155,4)" fg:x="165" fg:w="1"/><text x="4.8822%" y="495.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.7165%" y="517" width="0.0281%" height="15" fill="rgb(222,185,37)" fg:x="168" fg:w="1"/><text x="4.9665%" y="527.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="4.7165%" y="501" width="0.0281%" height="15" fill="rgb(251,177,13)" fg:x="168" fg:w="1"/><text x="4.9665%" y="511.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="4.7165%" y="485" width="0.0281%" height="15" fill="rgb(250,179,40)" fg:x="168" fg:w="1"/><text x="4.9665%" y="495.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="4.7165%" y="469" width="0.0281%" height="15" fill="rgb(242,44,2)" fg:x="168" fg:w="1"/><text x="4.9665%" y="479.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.7445%" y="517" width="0.0281%" height="15" fill="rgb(216,177,13)" fg:x="169" fg:w="1"/><text x="4.9945%" y="527.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (1 samples, 0.03%)</title><rect x="4.7445%" y="501" width="0.0281%" height="15" fill="rgb(216,106,43)" fg:x="169" fg:w="1"/><text x="4.9945%" y="511.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.03%)</title><rect x="4.7445%" y="485" width="0.0281%" height="15" fill="rgb(216,183,2)" fg:x="169" fg:w="1"/><text x="4.9945%" y="495.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="4.7445%" y="469" width="0.0281%" height="15" fill="rgb(249,75,3)" fg:x="169" fg:w="1"/><text x="4.9945%" y="479.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="4.7445%" y="453" width="0.0281%" height="15" fill="rgb(219,67,39)" fg:x="169" fg:w="1"/><text x="4.9945%" y="463.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.14%)</title><rect x="4.7726%" y="501" width="0.1404%" height="15" fill="rgb(253,228,2)" fg:x="170" fg:w="5"/><text x="5.0226%" y="511.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="4.8849%" y="485" width="0.0281%" height="15" fill="rgb(235,138,27)" fg:x="174" fg:w="1"/><text x="5.1349%" y="495.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (66 samples, 1.85%)</title><rect x="3.0882%" y="549" width="1.8529%" height="15" fill="rgb(236,97,51)" fg:x="110" fg:w="66"/><text x="3.3382%" y="559.50">r..</text></g><g><title>rust-sokoban`png::filter::unfilter (10 samples, 0.28%)</title><rect x="4.6603%" y="533" width="0.2807%" height="15" fill="rgb(240,80,30)" fg:x="166" fg:w="10"/><text x="4.9103%" y="543.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.17%)</title><rect x="4.7726%" y="517" width="0.1684%" height="15" fill="rgb(230,178,19)" fg:x="170" fg:w="6"/><text x="5.0226%" y="527.50"></text></g><g><title>rust-sokoban`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="4.9130%" y="501" width="0.0281%" height="15" fill="rgb(210,190,27)" fg:x="175" fg:w="1"/><text x="5.1630%" y="511.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_row (69 samples, 1.94%)</title><rect x="3.0320%" y="597" width="1.9371%" height="15" fill="rgb(222,107,31)" fg:x="108" fg:w="69"/><text x="3.2820%" y="607.50">r..</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_interlaced_row (69 samples, 1.94%)</title><rect x="3.0320%" y="581" width="1.9371%" height="15" fill="rgb(216,127,34)" fg:x="108" fg:w="69"/><text x="3.2820%" y="591.50">r..</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (69 samples, 1.94%)</title><rect x="3.0320%" y="565" width="1.9371%" height="15" fill="rgb(234,116,52)" fg:x="108" fg:w="69"/><text x="3.2820%" y="575.50">r..</text></g><g><title>rust-sokoban`png::filter::FilterType::from_u8 (1 samples, 0.03%)</title><rect x="4.9410%" y="549" width="0.0281%" height="15" fill="rgb(222,124,15)" fg:x="176" fg:w="1"/><text x="5.1910%" y="559.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="4.9691%" y="581" width="0.0281%" height="15" fill="rgb(231,179,28)" fg:x="177" fg:w="1"/><text x="5.2191%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="4.9691%" y="565" width="0.0281%" height="15" fill="rgb(226,93,45)" fg:x="177" fg:w="1"/><text x="5.2191%" y="575.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_bytes_with_format (102 samples, 2.86%)</title><rect x="2.1617%" y="709" width="2.8636%" height="15" fill="rgb(215,8,51)" fg:x="77" fg:w="102"/><text x="2.4117%" y="719.50">ru..</text></g><g><title>rust-sokoban`image::io::free_functions::load (72 samples, 2.02%)</title><rect x="3.0039%" y="693" width="2.0213%" height="15" fill="rgb(223,106,5)" fg:x="107" fg:w="72"/><text x="3.2539%" y="703.50">r..</text></g><g><title>rust-sokoban`image::dynimage::DynamicImage::from_decoder (72 samples, 2.02%)</title><rect x="3.0039%" y="677" width="2.0213%" height="15" fill="rgb(250,191,5)" fg:x="107" fg:w="72"/><text x="3.2539%" y="687.50">r..</text></g><g><title>rust-sokoban`image::dynimage::decoder_to_image (72 samples, 2.02%)</title><rect x="3.0039%" y="661" width="2.0213%" height="15" fill="rgb(242,132,44)" fg:x="107" fg:w="72"/><text x="3.2539%" y="671.50">r..</text></g><g><title>rust-sokoban`image::image::decoder_to_vec (72 samples, 2.02%)</title><rect x="3.0039%" y="645" width="2.0213%" height="15" fill="rgb(251,152,29)" fg:x="107" fg:w="72"/><text x="3.2539%" y="655.50">r..</text></g><g><title>rust-sokoban`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (72 samples, 2.02%)</title><rect x="3.0039%" y="629" width="2.0213%" height="15" fill="rgb(218,179,5)" fg:x="107" fg:w="72"/><text x="3.2539%" y="639.50">r..</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_frame (72 samples, 2.02%)</title><rect x="3.0039%" y="613" width="2.0213%" height="15" fill="rgb(227,67,19)" fg:x="107" fg:w="72"/><text x="3.2539%" y="623.50">r..</text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (2 samples, 0.06%)</title><rect x="4.9691%" y="597" width="0.0561%" height="15" fill="rgb(233,119,31)" fg:x="177" fg:w="2"/><text x="5.2191%" y="607.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (1 samples, 0.03%)</title><rect x="4.9972%" y="581" width="0.0281%" height="15" fill="rgb(241,120,22)" fg:x="178" fg:w="1"/><text x="5.2472%" y="591.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.03%)</title><rect x="4.9972%" y="565" width="0.0281%" height="15" fill="rgb(224,102,30)" fg:x="178" fg:w="1"/><text x="5.2472%" y="575.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="4.9972%" y="549" width="0.0281%" height="15" fill="rgb(210,164,37)" fg:x="178" fg:w="1"/><text x="5.2472%" y="559.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="4.9972%" y="533" width="0.0281%" height="15" fill="rgb(226,191,16)" fg:x="178" fg:w="1"/><text x="5.2472%" y="543.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="5.0253%" y="613" width="0.0281%" height="15" fill="rgb(214,40,45)" fg:x="179" fg:w="1"/><text x="5.2753%" y="623.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="5.0253%" y="597" width="0.0281%" height="15" fill="rgb(244,29,26)" fg:x="179" fg:w="1"/><text x="5.2753%" y="607.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="5.0253%" y="581" width="0.0281%" height="15" fill="rgb(216,16,5)" fg:x="179" fg:w="1"/><text x="5.2753%" y="591.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="5.0253%" y="565" width="0.0281%" height="15" fill="rgb(249,76,35)" fg:x="179" fg:w="1"/><text x="5.2753%" y="575.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::new (110 samples, 3.09%)</title><rect x="1.9933%" y="725" width="3.0882%" height="15" fill="rgb(207,11,44)" fg:x="71" fg:w="110"/><text x="2.2433%" y="735.50">rus..</text></g><g><title>rust-sokoban`std::io::Read::read_to_end (2 samples, 0.06%)</title><rect x="5.0253%" y="709" width="0.0561%" height="15" fill="rgb(228,190,49)" fg:x="179" fg:w="2"/><text x="5.2753%" y="719.50"></text></g><g><title>rust-sokoban`std::io::default_read_to_end (2 samples, 0.06%)</title><rect x="5.0253%" y="693" width="0.0561%" height="15" fill="rgb(214,173,12)" fg:x="179" fg:w="2"/><text x="5.2753%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="5.0253%" y="677" width="0.0561%" height="15" fill="rgb(218,26,35)" fg:x="179" fg:w="2"/><text x="5.2753%" y="687.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="5.0253%" y="661" width="0.0561%" height="15" fill="rgb(220,200,19)" fg:x="179" fg:w="2"/><text x="5.2753%" y="671.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="5.0253%" y="645" width="0.0561%" height="15" fill="rgb(239,95,49)" fg:x="179" fg:w="2"/><text x="5.2753%" y="655.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="5.0253%" y="629" width="0.0561%" height="15" fill="rgb(235,85,53)" fg:x="179" fg:w="2"/><text x="5.2753%" y="639.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="5.0533%" y="613" width="0.0281%" height="15" fill="rgb(233,133,31)" fg:x="180" fg:w="1"/><text x="5.3033%" y="623.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="5.0533%" y="597" width="0.0281%" height="15" fill="rgb(218,25,20)" fg:x="180" fg:w="1"/><text x="5.3033%" y="607.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.03%)</title><rect x="5.0533%" y="581" width="0.0281%" height="15" fill="rgb(252,210,38)" fg:x="180" fg:w="1"/><text x="5.3033%" y="591.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::cleanup (1 samples, 0.03%)</title><rect x="5.0814%" y="709" width="0.0281%" height="15" fill="rgb(242,134,21)" fg:x="181" fg:w="1"/><text x="5.3314%" y="719.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Manager&lt;R&gt; as gfx_core::handle::Producer&lt;R&gt;&gt;::clean_with (1 samples, 0.03%)</title><rect x="5.0814%" y="693" width="0.0281%" height="15" fill="rgb(213,28,48)" fg:x="181" fg:w="1"/><text x="5.3314%" y="703.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Manager&lt;R&gt; as gfx_core::handle::Producer&lt;R&gt;&gt;::clean_with::clean_vec (1 samples, 0.03%)</title><rect x="5.0814%" y="677" width="0.0281%" height="15" fill="rgb(250,196,2)" fg:x="181" fg:w="1"/><text x="5.3314%" y="687.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;gfx_device_gl::ResourceView&gt;&gt; (1 samples, 0.03%)</title><rect x="5.0814%" y="661" width="0.0281%" height="15" fill="rgb(227,5,17)" fg:x="181" fg:w="1"/><text x="5.3314%" y="671.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="5.0814%" y="645" width="0.0281%" height="15" fill="rgb(221,226,24)" fg:x="181" fg:w="1"/><text x="5.3314%" y="655.50"></text></g><g><title>rust-sokoban`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.03%)</title><rect x="5.0814%" y="629" width="0.0281%" height="15" fill="rgb(211,5,48)" fg:x="181" fg:w="1"/><text x="5.3314%" y="639.50"></text></g><g><title>rust-sokoban`core::mem::drop (1 samples, 0.03%)</title><rect x="5.0814%" y="613" width="0.0281%" height="15" fill="rgb(219,150,6)" fg:x="181" fg:w="1"/><text x="5.3314%" y="623.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;gfx_device_gl::ResourceView&gt;&gt; (1 samples, 0.03%)</title><rect x="5.0814%" y="597" width="0.0281%" height="15" fill="rgb(251,46,16)" fg:x="181" fg:w="1"/><text x="5.3314%" y="607.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="5.0814%" y="581" width="0.0281%" height="15" fill="rgb(220,204,40)" fg:x="181" fg:w="1"/><text x="5.3314%" y="591.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="5.0814%" y="565" width="0.0281%" height="15" fill="rgb(211,85,2)" fg:x="181" fg:w="1"/><text x="5.3314%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="5.0814%" y="549" width="0.0281%" height="15" fill="rgb(229,17,7)" fg:x="181" fg:w="1"/><text x="5.3314%" y="559.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::pin_submitted_resources (1 samples, 0.03%)</title><rect x="5.1095%" y="677" width="0.0281%" height="15" fill="rgb(239,72,28)" fg:x="182" fg:w="1"/><text x="5.3595%" y="687.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::extend (1 samples, 0.03%)</title><rect x="5.1095%" y="661" width="0.0281%" height="15" fill="rgb(230,47,54)" fg:x="182" fg:w="1"/><text x="5.3595%" y="671.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="5.1095%" y="645" width="0.0281%" height="15" fill="rgb(214,50,8)" fg:x="182" fg:w="1"/><text x="5.3595%" y="655.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="5.1095%" y="629" width="0.0281%" height="15" fill="rgb(216,198,43)" fg:x="182" fg:w="1"/><text x="5.3595%" y="639.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="5.1095%" y="613" width="0.0281%" height="15" fill="rgb(234,20,35)" fg:x="182" fg:w="1"/><text x="5.3595%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="5.1095%" y="597" width="0.0281%" height="15" fill="rgb(254,45,19)" fg:x="182" fg:w="1"/><text x="5.3595%" y="607.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="5.1095%" y="581" width="0.0281%" height="15" fill="rgb(219,14,44)" fg:x="182" fg:w="1"/><text x="5.3595%" y="591.50"></text></g><g><title>rust-sokoban`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="5.1095%" y="565" width="0.0281%" height="15" fill="rgb(217,220,26)" fg:x="182" fg:w="1"/><text x="5.3595%" y="575.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::extend::_{{closure}} (1 samples, 0.03%)</title><rect x="5.1095%" y="549" width="0.0281%" height="15" fill="rgb(213,158,28)" fg:x="182" fg:w="1"/><text x="5.3595%" y="559.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="5.1095%" y="533" width="0.0281%" height="15" fill="rgb(252,51,52)" fg:x="182" fg:w="1"/><text x="5.3595%" y="543.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8dba4 (1 samples, 0.03%)</title><rect x="5.1376%" y="565" width="0.0281%" height="15" fill="rgb(246,89,16)" fg:x="183" fg:w="1"/><text x="5.3876%" y="575.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d94d70 (1 samples, 0.03%)</title><rect x="5.1376%" y="549" width="0.0281%" height="15" fill="rgb(216,158,49)" fg:x="183" fg:w="1"/><text x="5.3876%" y="559.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d94588 (1 samples, 0.03%)</title><rect x="5.1376%" y="533" width="0.0281%" height="15" fill="rgb(236,107,19)" fg:x="183" fg:w="1"/><text x="5.3876%" y="543.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8fe60 (1 samples, 0.03%)</title><rect x="5.1376%" y="517" width="0.0281%" height="15" fill="rgb(228,185,30)" fg:x="183" fg:w="1"/><text x="5.3876%" y="527.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (1 samples, 0.03%)</title><rect x="5.1376%" y="501" width="0.0281%" height="15" fill="rgb(246,134,8)" fg:x="183" fg:w="1"/><text x="5.3876%" y="511.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (1 samples, 0.03%)</title><rect x="5.1656%" y="533" width="0.0281%" height="15" fill="rgb(214,143,50)" fg:x="184" fg:w="1"/><text x="5.4156%" y="543.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.03%)</title><rect x="5.1656%" y="517" width="0.0281%" height="15" fill="rgb(228,75,8)" fg:x="184" fg:w="1"/><text x="5.4156%" y="527.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.03%)</title><rect x="5.1656%" y="501" width="0.0281%" height="15" fill="rgb(207,175,4)" fg:x="184" fg:w="1"/><text x="5.4156%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="5.1656%" y="485" width="0.0281%" height="15" fill="rgb(205,108,24)" fg:x="184" fg:w="1"/><text x="5.4156%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (6 samples, 0.17%)</title><rect x="5.1937%" y="533" width="0.1684%" height="15" fill="rgb(244,120,49)" fg:x="185" fg:w="6"/><text x="5.4437%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (6 samples, 0.17%)</title><rect x="5.1937%" y="517" width="0.1684%" height="15" fill="rgb(223,47,38)" fg:x="185" fg:w="6"/><text x="5.4437%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.17%)</title><rect x="5.1937%" y="501" width="0.1684%" height="15" fill="rgb(229,179,11)" fg:x="185" fg:w="6"/><text x="5.4437%" y="511.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (6 samples, 0.17%)</title><rect x="5.1937%" y="485" width="0.1684%" height="15" fill="rgb(231,122,1)" fg:x="185" fg:w="6"/><text x="5.4437%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (6 samples, 0.17%)</title><rect x="5.1937%" y="469" width="0.1684%" height="15" fill="rgb(245,119,9)" fg:x="185" fg:w="6"/><text x="5.4437%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (6 samples, 0.17%)</title><rect x="5.1937%" y="453" width="0.1684%" height="15" fill="rgb(241,163,25)" fg:x="185" fg:w="6"/><text x="5.4437%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (6 samples, 0.17%)</title><rect x="5.1937%" y="437" width="0.1684%" height="15" fill="rgb(217,214,3)" fg:x="185" fg:w="6"/><text x="5.4437%" y="447.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (6 samples, 0.17%)</title><rect x="5.1937%" y="421" width="0.1684%" height="15" fill="rgb(240,86,28)" fg:x="185" fg:w="6"/><text x="5.4437%" y="431.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.17%)</title><rect x="5.1937%" y="405" width="0.1684%" height="15" fill="rgb(215,47,9)" fg:x="185" fg:w="6"/><text x="5.4437%" y="415.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.17%)</title><rect x="5.1937%" y="389" width="0.1684%" height="15" fill="rgb(252,25,45)" fg:x="185" fg:w="6"/><text x="5.4437%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.17%)</title><rect x="5.1937%" y="373" width="0.1684%" height="15" fill="rgb(251,164,9)" fg:x="185" fg:w="6"/><text x="5.4437%" y="383.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushResource (9 samples, 0.25%)</title><rect x="5.1656%" y="565" width="0.2527%" height="15" fill="rgb(233,194,0)" fg:x="184" fg:w="9"/><text x="5.4156%" y="575.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (9 samples, 0.25%)</title><rect x="5.1656%" y="549" width="0.2527%" height="15" fill="rgb(249,111,24)" fg:x="184" fg:w="9"/><text x="5.4156%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (2 samples, 0.06%)</title><rect x="5.3622%" y="533" width="0.0561%" height="15" fill="rgb(250,223,3)" fg:x="191" fg:w="2"/><text x="5.6122%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (2 samples, 0.06%)</title><rect x="5.3622%" y="517" width="0.0561%" height="15" fill="rgb(236,178,37)" fg:x="191" fg:w="2"/><text x="5.6122%" y="527.50"></text></g><g><title>rust-sokoban`gfx_device_gl::factory::update_sub_buffer (11 samples, 0.31%)</title><rect x="5.1376%" y="629" width="0.3088%" height="15" fill="rgb(241,158,50)" fg:x="183" fg:w="11"/><text x="5.3876%" y="639.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::BufferSubData (11 samples, 0.31%)</title><rect x="5.1376%" y="613" width="0.3088%" height="15" fill="rgb(213,121,41)" fg:x="183" fg:w="11"/><text x="5.3876%" y="623.50"></text></g><g><title>GLEngine`glBufferSubData_Exec (11 samples, 0.31%)</title><rect x="5.1376%" y="597" width="0.3088%" height="15" fill="rgb(240,92,3)" fg:x="183" fg:w="11"/><text x="5.3876%" y="607.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldBufferSubData (11 samples, 0.31%)</title><rect x="5.1376%" y="581" width="0.3088%" height="15" fill="rgb(205,123,3)" fg:x="183" fg:w="11"/><text x="5.3876%" y="591.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::getPreprocessingCommandBuffer (1 samples, 0.03%)</title><rect x="5.4183%" y="565" width="0.0281%" height="15" fill="rgb(205,97,47)" fg:x="193" fg:w="1"/><text x="5.6683%" y="575.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9f974 (1 samples, 0.03%)</title><rect x="5.4183%" y="549" width="0.0281%" height="15" fill="rgb(247,152,14)" fg:x="193" fg:w="1"/><text x="5.6683%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="5.4183%" y="533" width="0.0281%" height="15" fill="rgb(248,195,53)" fg:x="193" fg:w="1"/><text x="5.6683%" y="543.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5230c (1 samples, 0.03%)</title><rect x="5.4464%" y="581" width="0.0281%" height="15" fill="rgb(226,201,16)" fg:x="194" fg:w="1"/><text x="5.6964%" y="591.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e4d7a0 (1 samples, 0.03%)</title><rect x="5.4464%" y="565" width="0.0281%" height="15" fill="rgb(205,98,0)" fg:x="194" fg:w="1"/><text x="5.6964%" y="575.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (1 samples, 0.03%)</title><rect x="5.4464%" y="549" width="0.0281%" height="15" fill="rgb(214,191,48)" fg:x="194" fg:w="1"/><text x="5.6964%" y="559.50"></text></g><g><title>AGXMetalG13X`0x00000001d3dcfff0 (1 samples, 0.03%)</title><rect x="5.4745%" y="549" width="0.0281%" height="15" fill="rgb(237,112,39)" fg:x="195" fg:w="1"/><text x="5.7245%" y="559.50"></text></g><g><title>rust-sokoban`ggez::graphics::present (16 samples, 0.45%)</title><rect x="5.0814%" y="725" width="0.4492%" height="15" fill="rgb(247,203,27)" fg:x="181" fg:w="16"/><text x="5.3314%" y="735.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::flush (15 samples, 0.42%)</title><rect x="5.1095%" y="709" width="0.4211%" height="15" fill="rgb(235,124,28)" fg:x="182" fg:w="15"/><text x="5.3595%" y="719.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::flush_no_reset (15 samples, 0.42%)</title><rect x="5.1095%" y="693" width="0.4211%" height="15" fill="rgb(208,207,46)" fg:x="182" fg:w="15"/><text x="5.3595%" y="703.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::submit (14 samples, 0.39%)</title><rect x="5.1376%" y="677" width="0.3930%" height="15" fill="rgb(234,176,4)" fg:x="183" fg:w="14"/><text x="5.3876%" y="687.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Device::no_fence_submit (14 samples, 0.39%)</title><rect x="5.1376%" y="661" width="0.3930%" height="15" fill="rgb(230,133,28)" fg:x="183" fg:w="14"/><text x="5.3876%" y="671.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Device::process (14 samples, 0.39%)</title><rect x="5.1376%" y="645" width="0.3930%" height="15" fill="rgb(211,137,40)" fg:x="183" fg:w="14"/><text x="5.3876%" y="655.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::DrawElementsInstanced (3 samples, 0.08%)</title><rect x="5.4464%" y="629" width="0.0842%" height="15" fill="rgb(254,35,13)" fg:x="194" fg:w="3"/><text x="5.6964%" y="639.50"></text></g><g><title>GLEngine`glDrawElementsInstanced_ACC_GL3Exec (3 samples, 0.08%)</title><rect x="5.4464%" y="613" width="0.0842%" height="15" fill="rgb(225,49,51)" fg:x="194" fg:w="3"/><text x="5.6964%" y="623.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (3 samples, 0.08%)</title><rect x="5.4464%" y="597" width="0.0842%" height="15" fill="rgb(251,10,15)" fg:x="194" fg:w="3"/><text x="5.6964%" y="607.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (2 samples, 0.06%)</title><rect x="5.4745%" y="581" width="0.0561%" height="15" fill="rgb(228,207,15)" fg:x="195" fg:w="2"/><text x="5.7245%" y="591.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9cc30 (2 samples, 0.06%)</title><rect x="5.4745%" y="565" width="0.0561%" height="15" fill="rgb(241,99,19)" fg:x="195" fg:w="2"/><text x="5.7245%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="5.5025%" y="549" width="0.0281%" height="15" fill="rgb(207,104,49)" fg:x="196" fg:w="1"/><text x="5.7525%" y="559.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (133 samples, 3.73%)</title><rect x="1.8248%" y="1093" width="3.7339%" height="15" fill="rgb(234,99,18)" fg:x="65" fg:w="133"/><text x="2.0748%" y="1103.50">HITo..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (132 samples, 3.71%)</title><rect x="1.8529%" y="1077" width="3.7058%" height="15" fill="rgb(213,191,49)" fg:x="66" fg:w="132"/><text x="2.1029%" y="1087.50">Core..</text></g><g><title>CoreFoundation`__CFRunLoopRun (131 samples, 3.68%)</title><rect x="1.8810%" y="1061" width="3.6777%" height="15" fill="rgb(210,226,19)" fg:x="67" fg:w="131"/><text x="2.1310%" y="1071.50">Core..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (131 samples, 3.68%)</title><rect x="1.8810%" y="1045" width="3.6777%" height="15" fill="rgb(229,97,18)" fg:x="67" fg:w="131"/><text x="2.1310%" y="1055.50">Core..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (131 samples, 3.68%)</title><rect x="1.8810%" y="1029" width="3.6777%" height="15" fill="rgb(211,167,15)" fg:x="67" fg:w="131"/><text x="2.1310%" y="1039.50">Core..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_end_handler (131 samples, 3.68%)</title><rect x="1.8810%" y="1013" width="3.6777%" height="15" fill="rgb(210,169,34)" fg:x="67" fg:w="131"/><text x="2.1310%" y="1023.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler (131 samples, 3.68%)</title><rect x="1.8810%" y="997" width="3.6777%" height="15" fill="rgb(241,121,31)" fg:x="67" fg:w="131"/><text x="2.1310%" y="1007.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::event_loop::stop_app_on_panic (131 samples, 3.68%)</title><rect x="1.8810%" y="981" width="3.6777%" height="15" fill="rgb(232,40,11)" fg:x="67" fg:w="131"/><text x="2.1310%" y="991.50">rust..</text></g><g><title>rust-sokoban`std::panic::catch_unwind (131 samples, 3.68%)</title><rect x="1.8810%" y="965" width="3.6777%" height="15" fill="rgb(205,86,26)" fg:x="67" fg:w="131"/><text x="2.1310%" y="975.50">rust..</text></g><g><title>rust-sokoban`std::panicking::try (131 samples, 3.68%)</title><rect x="1.8810%" y="949" width="3.6777%" height="15" fill="rgb(231,126,28)" fg:x="67" fg:w="131"/><text x="2.1310%" y="959.50">rust..</text></g><g><title>rust-sokoban`__rust_try (131 samples, 3.68%)</title><rect x="1.8810%" y="933" width="3.6777%" height="15" fill="rgb(219,221,18)" fg:x="67" fg:w="131"/><text x="2.1310%" y="943.50">rust..</text></g><g><title>rust-sokoban`std::panicking::try::do_call (131 samples, 3.68%)</title><rect x="1.8810%" y="917" width="3.6777%" height="15" fill="rgb(211,40,0)" fg:x="67" fg:w="131"/><text x="2.1310%" y="927.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (131 samples, 3.68%)</title><rect x="1.8810%" y="901" width="3.6777%" height="15" fill="rgb(239,85,43)" fg:x="67" fg:w="131"/><text x="2.1310%" y="911.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}} (131 samples, 3.68%)</title><rect x="1.8810%" y="885" width="3.6777%" height="15" fill="rgb(231,55,21)" fg:x="67" fg:w="131"/><text x="2.1310%" y="895.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::AppState::cleared (131 samples, 3.68%)</title><rect x="1.8810%" y="869" width="3.6777%" height="15" fill="rgb(225,184,43)" fg:x="67" fg:w="131"/><text x="2.1310%" y="879.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (131 samples, 3.68%)</title><rect x="1.8810%" y="853" width="3.6777%" height="15" fill="rgb(251,158,41)" fg:x="67" fg:w="131"/><text x="2.1310%" y="863.50">rust..</text></g><g><title>rust-sokoban`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (131 samples, 3.68%)</title><rect x="1.8810%" y="837" width="3.6777%" height="15" fill="rgb(234,159,37)" fg:x="67" fg:w="131"/><text x="2.1310%" y="847.50">rust..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (131 samples, 3.68%)</title><rect x="1.8810%" y="821" width="3.6777%" height="15" fill="rgb(216,204,22)" fg:x="67" fg:w="131"/><text x="2.1310%" y="831.50">rust..</text></g><g><title>rust-sokoban`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event::_{{closure}} (131 samples, 3.68%)</title><rect x="1.8810%" y="805" width="3.6777%" height="15" fill="rgb(214,17,3)" fg:x="67" fg:w="131"/><text x="2.1310%" y="815.50">rust..</text></g><g><title>rust-sokoban`ggez::event::run::_{{closure}} (131 samples, 3.68%)</title><rect x="1.8810%" y="789" width="3.6777%" height="15" fill="rgb(212,111,17)" fg:x="67" fg:w="131"/><text x="2.1310%" y="799.50">rust..</text></g><g><title>rust-sokoban`&lt;rust_sokoban::Game as ggez::event::EventHandler&gt;::draw (131 samples, 3.68%)</title><rect x="1.8810%" y="773" width="3.6777%" height="15" fill="rgb(221,157,24)" fg:x="67" fg:w="131"/><text x="2.1310%" y="783.50">rust..</text></g><g><title>rust-sokoban`&lt;T as shred::system::RunNow&gt;::run_now (131 samples, 3.68%)</title><rect x="1.8810%" y="757" width="3.6777%" height="15" fill="rgb(252,16,13)" fg:x="67" fg:w="131"/><text x="2.1310%" y="767.50">rust..</text></g><g><title>rust-sokoban`&lt;rust_sokoban::systems::rendering_system::RenderingSystem as shred::system::System&gt;::run (131 samples, 3.68%)</title><rect x="1.8810%" y="741" width="3.6777%" height="15" fill="rgb(221,62,2)" fg:x="67" fg:w="131"/><text x="2.1310%" y="751.50">rust..</text></g><g><title>rust-sokoban`rust_sokoban::systems::rendering_system::RenderingSystem::draw_text (1 samples, 0.03%)</title><rect x="5.5306%" y="725" width="0.0281%" height="15" fill="rgb(247,87,22)" fg:x="197" fg:w="1"/><text x="5.7806%" y="735.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::draw_queued_text (1 samples, 0.03%)</title><rect x="5.5306%" y="709" width="0.0281%" height="15" fill="rgb(215,73,9)" fg:x="197" fg:w="1"/><text x="5.7806%" y="719.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::process_queued (1 samples, 0.03%)</title><rect x="5.5306%" y="693" width="0.0281%" height="15" fill="rgb(207,175,33)" fg:x="197" fg:w="1"/><text x="5.7806%" y="703.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::cache_queued (1 samples, 0.03%)</title><rect x="5.5306%" y="677" width="0.0281%" height="15" fill="rgb(243,129,54)" fg:x="197" fg:w="1"/><text x="5.7806%" y="687.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::draw_and_upload (1 samples, 0.03%)</title><rect x="5.5306%" y="661" width="0.0281%" height="15" fill="rgb(227,119,45)" fg:x="197" fg:w="1"/><text x="5.7806%" y="671.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::draw_and_upload_1_thread (1 samples, 0.03%)</title><rect x="5.5306%" y="645" width="0.0281%" height="15" fill="rgb(205,109,36)" fg:x="197" fg:w="1"/><text x="5.7806%" y="655.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::draw_glyph (1 samples, 0.03%)</title><rect x="5.5306%" y="629" width="0.0281%" height="15" fill="rgb(205,6,39)" fg:x="197" fg:w="1"/><text x="5.7806%" y="639.50"></text></g><g><title>rust-sokoban`ab_glyph::outlined::OutlinedGlyph::draw (1 samples, 0.03%)</title><rect x="5.5306%" y="613" width="0.0281%" height="15" fill="rgb(221,32,16)" fg:x="197" fg:w="1"/><text x="5.7806%" y="623.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="5.5306%" y="597" width="0.0281%" height="15" fill="rgb(228,144,50)" fg:x="197" fg:w="1"/><text x="5.7806%" y="607.50"></text></g><g><title>rust-sokoban`ab_glyph::outlined::OutlinedGlyph::draw::_{{closure}} (1 samples, 0.03%)</title><rect x="5.5306%" y="581" width="0.0281%" height="15" fill="rgb(229,201,53)" fg:x="197" fg:w="1"/><text x="5.7806%" y="591.50"></text></g><g><title>rust-sokoban`ab_glyph_rasterizer::raster::Rasterizer::draw_line (1 samples, 0.03%)</title><rect x="5.5306%" y="565" width="0.0281%" height="15" fill="rgb(249,153,27)" fg:x="197" fg:w="1"/><text x="5.7806%" y="575.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="5.5306%" y="549" width="0.0281%" height="15" fill="rgb(227,106,25)" fg:x="197" fg:w="1"/><text x="5.7806%" y="559.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="5.5306%" y="533" width="0.0281%" height="15" fill="rgb(230,65,29)" fg:x="197" fg:w="1"/><text x="5.7806%" y="543.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (137 samples, 3.85%)</title><rect x="1.7406%" y="1173" width="3.8462%" height="15" fill="rgb(221,57,46)" fg:x="62" fg:w="137"/><text x="1.9906%" y="1183.50">AppK..</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (137 samples, 3.85%)</title><rect x="1.7406%" y="1157" width="3.8462%" height="15" fill="rgb(229,161,17)" fg:x="62" fg:w="137"/><text x="1.9906%" y="1167.50">AppK..</text></g><g><title>AppKit`_DPSNextEvent (137 samples, 3.85%)</title><rect x="1.7406%" y="1141" width="3.8462%" height="15" fill="rgb(222,213,11)" fg:x="62" fg:w="137"/><text x="1.9906%" y="1151.50">AppK..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (137 samples, 3.85%)</title><rect x="1.7406%" y="1125" width="3.8462%" height="15" fill="rgb(235,35,13)" fg:x="62" fg:w="137"/><text x="1.9906%" y="1135.50">HITo..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (137 samples, 3.85%)</title><rect x="1.7406%" y="1109" width="3.8462%" height="15" fill="rgb(233,158,34)" fg:x="62" fg:w="137"/><text x="1.9906%" y="1119.50">HITo..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="5.5587%" y="1093" width="0.0281%" height="15" fill="rgb(215,151,48)" fg:x="198" fg:w="1"/><text x="5.8087%" y="1103.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (143 samples, 4.01%)</title><rect x="1.6002%" y="1381" width="4.0146%" height="15" fill="rgb(229,84,14)" fg:x="57" fg:w="143"/><text x="1.8502%" y="1391.50">AppK..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app::send_event (143 samples, 4.01%)</title><rect x="1.6002%" y="1365" width="4.0146%" height="15" fill="rgb(229,68,14)" fg:x="57" fg:w="143"/><text x="1.8502%" y="1375.50">rust..</text></g><g><title>rust-sokoban`objc::message::platform::send_super_unverified (143 samples, 4.01%)</title><rect x="1.6002%" y="1349" width="4.0146%" height="15" fill="rgb(243,106,26)" fg:x="57" fg:w="143"/><text x="1.8502%" y="1359.50">rust..</text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (143 samples, 4.01%)</title><rect x="1.6002%" y="1333" width="4.0146%" height="15" fill="rgb(206,45,38)" fg:x="57" fg:w="143"/><text x="1.8502%" y="1343.50">rust..</text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (143 samples, 4.01%)</title><rect x="1.6002%" y="1317" width="4.0146%" height="15" fill="rgb(226,6,15)" fg:x="57" fg:w="143"/><text x="1.8502%" y="1327.50">AppK..</text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1301" width="3.9023%" height="15" fill="rgb(232,22,54)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1311.50">AppK..</text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1285" width="3.9023%" height="15" fill="rgb(229,222,32)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1295.50">AppK..</text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1269" width="3.9023%" height="15" fill="rgb(228,62,29)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1279.50">AppK..</text></g><g><title>AppKit`-[NSControl mouseDown:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1253" width="3.9023%" height="15" fill="rgb(251,103,34)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1263.50">AppK..</text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1237" width="3.9023%" height="15" fill="rgb(233,12,30)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1247.50">AppK..</text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1221" width="3.9023%" height="15" fill="rgb(238,52,0)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1231.50">AppK..</text></g><g><title>AppKit`NSControlTrackMouse (139 samples, 3.90%)</title><rect x="1.7125%" y="1205" width="3.9023%" height="15" fill="rgb(223,98,5)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1215.50">AppK..</text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (139 samples, 3.90%)</title><rect x="1.7125%" y="1189" width="3.9023%" height="15" fill="rgb(228,75,37)" fg:x="61" fg:w="139"/><text x="1.9625%" y="1199.50">AppK..</text></g><g><title>AppKit`__NSControlTrackMouse_block_invoke.55 (1 samples, 0.03%)</title><rect x="5.5867%" y="1173" width="0.0281%" height="15" fill="rgb(205,115,49)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1183.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.03%)</title><rect x="5.5867%" y="1157" width="0.0281%" height="15" fill="rgb(250,154,43)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1167.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.03%)</title><rect x="5.5867%" y="1141" width="0.0281%" height="15" fill="rgb(226,43,29)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1151.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (1 samples, 0.03%)</title><rect x="5.5867%" y="1125" width="0.0281%" height="15" fill="rgb(249,228,39)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1135.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (1 samples, 0.03%)</title><rect x="5.5867%" y="1109" width="0.0281%" height="15" fill="rgb(216,79,43)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1119.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (1 samples, 0.03%)</title><rect x="5.5867%" y="1093" width="0.0281%" height="15" fill="rgb(228,95,12)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1103.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (1 samples, 0.03%)</title><rect x="5.5867%" y="1077" width="0.0281%" height="15" fill="rgb(249,221,15)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1087.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (1 samples, 0.03%)</title><rect x="5.5867%" y="1061" width="0.0281%" height="15" fill="rgb(233,34,13)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1071.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (1 samples, 0.03%)</title><rect x="5.5867%" y="1045" width="0.0281%" height="15" fill="rgb(214,103,39)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1055.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (1 samples, 0.03%)</title><rect x="5.5867%" y="1029" width="0.0281%" height="15" fill="rgb(251,126,39)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1039.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (1 samples, 0.03%)</title><rect x="5.5867%" y="1013" width="0.0281%" height="15" fill="rgb(214,216,36)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1023.50"></text></g><g><title>AppKit`-[NSImage unlockFocus] (1 samples, 0.03%)</title><rect x="5.5867%" y="997" width="0.0281%" height="15" fill="rgb(220,221,8)" fg:x="199" fg:w="1"/><text x="5.8367%" y="1007.50"></text></g><g><title>AppKit`+[NSCGImageSnapshotRep unlockFocusCreatingCGImageSnapshotRep] (1 samples, 0.03%)</title><rect x="5.5867%" y="981" width="0.0281%" height="15" fill="rgb(240,216,3)" fg:x="199" fg:w="1"/><text x="5.8367%" y="991.50"></text></g><g><title>AppKit`+[NSCGImageSnapshotRep _unlockFocusAndPerformBlockUsingCGImageAndCapturingContext:] (1 samples, 0.03%)</title><rect x="5.5867%" y="965" width="0.0281%" height="15" fill="rgb(232,218,17)" fg:x="199" fg:w="1"/><text x="5.8367%" y="975.50"></text></g><g><title>AppKit`-[NSSnapshotBitmapGraphicsContext retainedCGImage] (1 samples, 0.03%)</title><rect x="5.5867%" y="949" width="0.0281%" height="15" fill="rgb(229,163,45)" fg:x="199" fg:w="1"/><text x="5.8367%" y="959.50"></text></g><g><title>CoreGraphics`CGImageCreate (1 samples, 0.03%)</title><rect x="5.5867%" y="933" width="0.0281%" height="15" fill="rgb(231,110,42)" fg:x="199" fg:w="1"/><text x="5.8367%" y="943.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.03%)</title><rect x="5.5867%" y="917" width="0.0281%" height="15" fill="rgb(208,170,48)" fg:x="199" fg:w="1"/><text x="5.8367%" y="927.50"></text></g><g><title>HIToolbox`CreateMenuFromNib (1 samples, 0.03%)</title><rect x="5.6148%" y="1125" width="0.0281%" height="15" fill="rgb(239,116,25)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1135.50"></text></g><g><title>HIToolbox`loadNib (1 samples, 0.03%)</title><rect x="5.6148%" y="1109" width="0.0281%" height="15" fill="rgb(219,200,50)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1119.50"></text></g><g><title>HIToolbox`IBXDecoderLoad (1 samples, 0.03%)</title><rect x="5.6148%" y="1093" width="0.0281%" height="15" fill="rgb(245,200,0)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1103.50"></text></g><g><title>CoreFoundation`CFXMLParserParse (1 samples, 0.03%)</title><rect x="5.6148%" y="1077" width="0.0281%" height="15" fill="rgb(245,119,33)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1087.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.03%)</title><rect x="5.6148%" y="1061" width="0.0281%" height="15" fill="rgb(231,125,12)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1071.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.03%)</title><rect x="5.6148%" y="1045" width="0.0281%" height="15" fill="rgb(216,96,41)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1055.50"></text></g><g><title>CoreFoundation`parseTag (1 samples, 0.03%)</title><rect x="5.6148%" y="1029" width="0.0281%" height="15" fill="rgb(248,43,45)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1039.50"></text></g><g><title>CoreFoundation`_inputStreamScanXMLName (1 samples, 0.03%)</title><rect x="5.6148%" y="1013" width="0.0281%" height="15" fill="rgb(217,222,7)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1023.50"></text></g><g><title>CoreFoundation`CFUniCharIsMemberOf (1 samples, 0.03%)</title><rect x="5.6148%" y="997" width="0.0281%" height="15" fill="rgb(233,28,6)" fg:x="200" fg:w="1"/><text x="5.8648%" y="1007.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (2 samples, 0.06%)</title><rect x="5.6148%" y="1253" width="0.0561%" height="15" fill="rgb(231,218,15)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1263.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (2 samples, 0.06%)</title><rect x="5.6148%" y="1237" width="0.0561%" height="15" fill="rgb(226,171,48)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1247.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (2 samples, 0.06%)</title><rect x="5.6148%" y="1221" width="0.0561%" height="15" fill="rgb(235,201,9)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1231.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (2 samples, 0.06%)</title><rect x="5.6148%" y="1205" width="0.0561%" height="15" fill="rgb(217,80,15)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1215.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (2 samples, 0.06%)</title><rect x="5.6148%" y="1189" width="0.0561%" height="15" fill="rgb(219,152,8)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1199.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (2 samples, 0.06%)</title><rect x="5.6148%" y="1173" width="0.0561%" height="15" fill="rgb(243,107,38)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1183.50"></text></g><g><title>HIToolbox`AppleMenuHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (2 samples, 0.06%)</title><rect x="5.6148%" y="1157" width="0.0561%" height="15" fill="rgb(231,17,5)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1167.50"></text></g><g><title>HIToolbox`GetStandardMenu (2 samples, 0.06%)</title><rect x="5.6148%" y="1141" width="0.0561%" height="15" fill="rgb(209,25,54)" fg:x="200" fg:w="2"/><text x="5.8648%" y="1151.50"></text></g><g><title>HIToolbox`HLTBLoadPreferredLanguageNib (1 samples, 0.03%)</title><rect x="5.6429%" y="1125" width="0.0281%" height="15" fill="rgb(219,0,2)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1135.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLForLocalization (1 samples, 0.03%)</title><rect x="5.6429%" y="1109" width="0.0281%" height="15" fill="rgb(246,9,5)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1119.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.03%)</title><rect x="5.6429%" y="1093" width="0.0281%" height="15" fill="rgb(226,159,4)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1103.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.03%)</title><rect x="5.6429%" y="1077" width="0.0281%" height="15" fill="rgb(219,175,34)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1087.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.03%)</title><rect x="5.6429%" y="1061" width="0.0281%" height="15" fill="rgb(236,10,46)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1071.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.03%)</title><rect x="5.6429%" y="1045" width="0.0281%" height="15" fill="rgb(240,211,16)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1055.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.03%)</title><rect x="5.6429%" y="1029" width="0.0281%" height="15" fill="rgb(205,3,43)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1039.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.03%)</title><rect x="5.6429%" y="1013" width="0.0281%" height="15" fill="rgb(245,7,22)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1023.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (1 samples, 0.03%)</title><rect x="5.6429%" y="997" width="0.0281%" height="15" fill="rgb(239,132,32)" fg:x="201" fg:w="1"/><text x="5.8929%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.03%)</title><rect x="5.6429%" y="981" width="0.0281%" height="15" fill="rgb(228,202,34)" fg:x="201" fg:w="1"/><text x="5.8929%" y="991.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (3 samples, 0.08%)</title><rect x="5.6148%" y="1365" width="0.0842%" height="15" fill="rgb(254,200,22)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1375.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (3 samples, 0.08%)</title><rect x="5.6148%" y="1349" width="0.0842%" height="15" fill="rgb(219,10,39)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1359.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (3 samples, 0.08%)</title><rect x="5.6148%" y="1333" width="0.0842%" height="15" fill="rgb(226,210,39)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1343.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (3 samples, 0.08%)</title><rect x="5.6148%" y="1317" width="0.0842%" height="15" fill="rgb(208,219,16)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1327.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (3 samples, 0.08%)</title><rect x="5.6148%" y="1301" width="0.0842%" height="15" fill="rgb(216,158,51)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1311.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (3 samples, 0.08%)</title><rect x="5.6148%" y="1285" width="0.0842%" height="15" fill="rgb(233,14,44)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1295.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (3 samples, 0.08%)</title><rect x="5.6148%" y="1269" width="0.0842%" height="15" fill="rgb(237,97,39)" fg:x="200" fg:w="3"/><text x="5.8648%" y="1279.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (1 samples, 0.03%)</title><rect x="5.6710%" y="1253" width="0.0281%" height="15" fill="rgb(218,198,43)" fg:x="202" fg:w="1"/><text x="5.9210%" y="1263.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (1 samples, 0.03%)</title><rect x="5.6710%" y="1237" width="0.0281%" height="15" fill="rgb(231,104,20)" fg:x="202" fg:w="1"/><text x="5.9210%" y="1247.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (1 samples, 0.03%)</title><rect x="5.6710%" y="1221" width="0.0281%" height="15" fill="rgb(254,36,13)" fg:x="202" fg:w="1"/><text x="5.9210%" y="1231.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (1 samples, 0.03%)</title><rect x="5.6710%" y="1205" width="0.0281%" height="15" fill="rgb(248,14,50)" fg:x="202" fg:w="1"/><text x="5.9210%" y="1215.50"></text></g><g><title>HIToolbox`GetEventParameter (1 samples, 0.03%)</title><rect x="5.6710%" y="1189" width="0.0281%" height="15" fill="rgb(217,107,29)" fg:x="202" fg:w="1"/><text x="5.9210%" y="1199.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSApplication&gt;::activateIgnoringOtherApps_ (1 samples, 0.03%)</title><rect x="5.6990%" y="1077" width="0.0281%" height="15" fill="rgb(251,169,33)" fg:x="203" fg:w="1"/><text x="5.9490%" y="1087.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (1 samples, 0.03%)</title><rect x="5.6990%" y="1061" width="0.0281%" height="15" fill="rgb(217,108,32)" fg:x="203" fg:w="1"/><text x="5.9490%" y="1071.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.03%)</title><rect x="5.6990%" y="1045" width="0.0281%" height="15" fill="rgb(219,66,42)" fg:x="203" fg:w="1"/><text x="5.9490%" y="1055.50"></text></g><g><title>AppKit`-[NSApplication activateIgnoringOtherApps:] (1 samples, 0.03%)</title><rect x="5.6990%" y="1029" width="0.0281%" height="15" fill="rgb(206,180,7)" fg:x="203" fg:w="1"/><text x="5.9490%" y="1039.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`msgtracer_log_with_keys (1 samples, 0.03%)</title><rect x="5.6990%" y="1013" width="0.0281%" height="15" fill="rgb(208,226,31)" fg:x="203" fg:w="1"/><text x="5.9490%" y="1023.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`msgtracer_vlog_with_keys_skip_nulls (1 samples, 0.03%)</title><rect x="5.6990%" y="997" width="0.0281%" height="15" fill="rgb(218,26,49)" fg:x="203" fg:w="1"/><text x="5.9490%" y="1007.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`call_analytics_send_event_lazy (1 samples, 0.03%)</title><rect x="5.6990%" y="981" width="0.0281%" height="15" fill="rgb(233,197,48)" fg:x="203" fg:w="1"/><text x="5.9490%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="5.6990%" y="965" width="0.0281%" height="15" fill="rgb(252,181,51)" fg:x="203" fg:w="1"/><text x="5.9490%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.6990%" y="949" width="0.0281%" height="15" fill="rgb(253,90,19)" fg:x="203" fg:w="1"/><text x="5.9490%" y="959.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`__call_analytics_send_event_lazy_block_invoke (1 samples, 0.03%)</title><rect x="5.6990%" y="933" width="0.0281%" height="15" fill="rgb(215,171,30)" fg:x="203" fg:w="1"/><text x="5.9490%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="5.6990%" y="917" width="0.0281%" height="15" fill="rgb(214,222,9)" fg:x="203" fg:w="1"/><text x="5.9490%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.6990%" y="901" width="0.0281%" height="15" fill="rgb(223,3,22)" fg:x="203" fg:w="1"/><text x="5.9490%" y="911.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`__get_core_analytics_framework_block_invoke (1 samples, 0.03%)</title><rect x="5.6990%" y="885" width="0.0281%" height="15" fill="rgb(225,196,46)" fg:x="203" fg:w="1"/><text x="5.9490%" y="895.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::os_unfair_recursive_lock_lock_with_options (1 samples, 0.03%)</title><rect x="5.6990%" y="869" width="0.0281%" height="15" fill="rgb(209,110,37)" fg:x="203" fg:w="1"/><text x="5.9490%" y="879.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::apply_activation_policy (1 samples, 0.03%)</title><rect x="5.7271%" y="1077" width="0.0281%" height="15" fill="rgb(249,89,12)" fg:x="204" fg:w="1"/><text x="5.9771%" y="1087.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSApplication&gt;::setActivationPolicy_ (1 samples, 0.03%)</title><rect x="5.7271%" y="1061" width="0.0281%" height="15" fill="rgb(226,27,33)" fg:x="204" fg:w="1"/><text x="5.9771%" y="1071.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (1 samples, 0.03%)</title><rect x="5.7271%" y="1045" width="0.0281%" height="15" fill="rgb(213,82,22)" fg:x="204" fg:w="1"/><text x="5.9771%" y="1055.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (1 samples, 0.03%)</title><rect x="5.7271%" y="1029" width="0.0281%" height="15" fill="rgb(248,140,0)" fg:x="204" fg:w="1"/><text x="5.9771%" y="1039.50"></text></g><g><title>AppKit`-[NSApplication setActivationPolicy:] (1 samples, 0.03%)</title><rect x="5.7271%" y="1013" width="0.0281%" height="15" fill="rgb(228,106,3)" fg:x="204" fg:w="1"/><text x="5.9771%" y="1023.50"></text></g><g><title>AppKit`+[NSApplicationFunctionRowController sharedApplicationFunctionRowController] (1 samples, 0.03%)</title><rect x="5.7271%" y="997" width="0.0281%" height="15" fill="rgb(209,23,37)" fg:x="204" fg:w="1"/><text x="5.9771%" y="1007.50"></text></g><g><title>AppKit`-[NSRunningApplication activationPolicy] (1 samples, 0.03%)</title><rect x="5.7271%" y="981" width="0.0281%" height="15" fill="rgb(241,93,50)" fg:x="204" fg:w="1"/><text x="5.9771%" y="991.50"></text></g><g><title>AppKit`-[NSRunningApplication _fetchDynamicProperties] (1 samples, 0.03%)</title><rect x="5.7271%" y="965" width="0.0281%" height="15" fill="rgb(253,46,43)" fg:x="204" fg:w="1"/><text x="5.9771%" y="975.50"></text></g><g><title>AppKit`-[NSRunningApplication _updateActiveAndMenuBarOwnerProperties] (1 samples, 0.03%)</title><rect x="5.7271%" y="949" width="0.0281%" height="15" fill="rgb(226,206,43)" fg:x="204" fg:w="1"/><text x="5.9771%" y="959.50"></text></g><g><title>AppKit`updateAppAndReturnMatch (1 samples, 0.03%)</title><rect x="5.7271%" y="933" width="0.0281%" height="15" fill="rgb(217,54,7)" fg:x="204" fg:w="1"/><text x="5.9771%" y="943.50"></text></g><g><title>LaunchServices`_LSCopyFrontUIApplication (1 samples, 0.03%)</title><rect x="5.7271%" y="917" width="0.0281%" height="15" fill="rgb(223,5,52)" fg:x="204" fg:w="1"/><text x="5.9771%" y="927.50"></text></g><g><title>LaunchServices`LSSharedMemoryPage::CopyForSessionID (1 samples, 0.03%)</title><rect x="5.7271%" y="901" width="0.0281%" height="15" fill="rgb(206,52,46)" fg:x="204" fg:w="1"/><text x="5.9771%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="5.7271%" y="885" width="0.0281%" height="15" fill="rgb(253,136,11)" fg:x="204" fg:w="1"/><text x="5.9771%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.7271%" y="869" width="0.0281%" height="15" fill="rgb(208,106,33)" fg:x="204" fg:w="1"/><text x="5.9771%" y="879.50"></text></g><g><title>LaunchServices`invocation function for block in LSSharedMemoryPage::CopyForSessionID (1 samples, 0.03%)</title><rect x="5.7271%" y="853" width="0.0281%" height="15" fill="rgb(206,54,4)" fg:x="204" fg:w="1"/><text x="5.9771%" y="863.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (1 samples, 0.03%)</title><rect x="5.7271%" y="837" width="0.0281%" height="15" fill="rgb(213,3,15)" fg:x="204" fg:w="1"/><text x="5.9771%" y="847.50"></text></g><g><title>CoreFoundation`__CFNumberHash (1 samples, 0.03%)</title><rect x="5.7271%" y="821" width="0.0281%" height="15" fill="rgb(252,211,39)" fg:x="204" fg:w="1"/><text x="5.9771%" y="831.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (1 samples, 0.03%)</title><rect x="5.7271%" y="805" width="0.0281%" height="15" fill="rgb(223,6,36)" fg:x="204" fg:w="1"/><text x="5.9771%" y="815.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (1 samples, 0.03%)</title><rect x="5.7552%" y="805" width="0.0281%" height="15" fill="rgb(252,169,45)" fg:x="205" fg:w="1"/><text x="6.0052%" y="815.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (1 samples, 0.03%)</title><rect x="5.7552%" y="789" width="0.0281%" height="15" fill="rgb(212,48,26)" fg:x="205" fg:w="1"/><text x="6.0052%" y="799.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (1 samples, 0.03%)</title><rect x="5.7552%" y="773" width="0.0281%" height="15" fill="rgb(251,102,48)" fg:x="205" fg:w="1"/><text x="6.0052%" y="783.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (1 samples, 0.03%)</title><rect x="5.7552%" y="757" width="0.0281%" height="15" fill="rgb(243,208,16)" fg:x="205" fg:w="1"/><text x="6.0052%" y="767.50"></text></g><g><title>AppKit`catalogWithSystemSymbolName (1 samples, 0.03%)</title><rect x="5.7552%" y="741" width="0.0281%" height="15" fill="rgb(219,96,24)" fg:x="205" fg:w="1"/><text x="6.0052%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="5.7552%" y="725" width="0.0281%" height="15" fill="rgb(219,33,29)" fg:x="205" fg:w="1"/><text x="6.0052%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.7552%" y="709" width="0.0281%" height="15" fill="rgb(223,176,5)" fg:x="205" fg:w="1"/><text x="6.0052%" y="719.50"></text></g><g><title>AppKit`__NSImageGetCoreGlyphsCatalog_block_invoke (1 samples, 0.03%)</title><rect x="5.7552%" y="693" width="0.0281%" height="15" fill="rgb(228,140,14)" fg:x="205" fg:w="1"/><text x="6.0052%" y="703.50"></text></g><g><title>CoreUI`+[CUICatalog defaultUICatalogForBundle:] (1 samples, 0.03%)</title><rect x="5.7552%" y="677" width="0.0281%" height="15" fill="rgb(217,179,31)" fg:x="205" fg:w="1"/><text x="6.0052%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="5.7552%" y="661" width="0.0281%" height="15" fill="rgb(230,9,30)" fg:x="205" fg:w="1"/><text x="6.0052%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.7552%" y="645" width="0.0281%" height="15" fill="rgb(230,136,20)" fg:x="205" fg:w="1"/><text x="6.0052%" y="655.50"></text></g><g><title>CoreUI`__40+[CUICatalog defaultUICatalogForBundle:]_block_invoke.11 (1 samples, 0.03%)</title><rect x="5.7552%" y="629" width="0.0281%" height="15" fill="rgb(215,210,22)" fg:x="205" fg:w="1"/><text x="6.0052%" y="639.50"></text></g><g><title>CoreUI`-[CUICatalog initWithName:fromBundle:error:] (1 samples, 0.03%)</title><rect x="5.7552%" y="613" width="0.0281%" height="15" fill="rgb(218,43,5)" fg:x="205" fg:w="1"/><text x="6.0052%" y="623.50"></text></g><g><title>CoreUI`+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (1 samples, 0.03%)</title><rect x="5.7552%" y="597" width="0.0281%" height="15" fill="rgb(216,11,5)" fg:x="205" fg:w="1"/><text x="6.0052%" y="607.50"></text></g><g><title>CoreUI`PerformBlockWithThemeRefCache (1 samples, 0.03%)</title><rect x="5.7552%" y="581" width="0.0281%" height="15" fill="rgb(209,82,29)" fg:x="205" fg:w="1"/><text x="6.0052%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="5.7552%" y="565" width="0.0281%" height="15" fill="rgb(244,115,12)" fg:x="205" fg:w="1"/><text x="6.0052%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="5.7552%" y="549" width="0.0281%" height="15" fill="rgb(222,82,18)" fg:x="205" fg:w="1"/><text x="6.0052%" y="559.50"></text></g><g><title>CoreUI`__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (1 samples, 0.03%)</title><rect x="5.7552%" y="533" width="0.0281%" height="15" fill="rgb(249,227,8)" fg:x="205" fg:w="1"/><text x="6.0052%" y="543.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore initWithPath:] (1 samples, 0.03%)</title><rect x="5.7552%" y="517" width="0.0281%" height="15" fill="rgb(253,141,45)" fg:x="205" fg:w="1"/><text x="6.0052%" y="527.50"></text></g><g><title>CoreUI`-[CUICommonAssetStorage initWithPath:forWriting:] (1 samples, 0.03%)</title><rect x="5.7552%" y="501" width="0.0281%" height="15" fill="rgb(234,184,4)" fg:x="205" fg:w="1"/><text x="6.0052%" y="511.50"></text></g><g><title>CoreUI`BOMStorageOpenWithSys (1 samples, 0.03%)</title><rect x="5.7552%" y="485" width="0.0281%" height="15" fill="rgb(218,194,23)" fg:x="205" fg:w="1"/><text x="6.0052%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.03%)</title><rect x="5.7552%" y="469" width="0.0281%" height="15" fill="rgb(235,66,41)" fg:x="205" fg:w="1"/><text x="6.0052%" y="479.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (4 samples, 0.11%)</title><rect x="5.6990%" y="1205" width="0.1123%" height="15" fill="rgb(245,217,1)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1215.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (4 samples, 0.11%)</title><rect x="5.6990%" y="1189" width="0.1123%" height="15" fill="rgb(229,91,1)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1199.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (4 samples, 0.11%)</title><rect x="5.6990%" y="1173" width="0.1123%" height="15" fill="rgb(207,101,30)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1183.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (4 samples, 0.11%)</title><rect x="5.6990%" y="1157" width="0.1123%" height="15" fill="rgb(223,82,49)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1167.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (4 samples, 0.11%)</title><rect x="5.6990%" y="1141" width="0.1123%" height="15" fill="rgb(218,167,17)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1151.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (4 samples, 0.11%)</title><rect x="5.6990%" y="1125" width="0.1123%" height="15" fill="rgb(208,103,14)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1135.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_delegate::did_finish_launching (4 samples, 0.11%)</title><rect x="5.6990%" y="1109" width="0.1123%" height="15" fill="rgb(238,20,8)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1119.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::AppState::launched (4 samples, 0.11%)</title><rect x="5.6990%" y="1093" width="0.1123%" height="15" fill="rgb(218,80,54)" fg:x="203" fg:w="4"/><text x="5.9490%" y="1103.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::menu::initialize (2 samples, 0.06%)</title><rect x="5.7552%" y="1077" width="0.0561%" height="15" fill="rgb(240,144,17)" fg:x="205" fg:w="2"/><text x="6.0052%" y="1087.50"></text></g><g><title>rust-sokoban`objc::rc::autorelease::autoreleasepool (2 samples, 0.06%)</title><rect x="5.7552%" y="1061" width="0.0561%" height="15" fill="rgb(245,27,50)" fg:x="205" fg:w="2"/><text x="6.0052%" y="1071.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::menu::initialize::_{{closure}} (2 samples, 0.06%)</title><rect x="5.7552%" y="1045" width="0.0561%" height="15" fill="rgb(251,51,7)" fg:x="205" fg:w="2"/><text x="6.0052%" y="1055.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSMenu&gt;::addItem_ (2 samples, 0.06%)</title><rect x="5.7552%" y="1029" width="0.0561%" height="15" fill="rgb(245,217,29)" fg:x="205" fg:w="2"/><text x="6.0052%" y="1039.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (2 samples, 0.06%)</title><rect x="5.7552%" y="1013" width="0.0561%" height="15" fill="rgb(221,176,29)" fg:x="205" fg:w="2"/><text x="6.0052%" y="1023.50"></text></g><g><title>rust-sokoban`&lt;(A,) as objc::message::MessageArguments&gt;::invoke (2 samples, 0.06%)</title><rect x="5.7552%" y="997" width="0.0561%" height="15" fill="rgb(212,180,24)" fg:x="205" fg:w="2"/><text x="6.0052%" y="1007.50"></text></g><g><title>AppKit`-[NSMenu insertItem:atIndex:] (2 samples, 0.06%)</title><rect x="5.7552%" y="981" width="0.0561%" height="15" fill="rgb(254,24,2)" fg:x="205" fg:w="2"/><text x="6.0052%" y="991.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (2 samples, 0.06%)</title><rect x="5.7552%" y="965" width="0.0561%" height="15" fill="rgb(230,100,2)" fg:x="205" fg:w="2"/><text x="6.0052%" y="975.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (2 samples, 0.06%)</title><rect x="5.7552%" y="949" width="0.0561%" height="15" fill="rgb(219,142,25)" fg:x="205" fg:w="2"/><text x="6.0052%" y="959.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (2 samples, 0.06%)</title><rect x="5.7552%" y="933" width="0.0561%" height="15" fill="rgb(240,73,43)" fg:x="205" fg:w="2"/><text x="6.0052%" y="943.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (2 samples, 0.06%)</title><rect x="5.7552%" y="917" width="0.0561%" height="15" fill="rgb(214,114,15)" fg:x="205" fg:w="2"/><text x="6.0052%" y="927.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (2 samples, 0.06%)</title><rect x="5.7552%" y="901" width="0.0561%" height="15" fill="rgb(207,130,4)" fg:x="205" fg:w="2"/><text x="6.0052%" y="911.50"></text></g><g><title>Foundation`-[__NSObserver _doit:] (2 samples, 0.06%)</title><rect x="5.7552%" y="885" width="0.0561%" height="15" fill="rgb(221,25,40)" fg:x="205" fg:w="2"/><text x="6.0052%" y="895.50"></text></g><g><title>AppKit`___NSMenuUpdateKeyboardAwareShortcuts_block_invoke_3 (2 samples, 0.06%)</title><rect x="5.7552%" y="869" width="0.0561%" height="15" fill="rgb(241,184,7)" fg:x="205" fg:w="2"/><text x="6.0052%" y="879.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) shouldMenuItemBeUpdatedDueToNotification] (2 samples, 0.06%)</title><rect x="5.7552%" y="853" width="0.0561%" height="15" fill="rgb(235,159,4)" fg:x="205" fg:w="2"/><text x="6.0052%" y="863.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) menuItemOrSubmenuNeedsShortcutLocalization] (2 samples, 0.06%)</title><rect x="5.7552%" y="837" width="0.0561%" height="15" fill="rgb(214,87,48)" fg:x="205" fg:w="2"/><text x="6.0052%" y="847.50"></text></g><g><title>Foundation`_NSFaultInObject (2 samples, 0.06%)</title><rect x="5.7552%" y="821" width="0.0561%" height="15" fill="rgb(246,198,24)" fg:x="205" fg:w="2"/><text x="6.0052%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (1 samples, 0.03%)</title><rect x="5.7833%" y="805" width="0.0281%" height="15" fill="rgb(209,66,40)" fg:x="206" fg:w="1"/><text x="6.0333%" y="815.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="5.7833%" y="789" width="0.0281%" height="15" fill="rgb(233,147,39)" fg:x="206" fg:w="1"/><text x="6.0333%" y="799.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="5.7833%" y="773" width="0.0281%" height="15" fill="rgb(231,145,52)" fg:x="206" fg:w="1"/><text x="6.0333%" y="783.50"></text></g><g><title>libobjc.A.dylib`realizeClassMaybeSwiftMaybeRelock(objc_class*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.03%)</title><rect x="5.7833%" y="757" width="0.0281%" height="15" fill="rgb(206,20,26)" fg:x="206" fg:w="1"/><text x="6.0333%" y="767.50"></text></g><g><title>libobjc.A.dylib`realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.03%)</title><rect x="5.7833%" y="741" width="0.0281%" height="15" fill="rgb(238,220,4)" fg:x="206" fg:w="1"/><text x="6.0333%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc::UnattachedCategories::attachToClass (1 samples, 0.03%)</title><rect x="5.7833%" y="725" width="0.0281%" height="15" fill="rgb(252,195,42)" fg:x="206" fg:w="1"/><text x="6.0333%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;objc_class*, objc::category_list, objc::DenseMapValueInfo&lt;objc::category_list&gt;, objc::DenseMapInfo&lt;objc_class*&gt;, objc::detail::DenseMapPair&lt;objc_class*, objc::category_list&gt; &gt;, objc_class*, objc::category_list, objc::DenseMapValueInfo&lt;objc::category_list&gt;, objc::DenseMapInfo&lt;objc_class*&gt;, objc::detail::DenseMapPair&lt;objc_class*, objc::category_list&gt; &gt;::find (1 samples, 0.03%)</title><rect x="5.7833%" y="709" width="0.0281%" height="15" fill="rgb(209,10,6)" fg:x="206" fg:w="1"/><text x="6.0333%" y="719.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (5 samples, 0.14%)</title><rect x="5.6990%" y="1349" width="0.1404%" height="15" fill="rgb(229,3,52)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1359.50"></text></g><g><title>AE`aeProcessAppleEvent (5 samples, 0.14%)</title><rect x="5.6990%" y="1333" width="0.1404%" height="15" fill="rgb(253,49,37)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1343.50"></text></g><g><title>AE`0x0000000194dd9088 (5 samples, 0.14%)</title><rect x="5.6990%" y="1317" width="0.1404%" height="15" fill="rgb(240,103,49)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1327.50"></text></g><g><title>AE`0x0000000194dd9134 (5 samples, 0.14%)</title><rect x="5.6990%" y="1301" width="0.1404%" height="15" fill="rgb(250,182,30)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1311.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (5 samples, 0.14%)</title><rect x="5.6990%" y="1285" width="0.1404%" height="15" fill="rgb(248,8,30)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1295.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (5 samples, 0.14%)</title><rect x="5.6990%" y="1269" width="0.1404%" height="15" fill="rgb(237,120,30)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1279.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (5 samples, 0.14%)</title><rect x="5.6990%" y="1253" width="0.1404%" height="15" fill="rgb(221,146,34)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1263.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (5 samples, 0.14%)</title><rect x="5.6990%" y="1237" width="0.1404%" height="15" fill="rgb(242,55,13)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1247.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (5 samples, 0.14%)</title><rect x="5.6990%" y="1221" width="0.1404%" height="15" fill="rgb(242,112,31)" fg:x="203" fg:w="5"/><text x="5.9490%" y="1231.50"></text></g><g><title>AppKit`-[NSApplication _postSignpostsPossiblyDeferred] (1 samples, 0.03%)</title><rect x="5.8113%" y="1205" width="0.0281%" height="15" fill="rgb(249,192,27)" fg:x="207" fg:w="1"/><text x="6.0613%" y="1215.50"></text></g><g><title>AppKit`+[NSApplication(NSDisplayCycleObservation) _installDisplayCycleCompletionBlock:] (1 samples, 0.03%)</title><rect x="5.8113%" y="1189" width="0.0281%" height="15" fill="rgb(208,204,44)" fg:x="207" fg:w="1"/><text x="6.0613%" y="1199.50"></text></g><g><title>AppKit` (1 samples, 0.03%)</title><rect x="5.8113%" y="1173" width="0.0281%" height="15" fill="rgb(208,93,54)" fg:x="207" fg:w="1"/><text x="6.0613%" y="1183.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (1 samples, 0.03%)</title><rect x="5.8394%" y="949" width="0.0281%" height="15" fill="rgb(242,1,31)" fg:x="208" fg:w="1"/><text x="6.0894%" y="959.50"></text></g><g><title>HIToolbox`HIThemeDrawTextBox (1 samples, 0.03%)</title><rect x="5.8394%" y="933" width="0.0281%" height="15" fill="rgb(241,83,25)" fg:x="208" fg:w="1"/><text x="6.0894%" y="943.50"></text></g><g><title>HIToolbox`DataEngine::DrawTextBox (1 samples, 0.03%)</title><rect x="5.8394%" y="917" width="0.0281%" height="15" fill="rgb(205,169,50)" fg:x="208" fg:w="1"/><text x="6.0894%" y="927.50"></text></g><g><title>HIToolbox`invocation function for block in DataEngine::DrawTextBox (1 samples, 0.03%)</title><rect x="5.8394%" y="901" width="0.0281%" height="15" fill="rgb(239,186,37)" fg:x="208" fg:w="1"/><text x="6.0894%" y="911.50"></text></g><g><title>HIToolbox`TCoreTextEngine::DrawThemeTextBox (1 samples, 0.03%)</title><rect x="5.8394%" y="885" width="0.0281%" height="15" fill="rgb(205,221,10)" fg:x="208" fg:w="1"/><text x="6.0894%" y="895.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawStyledGlyphsAtPositions (1 samples, 0.03%)</title><rect x="5.8394%" y="869" width="0.0281%" height="15" fill="rgb(218,196,15)" fg:x="208" fg:w="1"/><text x="6.0894%" y="879.50"></text></g><g><title>CoreUI`CUIDrawStyledGlyphsAtPositions (1 samples, 0.03%)</title><rect x="5.8394%" y="853" width="0.0281%" height="15" fill="rgb(218,196,35)" fg:x="208" fg:w="1"/><text x="6.0894%" y="863.50"></text></g><g><title>CoreUI`CUIRenderer::DrawStyledGlyphsAtPositions (1 samples, 0.03%)</title><rect x="5.8394%" y="837" width="0.0281%" height="15" fill="rgb(233,63,24)" fg:x="208" fg:w="1"/><text x="6.0894%" y="847.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawGlyphs:inContext:usingFont:atPositions:count:lineHeight:inBounds:atScale:] (1 samples, 0.03%)</title><rect x="5.8394%" y="821" width="0.0281%" height="15" fill="rgb(225,8,4)" fg:x="208" fg:w="1"/><text x="6.0894%" y="831.50"></text></g><g><title>CoreGraphics`CGContextBeginTransparencyLayer (1 samples, 0.03%)</title><rect x="5.8394%" y="805" width="0.0281%" height="15" fill="rgb(234,105,35)" fg:x="208" fg:w="1"/><text x="6.0894%" y="815.50"></text></g><g><title>CoreGraphics`CGContextBeginTransparencyLayerWithRect (1 samples, 0.03%)</title><rect x="5.8394%" y="789" width="0.0281%" height="15" fill="rgb(236,21,32)" fg:x="208" fg:w="1"/><text x="6.0894%" y="799.50"></text></g><g><title>CoreGraphics`ripc_BeginLayer (1 samples, 0.03%)</title><rect x="5.8394%" y="773" width="0.0281%" height="15" fill="rgb(228,109,6)" fg:x="208" fg:w="1"/><text x="6.0894%" y="783.50"></text></g><g><title>CoreGraphics`RIPLayerCreate (1 samples, 0.03%)</title><rect x="5.8394%" y="757" width="0.0281%" height="15" fill="rgb(229,215,31)" fg:x="208" fg:w="1"/><text x="6.0894%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.03%)</title><rect x="5.8394%" y="741" width="0.0281%" height="15" fill="rgb(221,52,54)" fg:x="208" fg:w="1"/><text x="6.0894%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="5.8394%" y="725" width="0.0281%" height="15" fill="rgb(252,129,43)" fg:x="208" fg:w="1"/><text x="6.0894%" y="735.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.03%)</title><rect x="5.8394%" y="709" width="0.0281%" height="15" fill="rgb(248,183,27)" fg:x="208" fg:w="1"/><text x="6.0894%" y="719.50"></text></g><g><title>HIToolbox`HIMenuBarView::EnsureBarLayout (1 samples, 0.03%)</title><rect x="5.8675%" y="949" width="0.0281%" height="15" fill="rgb(250,0,22)" fg:x="209" fg:w="1"/><text x="6.1175%" y="959.50"></text></g><g><title>HIToolbox`HIMenuBarView::MeasureTitleWidths (1 samples, 0.03%)</title><rect x="5.8675%" y="933" width="0.0281%" height="15" fill="rgb(213,166,10)" fg:x="209" fg:w="1"/><text x="6.1175%" y="943.50"></text></g><g><title>HIToolbox`HIMenuBarView::Measure1Title (1 samples, 0.03%)</title><rect x="5.8675%" y="917" width="0.0281%" height="15" fill="rgb(207,163,36)" fg:x="209" fg:w="1"/><text x="6.1175%" y="927.50"></text></g><g><title>HIToolbox`HIThemeGetTextDimensions (1 samples, 0.03%)</title><rect x="5.8675%" y="901" width="0.0281%" height="15" fill="rgb(208,122,22)" fg:x="209" fg:w="1"/><text x="6.1175%" y="911.50"></text></g><g><title>HIToolbox`DataEngine::GetTextDimensions (1 samples, 0.03%)</title><rect x="5.8675%" y="885" width="0.0281%" height="15" fill="rgb(207,104,49)" fg:x="209" fg:w="1"/><text x="6.1175%" y="895.50"></text></g><g><title>HIToolbox`TCoreTextEngine::GetThemeTextDimensions (1 samples, 0.03%)</title><rect x="5.8675%" y="869" width="0.0281%" height="15" fill="rgb(248,211,50)" fg:x="209" fg:w="1"/><text x="6.1175%" y="879.50"></text></g><g><title>HIToolbox`TCoreTextEngine::Layout (1 samples, 0.03%)</title><rect x="5.8675%" y="853" width="0.0281%" height="15" fill="rgb(217,13,45)" fg:x="209" fg:w="1"/><text x="6.1175%" y="863.50"></text></g><g><title>HIToolbox`TCoreTextEngine::LayoutSingleLine (1 samples, 0.03%)</title><rect x="5.8675%" y="837" width="0.0281%" height="15" fill="rgb(211,216,49)" fg:x="209" fg:w="1"/><text x="6.1175%" y="847.50"></text></g><g><title>CoreText`CTLineCreateWithAttributedString (1 samples, 0.03%)</title><rect x="5.8675%" y="821" width="0.0281%" height="15" fill="rgb(221,58,53)" fg:x="209" fg:w="1"/><text x="6.1175%" y="831.50"></text></g><g><title>CoreText`TTypesetterAttrString::TTypesetterAttrString (1 samples, 0.03%)</title><rect x="5.8675%" y="805" width="0.0281%" height="15" fill="rgb(220,112,41)" fg:x="209" fg:w="1"/><text x="6.1175%" y="815.50"></text></g><g><title>CoreText`TTypesetterAttrString::Initialize (1 samples, 0.03%)</title><rect x="5.8675%" y="789" width="0.0281%" height="15" fill="rgb(236,38,28)" fg:x="209" fg:w="1"/><text x="6.1175%" y="799.50"></text></g><g><title>CoreText`TTypesetter::FinishLayout(std::__1::tuple&lt;TLine const*, TCharStream const*, void const* (*)(__CTRun const*, __CFString const*, void*), void*, std::__1::shared_ptr (1 samples, 0.03%)</title><rect x="5.8675%" y="773" width="0.0281%" height="15" fill="rgb(227,195,22)" fg:x="209" fg:w="1"/><text x="6.1175%" y="783.50"></text></g><g><title>CoreText`TKerningEngine::PositionGlyphs (1 samples, 0.03%)</title><rect x="5.8675%" y="757" width="0.0281%" height="15" fill="rgb(214,55,33)" fg:x="209" fg:w="1"/><text x="6.1175%" y="767.50"></text></g><g><title>CoreText`TOpenTypePositioningEngine::PositionRuns (1 samples, 0.03%)</title><rect x="5.8675%" y="741" width="0.0281%" height="15" fill="rgb(248,80,13)" fg:x="209" fg:w="1"/><text x="6.1175%" y="751.50"></text></g><g><title>CoreText`OTL::GPOS::ApplyLookups (1 samples, 0.03%)</title><rect x="5.8675%" y="725" width="0.0281%" height="15" fill="rgb(238,52,6)" fg:x="209" fg:w="1"/><text x="6.1175%" y="735.50"></text></g><g><title>CoreText`OTL::GPOS::ApplyPairPosAccelerated (1 samples, 0.03%)</title><rect x="5.8675%" y="709" width="0.0281%" height="15" fill="rgb(224,198,47)" fg:x="209" fg:w="1"/><text x="6.1175%" y="719.50"></text></g><g><title>CoreText`OTL::ClassDefTable::Iterate(std::__1::function&lt;void  (1 samples, 0.03%)</title><rect x="5.8675%" y="693" width="0.0281%" height="15" fill="rgb(233,171,20)" fg:x="209" fg:w="1"/><text x="6.1175%" y="703.50"></text></g><g><title>CoreText`std::__1::__function::__func&lt;OTL::GPOS::ApplyPairPosAccelerated(OTL::Lookup const&amp;, TGlyphIterator&amp;) const::$_1, std::__1::allocator&lt;OTL::GPOS::ApplyPairPosAccelerated(OTL::Lookup const&amp;, TGlyphIterator&amp;) const::$_1&gt;, void (unsigned short, unsigned short, unsigned short)&gt;::operator() (1 samples, 0.03%)</title><rect x="5.8675%" y="677" width="0.0281%" height="15" fill="rgb(241,30,25)" fg:x="209" fg:w="1"/><text x="6.1175%" y="687.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (3 samples, 0.08%)</title><rect x="5.8394%" y="965" width="0.0842%" height="15" fill="rgb(207,171,38)" fg:x="208" fg:w="3"/><text x="6.0894%" y="975.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (1 samples, 0.03%)</title><rect x="5.8956%" y="949" width="0.0281%" height="15" fill="rgb(234,70,1)" fg:x="210" fg:w="1"/><text x="6.1456%" y="959.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (1 samples, 0.03%)</title><rect x="5.8956%" y="933" width="0.0281%" height="15" fill="rgb(232,178,18)" fg:x="210" fg:w="1"/><text x="6.1456%" y="943.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (1 samples, 0.03%)</title><rect x="5.8956%" y="917" width="0.0281%" height="15" fill="rgb(241,78,40)" fg:x="210" fg:w="1"/><text x="6.1456%" y="927.50"></text></g><g><title>CoreUI`CUIDraw (1 samples, 0.03%)</title><rect x="5.8956%" y="901" width="0.0281%" height="15" fill="rgb(222,35,25)" fg:x="210" fg:w="1"/><text x="6.1456%" y="911.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (1 samples, 0.03%)</title><rect x="5.8956%" y="885" width="0.0281%" height="15" fill="rgb(207,92,16)" fg:x="210" fg:w="1"/><text x="6.1456%" y="895.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (1 samples, 0.03%)</title><rect x="5.8956%" y="869" width="0.0281%" height="15" fill="rgb(216,59,51)" fg:x="210" fg:w="1"/><text x="6.1456%" y="879.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawUsingQuartz:inContext:inBounds:atScale:] (1 samples, 0.03%)</title><rect x="5.8956%" y="853" width="0.0281%" height="15" fill="rgb(213,80,28)" fg:x="210" fg:w="1"/><text x="6.1456%" y="863.50"></text></g><g><title>CoreUI`invocation function for block in CUICoreThemeRenderer::DrawMenuTitle (1 samples, 0.03%)</title><rect x="5.8956%" y="837" width="0.0281%" height="15" fill="rgb(220,93,7)" fg:x="210" fg:w="1"/><text x="6.1456%" y="847.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (1 samples, 0.03%)</title><rect x="5.8956%" y="821" width="0.0281%" height="15" fill="rgb(225,24,44)" fg:x="210" fg:w="1"/><text x="6.1456%" y="831.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (1 samples, 0.03%)</title><rect x="5.8956%" y="805" width="0.0281%" height="15" fill="rgb(243,74,40)" fg:x="210" fg:w="1"/><text x="6.1456%" y="815.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (1 samples, 0.03%)</title><rect x="5.8956%" y="789" width="0.0281%" height="15" fill="rgb(228,39,7)" fg:x="210" fg:w="1"/><text x="6.1456%" y="799.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (1 samples, 0.03%)</title><rect x="5.8956%" y="773" width="0.0281%" height="15" fill="rgb(227,79,8)" fg:x="210" fg:w="1"/><text x="6.1456%" y="783.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (1 samples, 0.03%)</title><rect x="5.8956%" y="757" width="0.0281%" height="15" fill="rgb(236,58,11)" fg:x="210" fg:w="1"/><text x="6.1456%" y="767.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (1 samples, 0.03%)</title><rect x="5.8956%" y="741" width="0.0281%" height="15" fill="rgb(249,63,35)" fg:x="210" fg:w="1"/><text x="6.1456%" y="751.50"></text></g><g><title>CoreGraphics`img_data_lock (1 samples, 0.03%)</title><rect x="5.8956%" y="725" width="0.0281%" height="15" fill="rgb(252,114,16)" fg:x="210" fg:w="1"/><text x="6.1456%" y="735.50"></text></g><g><title>CoreGraphics`CGAccessSessionCreate (1 samples, 0.03%)</title><rect x="5.8956%" y="709" width="0.0281%" height="15" fill="rgb(254,151,24)" fg:x="210" fg:w="1"/><text x="6.1456%" y="719.50"></text></g><g><title>CoreGraphics`CGDataProviderRetainData (1 samples, 0.03%)</title><rect x="5.8956%" y="693" width="0.0281%" height="15" fill="rgb(253,54,39)" fg:x="210" fg:w="1"/><text x="6.1456%" y="703.50"></text></g><g><title>CoreGraphics`provider_for_destination_retain_data (1 samples, 0.03%)</title><rect x="5.8956%" y="677" width="0.0281%" height="15" fill="rgb(243,25,45)" fg:x="210" fg:w="1"/><text x="6.1456%" y="687.50"></text></g><g><title>CoreGraphics`CGDataProviderRetainData (1 samples, 0.03%)</title><rect x="5.8956%" y="661" width="0.0281%" height="15" fill="rgb(234,134,9)" fg:x="210" fg:w="1"/><text x="6.1456%" y="671.50"></text></g><g><title>CoreGraphics`imageProvider_retain_data (1 samples, 0.03%)</title><rect x="5.8956%" y="645" width="0.0281%" height="15" fill="rgb(227,166,31)" fg:x="210" fg:w="1"/><text x="6.1456%" y="655.50"></text></g><g><title>CoreGraphics`subImageProviderCopyImageBlockSet (1 samples, 0.03%)</title><rect x="5.8956%" y="629" width="0.0281%" height="15" fill="rgb(245,143,41)" fg:x="210" fg:w="1"/><text x="6.1456%" y="639.50"></text></g><g><title>CoreUI`__csiCompressImageProviderCopyImageBlockSetWithOptions (1 samples, 0.03%)</title><rect x="5.8956%" y="613" width="0.0281%" height="15" fill="rgb(238,181,32)" fg:x="210" fg:w="1"/><text x="6.1456%" y="623.50"></text></g><g><title>CoreUI`-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:] (1 samples, 0.03%)</title><rect x="5.8956%" y="597" width="0.0281%" height="15" fill="rgb(224,113,18)" fg:x="210" fg:w="1"/><text x="6.1456%" y="607.50"></text></g><g><title>CoreUI`CUIUncompressDeepmap2ImageData (1 samples, 0.03%)</title><rect x="5.8956%" y="581" width="0.0281%" height="15" fill="rgb(240,229,28)" fg:x="210" fg:w="1"/><text x="6.1456%" y="591.50"></text></g><g><title>CoreUI`__CUIUncompressDeepmap2ImageData_block_invoke (1 samples, 0.03%)</title><rect x="5.8956%" y="565" width="0.0281%" height="15" fill="rgb(250,185,3)" fg:x="210" fg:w="1"/><text x="6.1456%" y="575.50"></text></g><g><title>vImage`vImageDeepmap2Decode (1 samples, 0.03%)</title><rect x="5.8956%" y="549" width="0.0281%" height="15" fill="rgb(212,59,25)" fg:x="210" fg:w="1"/><text x="6.1456%" y="559.50"></text></g><g><title>vImage`Deepmap2DecodeDefault (1 samples, 0.03%)</title><rect x="5.8956%" y="533" width="0.0281%" height="15" fill="rgb(221,87,20)" fg:x="210" fg:w="1"/><text x="6.1456%" y="543.50"></text></g><g><title>libcompression.dylib`compression_decode_buffer (1 samples, 0.03%)</title><rect x="5.8956%" y="517" width="0.0281%" height="15" fill="rgb(213,74,28)" fg:x="210" fg:w="1"/><text x="6.1456%" y="527.50"></text></g><g><title>libcompression.dylib`lzfse_decode_buffer (1 samples, 0.03%)</title><rect x="5.8956%" y="501" width="0.0281%" height="15" fill="rgb(224,132,34)" fg:x="210" fg:w="1"/><text x="6.1456%" y="511.50"></text></g><g><title>libcompression.dylib`lzfseDecode (1 samples, 0.03%)</title><rect x="5.8956%" y="485" width="0.0281%" height="15" fill="rgb(222,101,24)" fg:x="210" fg:w="1"/><text x="6.1456%" y="495.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (4 samples, 0.11%)</title><rect x="5.8394%" y="981" width="0.1123%" height="15" fill="rgb(254,142,4)" fg:x="208" fg:w="4"/><text x="6.0894%" y="991.50"></text></g><g><title>SkyLight`SLSNewWindowWithOpaqueShape (1 samples, 0.03%)</title><rect x="5.9236%" y="965" width="0.0281%" height="15" fill="rgb(230,229,49)" fg:x="211" fg:w="1"/><text x="6.1736%" y="975.50"></text></g><g><title>SkyLight`SLSNewWindowWithOpaqueShapeAndContext (1 samples, 0.03%)</title><rect x="5.9236%" y="949" width="0.0281%" height="15" fill="rgb(238,70,47)" fg:x="211" fg:w="1"/><text x="6.1736%" y="959.50"></text></g><g><title>SkyLight`SLSSetWindowOpaqueShape (1 samples, 0.03%)</title><rect x="5.9236%" y="933" width="0.0281%" height="15" fill="rgb(231,160,17)" fg:x="211" fg:w="1"/><text x="6.1736%" y="943.50"></text></g><g><title>SkyLight`SLSRegionPerformWithSerializedBytes (1 samples, 0.03%)</title><rect x="5.9236%" y="917" width="0.0281%" height="15" fill="rgb(218,68,53)" fg:x="211" fg:w="1"/><text x="6.1736%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="5.9236%" y="901" width="0.0281%" height="15" fill="rgb(236,111,10)" fg:x="211" fg:w="1"/><text x="6.1736%" y="911.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (5 samples, 0.14%)</title><rect x="5.8394%" y="1317" width="0.1404%" height="15" fill="rgb(224,34,41)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1327.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (5 samples, 0.14%)</title><rect x="5.8394%" y="1301" width="0.1404%" height="15" fill="rgb(241,118,19)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1311.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (5 samples, 0.14%)</title><rect x="5.8394%" y="1285" width="0.1404%" height="15" fill="rgb(238,129,25)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1295.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (5 samples, 0.14%)</title><rect x="5.8394%" y="1269" width="0.1404%" height="15" fill="rgb(238,22,31)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1279.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (5 samples, 0.14%)</title><rect x="5.8394%" y="1253" width="0.1404%" height="15" fill="rgb(222,174,48)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1263.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (5 samples, 0.14%)</title><rect x="5.8394%" y="1237" width="0.1404%" height="15" fill="rgb(206,152,40)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1247.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (5 samples, 0.14%)</title><rect x="5.8394%" y="1221" width="0.1404%" height="15" fill="rgb(218,99,54)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1231.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (5 samples, 0.14%)</title><rect x="5.8394%" y="1205" width="0.1404%" height="15" fill="rgb(220,174,26)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1215.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (5 samples, 0.14%)</title><rect x="5.8394%" y="1189" width="0.1404%" height="15" fill="rgb(245,116,9)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1199.50"></text></g><g><title>HIToolbox`ShowHide (5 samples, 0.14%)</title><rect x="5.8394%" y="1173" width="0.1404%" height="15" fill="rgb(209,72,35)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1183.50"></text></g><g><title>HIToolbox`_ShowHideWindows (5 samples, 0.14%)</title><rect x="5.8394%" y="1157" width="0.1404%" height="15" fill="rgb(226,126,21)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1167.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (5 samples, 0.14%)</title><rect x="5.8394%" y="1141" width="0.1404%" height="15" fill="rgb(227,192,1)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1151.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (5 samples, 0.14%)</title><rect x="5.8394%" y="1125" width="0.1404%" height="15" fill="rgb(237,180,29)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1135.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (5 samples, 0.14%)</title><rect x="5.8394%" y="1109" width="0.1404%" height="15" fill="rgb(230,197,35)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1119.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (5 samples, 0.14%)</title><rect x="5.8394%" y="1093" width="0.1404%" height="15" fill="rgb(246,193,31)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1103.50"></text></g><g><title>HIToolbox`HIView::SendDraw (5 samples, 0.14%)</title><rect x="5.8394%" y="1077" width="0.1404%" height="15" fill="rgb(241,36,4)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1087.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (5 samples, 0.14%)</title><rect x="5.8394%" y="1061" width="0.1404%" height="15" fill="rgb(241,130,17)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1071.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (5 samples, 0.14%)</title><rect x="5.8394%" y="1045" width="0.1404%" height="15" fill="rgb(206,137,32)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1055.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (5 samples, 0.14%)</title><rect x="5.8394%" y="1029" width="0.1404%" height="15" fill="rgb(237,228,51)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1039.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (5 samples, 0.14%)</title><rect x="5.8394%" y="1013" width="0.1404%" height="15" fill="rgb(243,6,42)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1023.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (5 samples, 0.14%)</title><rect x="5.8394%" y="997" width="0.1404%" height="15" fill="rgb(251,74,28)" fg:x="208" fg:w="5"/><text x="6.0894%" y="1007.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (1 samples, 0.03%)</title><rect x="5.9517%" y="981" width="0.0281%" height="15" fill="rgb(218,20,49)" fg:x="212" fg:w="1"/><text x="6.2017%" y="991.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (1 samples, 0.03%)</title><rect x="5.9517%" y="965" width="0.0281%" height="15" fill="rgb(238,28,14)" fg:x="212" fg:w="1"/><text x="6.2017%" y="975.50"></text></g><g><title>HIToolbox`HIThemeDrawTextBox (1 samples, 0.03%)</title><rect x="5.9517%" y="949" width="0.0281%" height="15" fill="rgb(229,40,46)" fg:x="212" fg:w="1"/><text x="6.2017%" y="959.50"></text></g><g><title>HIToolbox`DataEngine::DrawTextBox (1 samples, 0.03%)</title><rect x="5.9517%" y="933" width="0.0281%" height="15" fill="rgb(244,195,20)" fg:x="212" fg:w="1"/><text x="6.2017%" y="943.50"></text></g><g><title>HIToolbox`invocation function for block in DataEngine::DrawTextBox (1 samples, 0.03%)</title><rect x="5.9517%" y="917" width="0.0281%" height="15" fill="rgb(253,56,35)" fg:x="212" fg:w="1"/><text x="6.2017%" y="927.50"></text></g><g><title>HIToolbox`TCoreTextEngine::DrawThemeTextBox (1 samples, 0.03%)</title><rect x="5.9517%" y="901" width="0.0281%" height="15" fill="rgb(210,149,44)" fg:x="212" fg:w="1"/><text x="6.2017%" y="911.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawStyledGlyphsAtPositions (1 samples, 0.03%)</title><rect x="5.9517%" y="885" width="0.0281%" height="15" fill="rgb(240,135,12)" fg:x="212" fg:w="1"/><text x="6.2017%" y="895.50"></text></g><g><title>CoreUI`CUIDrawStyledGlyphsAtPositions (1 samples, 0.03%)</title><rect x="5.9517%" y="869" width="0.0281%" height="15" fill="rgb(251,24,50)" fg:x="212" fg:w="1"/><text x="6.2017%" y="879.50"></text></g><g><title>CoreUI`CUIRenderer::DrawStyledGlyphsAtPositions (1 samples, 0.03%)</title><rect x="5.9517%" y="853" width="0.0281%" height="15" fill="rgb(243,200,47)" fg:x="212" fg:w="1"/><text x="6.2017%" y="863.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawGlyphs:inContext:usingFont:atPositions:count:lineHeight:inBounds:atScale:] (1 samples, 0.03%)</title><rect x="5.9517%" y="837" width="0.0281%" height="15" fill="rgb(224,166,26)" fg:x="212" fg:w="1"/><text x="6.2017%" y="847.50"></text></g><g><title>CoreGraphics`CGContextBeginTransparencyLayer (1 samples, 0.03%)</title><rect x="5.9517%" y="821" width="0.0281%" height="15" fill="rgb(233,0,47)" fg:x="212" fg:w="1"/><text x="6.2017%" y="831.50"></text></g><g><title>CoreGraphics`CGContextBeginTransparencyLayerWithRect (1 samples, 0.03%)</title><rect x="5.9517%" y="805" width="0.0281%" height="15" fill="rgb(253,80,5)" fg:x="212" fg:w="1"/><text x="6.2017%" y="815.50"></text></g><g><title>CoreGraphics`ripc_BeginLayer (1 samples, 0.03%)</title><rect x="5.9517%" y="789" width="0.0281%" height="15" fill="rgb(214,133,25)" fg:x="212" fg:w="1"/><text x="6.2017%" y="799.50"></text></g><g><title>CoreGraphics`RIPLayerCreate (1 samples, 0.03%)</title><rect x="5.9517%" y="773" width="0.0281%" height="15" fill="rgb(209,27,14)" fg:x="212" fg:w="1"/><text x="6.2017%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.03%)</title><rect x="5.9517%" y="757" width="0.0281%" height="15" fill="rgb(219,102,51)" fg:x="212" fg:w="1"/><text x="6.2017%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="5.9517%" y="741" width="0.0281%" height="15" fill="rgb(237,18,16)" fg:x="212" fg:w="1"/><text x="6.2017%" y="751.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.03%)</title><rect x="5.9517%" y="725" width="0.0281%" height="15" fill="rgb(241,85,17)" fg:x="212" fg:w="1"/><text x="6.2017%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (1 samples, 0.03%)</title><rect x="5.9798%" y="1285" width="0.0281%" height="15" fill="rgb(236,90,42)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1295.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (1 samples, 0.03%)</title><rect x="5.9798%" y="1269" width="0.0281%" height="15" fill="rgb(249,57,21)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1279.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (1 samples, 0.03%)</title><rect x="5.9798%" y="1253" width="0.0281%" height="15" fill="rgb(243,12,36)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1263.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.03%)</title><rect x="5.9798%" y="1237" width="0.0281%" height="15" fill="rgb(253,128,47)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1247.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (1 samples, 0.03%)</title><rect x="5.9798%" y="1221" width="0.0281%" height="15" fill="rgb(207,33,20)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1231.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (1 samples, 0.03%)</title><rect x="5.9798%" y="1205" width="0.0281%" height="15" fill="rgb(233,215,35)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (1 samples, 0.03%)</title><rect x="5.9798%" y="1189" width="0.0281%" height="15" fill="rgb(249,188,52)" fg:x="213" fg:w="1"/><text x="6.2298%" y="1199.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (1 samples, 0.03%)</title><rect x="6.0079%" y="1269" width="0.0281%" height="15" fill="rgb(225,12,32)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1279.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (1 samples, 0.03%)</title><rect x="6.0079%" y="1253" width="0.0281%" height="15" fill="rgb(247,98,14)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1263.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.0079%" y="1237" width="0.0281%" height="15" fill="rgb(247,219,48)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1247.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (1 samples, 0.03%)</title><rect x="6.0079%" y="1221" width="0.0281%" height="15" fill="rgb(253,60,48)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1231.50"></text></g><g><title>ViewBridge`__26+[NSRemoteView initialize]_block_invoke (1 samples, 0.03%)</title><rect x="6.0079%" y="1205" width="0.0281%" height="15" fill="rgb(245,15,52)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1215.50"></text></g><g><title>ViewBridge`withAutoreleasePoolAndExceptionProcessing (1 samples, 0.03%)</title><rect x="6.0079%" y="1189" width="0.0281%" height="15" fill="rgb(220,133,28)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1199.50"></text></g><g><title>ViewBridge`__26+[NSRemoteView initialize]_block_invoke_2 (1 samples, 0.03%)</title><rect x="6.0079%" y="1173" width="0.0281%" height="15" fill="rgb(217,180,4)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1183.50"></text></g><g><title>ViewBridge`VBShouldLog (1 samples, 0.03%)</title><rect x="6.0079%" y="1157" width="0.0281%" height="15" fill="rgb(251,24,1)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="6.0079%" y="1141" width="0.0281%" height="15" fill="rgb(212,185,49)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.0079%" y="1125" width="0.0281%" height="15" fill="rgb(215,175,22)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1135.50"></text></g><g><title>ViewBridge`__VBShouldLog_block_invoke (1 samples, 0.03%)</title><rect x="6.0079%" y="1109" width="0.0281%" height="15" fill="rgb(250,205,14)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1119.50"></text></g><g><title>ViewBridge`getConfiguration (1 samples, 0.03%)</title><rect x="6.0079%" y="1093" width="0.0281%" height="15" fill="rgb(225,211,22)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="6.0079%" y="1077" width="0.0281%" height="15" fill="rgb(251,179,42)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.0079%" y="1061" width="0.0281%" height="15" fill="rgb(208,216,51)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1071.50"></text></g><g><title>ViewBridge`__getConfiguration_block_invoke (1 samples, 0.03%)</title><rect x="6.0079%" y="1045" width="0.0281%" height="15" fill="rgb(235,36,11)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1055.50"></text></g><g><title>Foundation`+[NSData(NSData) dataWithContentsOfURL:options:error:] (1 samples, 0.03%)</title><rect x="6.0079%" y="1029" width="0.0281%" height="15" fill="rgb(213,189,28)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1039.50"></text></g><g><title>Foundation`-[NSData(NSData) initWithContentsOfFile:options:maxLength:error:] (1 samples, 0.03%)</title><rect x="6.0079%" y="1013" width="0.0281%" height="15" fill="rgb(227,203,42)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`fstat (1 samples, 0.03%)</title><rect x="6.0079%" y="997" width="0.0281%" height="15" fill="rgb(244,72,36)" fg:x="214" fg:w="1"/><text x="6.2579%" y="1007.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (1 samples, 0.03%)</title><rect x="6.0359%" y="1269" width="0.0281%" height="15" fill="rgb(213,53,17)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1279.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (1 samples, 0.03%)</title><rect x="6.0359%" y="1253" width="0.0281%" height="15" fill="rgb(207,167,3)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1263.50"></text></g><g><title>AppKit`__35-[_NSMenuShortcutUpdater schedule:]_block_invoke (1 samples, 0.03%)</title><rect x="6.0359%" y="1237" width="0.0281%" height="15" fill="rgb(216,98,30)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1247.50"></text></g><g><title>AppKit`UpdateKeyboardAwareShortcutsForCurrentInputSource (1 samples, 0.03%)</title><rect x="6.0359%" y="1221" width="0.0281%" height="15" fill="rgb(236,123,15)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1231.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.03%)</title><rect x="6.0359%" y="1205" width="0.0281%" height="15" fill="rgb(248,81,50)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1215.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.03%)</title><rect x="6.0359%" y="1189" width="0.0281%" height="15" fill="rgb(214,120,4)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1199.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.03%)</title><rect x="6.0359%" y="1173" width="0.0281%" height="15" fill="rgb(208,179,34)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1183.50"></text></g><g><title>HIToolbox`islPopulateKLPropertiesFromBundle (1 samples, 0.03%)</title><rect x="6.0359%" y="1157" width="0.0281%" height="15" fill="rgb(227,140,7)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1167.50"></text></g><g><title>CoreFoundation`CFBundleGetValueForInfoDictionaryKey (1 samples, 0.03%)</title><rect x="6.0359%" y="1141" width="0.0281%" height="15" fill="rgb(214,22,6)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1151.50"></text></g><g><title>CoreFoundation`CFBundleGetLocalInfoDictionary (1 samples, 0.03%)</title><rect x="6.0359%" y="1125" width="0.0281%" height="15" fill="rgb(207,137,27)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1135.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateFromXMLData (1 samples, 0.03%)</title><rect x="6.0359%" y="1109" width="0.0281%" height="15" fill="rgb(210,8,46)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1119.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.03%)</title><rect x="6.0359%" y="1093" width="0.0281%" height="15" fill="rgb(240,16,54)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1103.50"></text></g><g><title>CoreFoundation`__CFTryParseBinaryPlist (1 samples, 0.03%)</title><rect x="6.0359%" y="1077" width="0.0281%" height="15" fill="rgb(211,209,29)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1087.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="6.0359%" y="1061" width="0.0281%" height="15" fill="rgb(226,228,24)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1071.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.03%)</title><rect x="6.0359%" y="1045" width="0.0281%" height="15" fill="rgb(222,84,9)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1055.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.03%)</title><rect x="6.0359%" y="1029" width="0.0281%" height="15" fill="rgb(234,203,30)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1039.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.03%)</title><rect x="6.0359%" y="1013" width="0.0281%" height="15" fill="rgb(238,109,14)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1023.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.03%)</title><rect x="6.0359%" y="997" width="0.0281%" height="15" fill="rgb(233,206,34)" fg:x="215" fg:w="1"/><text x="6.2859%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.03%)</title><rect x="6.0359%" y="981" width="0.0281%" height="15" fill="rgb(220,167,47)" fg:x="215" fg:w="1"/><text x="6.2859%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.03%)</title><rect x="6.0359%" y="965" width="0.0281%" height="15" fill="rgb(238,105,10)" fg:x="215" fg:w="1"/><text x="6.2859%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.03%)</title><rect x="6.0359%" y="949" width="0.0281%" height="15" fill="rgb(213,227,17)" fg:x="215" fg:w="1"/><text x="6.2859%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.03%)</title><rect x="6.0359%" y="933" width="0.0281%" height="15" fill="rgb(217,132,38)" fg:x="215" fg:w="1"/><text x="6.2859%" y="943.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (1 samples, 0.03%)</title><rect x="6.0640%" y="1221" width="0.0281%" height="15" fill="rgb(242,146,4)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1231.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (1 samples, 0.03%)</title><rect x="6.0640%" y="1205" width="0.0281%" height="15" fill="rgb(212,61,9)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1215.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (1 samples, 0.03%)</title><rect x="6.0640%" y="1189" width="0.0281%" height="15" fill="rgb(247,126,22)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1199.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (1 samples, 0.03%)</title><rect x="6.0640%" y="1173" width="0.0281%" height="15" fill="rgb(220,196,2)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1183.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (1 samples, 0.03%)</title><rect x="6.0640%" y="1157" width="0.0281%" height="15" fill="rgb(208,46,4)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1167.50"></text></g><g><title>HIToolbox`TSMCopyTextInputGlobalProperty (1 samples, 0.03%)</title><rect x="6.0640%" y="1141" width="0.0281%" height="15" fill="rgb(252,104,46)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1151.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (1 samples, 0.03%)</title><rect x="6.0640%" y="1125" width="0.0281%" height="15" fill="rgb(237,152,48)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="6.0640%" y="1109" width="0.0281%" height="15" fill="rgb(221,59,37)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.0640%" y="1093" width="0.0281%" height="15" fill="rgb(209,202,51)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1103.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (1 samples, 0.03%)</title><rect x="6.0640%" y="1077" width="0.0281%" height="15" fill="rgb(228,81,30)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="6.0640%" y="1061" width="0.0281%" height="15" fill="rgb(227,42,39)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="6.0640%" y="1045" width="0.0281%" height="15" fill="rgb(221,26,2)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1055.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (1 samples, 0.03%)</title><rect x="6.0640%" y="1029" width="0.0281%" height="15" fill="rgb(254,61,31)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1039.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="6.0640%" y="1013" width="0.0281%" height="15" fill="rgb(222,173,38)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1023.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersWriteLock(void  (1 samples, 0.03%)</title><rect x="6.0640%" y="997" width="0.0281%" height="15" fill="rgb(218,50,12)" fg:x="216" fg:w="1"/><text x="6.3140%" y="1007.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::dlopen_from (1 samples, 0.03%)</title><rect x="6.0640%" y="981" width="0.0281%" height="15" fill="rgb(223,88,40)" fg:x="216" fg:w="1"/><text x="6.3140%" y="991.50"></text></g><g><title>dyld`dyld4::Loader::getLoader (1 samples, 0.03%)</title><rect x="6.0640%" y="965" width="0.0281%" height="15" fill="rgb(237,54,19)" fg:x="216" fg:w="1"/><text x="6.3140%" y="975.50"></text></g><g><title>dyld`dyld4::ProcessConfig::canonicalDylibPathInCache (1 samples, 0.03%)</title><rect x="6.0640%" y="949" width="0.0281%" height="15" fill="rgb(251,129,25)" fg:x="216" fg:w="1"/><text x="6.3140%" y="959.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::realpath (1 samples, 0.03%)</title><rect x="6.0640%" y="933" width="0.0281%" height="15" fill="rgb(238,97,19)" fg:x="216" fg:w="1"/><text x="6.3140%" y="943.50"></text></g><g><title>dyld`dyld3::open (1 samples, 0.03%)</title><rect x="6.0640%" y="917" width="0.0281%" height="15" fill="rgb(240,169,18)" fg:x="216" fg:w="1"/><text x="6.3140%" y="927.50"></text></g><g><title>dyld`open_with_subsystem (1 samples, 0.03%)</title><rect x="6.0640%" y="901" width="0.0281%" height="15" fill="rgb(230,187,49)" fg:x="216" fg:w="1"/><text x="6.3140%" y="911.50"></text></g><g><title>dyld`__open (1 samples, 0.03%)</title><rect x="6.0640%" y="885" width="0.0281%" height="15" fill="rgb(209,44,26)" fg:x="216" fg:w="1"/><text x="6.3140%" y="895.50"></text></g><g><title>QuartzCore`CA::Layer::collect_animations_ (1 samples, 0.03%)</title><rect x="6.0921%" y="1173" width="0.0281%" height="15" fill="rgb(244,0,6)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1183.50"></text></g><g><title>QuartzCore`CA::Layer::collect_animations_ (1 samples, 0.03%)</title><rect x="6.0921%" y="1157" width="0.0281%" height="15" fill="rgb(248,18,21)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1167.50"></text></g><g><title>QuartzCore`CA::Layer::collect_animations_ (1 samples, 0.03%)</title><rect x="6.0921%" y="1141" width="0.0281%" height="15" fill="rgb(245,180,19)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1151.50"></text></g><g><title>QuartzCore`CA::Layer::render_timing (1 samples, 0.03%)</title><rect x="6.0921%" y="1125" width="0.0281%" height="15" fill="rgb(252,118,36)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1135.50"></text></g><g><title>QuartzCore`CAMediaTimingCopyRenderTiming (1 samples, 0.03%)</title><rect x="6.0921%" y="1109" width="0.0281%" height="15" fill="rgb(210,224,19)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1119.50"></text></g><g><title>QuartzCore`-[CALayer repeatCount] (1 samples, 0.03%)</title><rect x="6.0921%" y="1093" width="0.0281%" height="15" fill="rgb(218,30,24)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1103.50"></text></g><g><title>QuartzCore`CA::Layer::getter (1 samples, 0.03%)</title><rect x="6.0921%" y="1077" width="0.0281%" height="15" fill="rgb(219,75,50)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1087.50"></text></g><g><title>QuartzCore`CAObject_defaultValueForAtom (1 samples, 0.03%)</title><rect x="6.0921%" y="1061" width="0.0281%" height="15" fill="rgb(234,72,50)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1071.50"></text></g><g><title>QuartzCore`CA::AttrList::get (1 samples, 0.03%)</title><rect x="6.0921%" y="1045" width="0.0281%" height="15" fill="rgb(219,100,48)" fg:x="217" fg:w="1"/><text x="6.3421%" y="1055.50"></text></g><g><title>CoreText`CTFontDrawGlyphsWithAdvancesInternal (1 samples, 0.03%)</title><rect x="6.1202%" y="901" width="0.0281%" height="15" fill="rgb(253,5,41)" fg:x="218" fg:w="1"/><text x="6.3702%" y="911.50"></text></g><g><title>CoreText`EnumerateOverlappingGlyphs(CGContext*, TFont const&amp;, unsigned short const*, long, int, void (CFRange, bool) block_pointer) (1 samples, 0.03%)</title><rect x="6.1202%" y="885" width="0.0281%" height="15" fill="rgb(247,181,11)" fg:x="218" fg:w="1"/><text x="6.3702%" y="895.50"></text></g><g><title>CoreText`bool TBaseFont::EnumerateMergeGroups&lt;TInlineVector&lt;OTL::MergeTable::Group, 30ul&gt; &gt;(unsigned short const*, long, int, TInlineVector (1 samples, 0.03%)</title><rect x="6.1202%" y="869" width="0.0281%" height="15" fill="rgb(222,223,25)" fg:x="218" fg:w="1"/><text x="6.3702%" y="879.50"></text></g><g><title>CoreText`void OTL::MergeTable::EnumerateGroups&lt;TInlineVector&lt;OTL::MergeTable::Group, 30ul&gt; &gt;(unsigned short const*, long, int, TInlineVector (1 samples, 0.03%)</title><rect x="6.1202%" y="853" width="0.0281%" height="15" fill="rgb(214,198,28)" fg:x="218" fg:w="1"/><text x="6.3702%" y="863.50"></text></g><g><title>CoreText`OTL::ClassDefTable::ClassOf (1 samples, 0.03%)</title><rect x="6.1202%" y="837" width="0.0281%" height="15" fill="rgb(230,46,43)" fg:x="218" fg:w="1"/><text x="6.3702%" y="847.50"></text></g><g><title>AppKit`-[NSTextLayer display] (2 samples, 0.06%)</title><rect x="6.1202%" y="1157" width="0.0561%" height="15" fill="rgb(233,65,53)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1167.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.06%)</title><rect x="6.1202%" y="1141" width="0.0561%" height="15" fill="rgb(221,121,27)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1151.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (2 samples, 0.06%)</title><rect x="6.1202%" y="1125" width="0.0561%" height="15" fill="rgb(247,70,47)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1135.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.06%)</title><rect x="6.1202%" y="1109" width="0.0561%" height="15" fill="rgb(228,85,35)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1119.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (2 samples, 0.06%)</title><rect x="6.1202%" y="1093" width="0.0561%" height="15" fill="rgb(209,50,18)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1103.50"></text></g><g><title>QuartzCore`-[CALayer _display] (2 samples, 0.06%)</title><rect x="6.1202%" y="1077" width="0.0561%" height="15" fill="rgb(250,19,35)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1087.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (2 samples, 0.06%)</title><rect x="6.1202%" y="1061" width="0.0561%" height="15" fill="rgb(253,107,29)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1071.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (2 samples, 0.06%)</title><rect x="6.1202%" y="1045" width="0.0561%" height="15" fill="rgb(252,179,29)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1055.50"></text></g><g><title>AppKit`NSTextLayerDrawForeground (2 samples, 0.06%)</title><rect x="6.1202%" y="1029" width="0.0561%" height="15" fill="rgb(238,194,6)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1039.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.06%)</title><rect x="6.1202%" y="1013" width="0.0561%" height="15" fill="rgb(238,164,29)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1023.50"></text></g><g><title>AppKit`__NSTextLayerDrawForeground_block_invoke (2 samples, 0.06%)</title><rect x="6.1202%" y="997" width="0.0561%" height="15" fill="rgb(224,25,9)" fg:x="218" fg:w="2"/><text x="6.3702%" y="1007.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.06%)</title><rect x="6.1202%" y="981" width="0.0561%" height="15" fill="rgb(244,153,23)" fg:x="218" fg:w="2"/><text x="6.3702%" y="991.50"></text></g><g><title>AppKit`_NSDrawTextCell (2 samples, 0.06%)</title><rect x="6.1202%" y="965" width="0.0561%" height="15" fill="rgb(212,203,14)" fg:x="218" fg:w="2"/><text x="6.3702%" y="975.50"></text></g><g><title>UIFoundation`__NSStringDrawingEngine (2 samples, 0.06%)</title><rect x="6.1202%" y="949" width="0.0561%" height="15" fill="rgb(220,164,20)" fg:x="218" fg:w="2"/><text x="6.3702%" y="959.50"></text></g><g><title>UIFoundation`-[NSCoreTypesetter _stringDrawingCoreTextEngineWithOriginalString:rect:padding:graphicsContext:forceClipping:attributes:stringDrawingOptions:drawingContext:stringDrawingInterface:] (2 samples, 0.06%)</title><rect x="6.1202%" y="933" width="0.0561%" height="15" fill="rgb(222,203,48)" fg:x="218" fg:w="2"/><text x="6.3702%" y="943.50"></text></g><g><title>UIFoundation`-[NSCoreTypesetter _NSFastDrawString:length:attributes:paragraphStyle:typesetterBehavior:lineBreakMode:rect:padding:graphicsContext:baselineRendering:usesFontLeading:usesScreenFont:scrollable:syncAlignment:mirrored:boundingRectPointer:baselineOffsetPointer:drawingContext:] (2 samples, 0.06%)</title><rect x="6.1202%" y="917" width="0.0561%" height="15" fill="rgb(215,159,22)" fg:x="218" fg:w="2"/><text x="6.3702%" y="927.50"></text></g><g><title>CoreText`std::__1::__vector_base&lt;unsigned char, TInlineBufferAllocator&lt;unsigned char, 128ul&gt; &gt;::~__vector_base (1 samples, 0.03%)</title><rect x="6.1482%" y="901" width="0.0281%" height="15" fill="rgb(216,183,47)" fg:x="219" fg:w="1"/><text x="6.3982%" y="911.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:rendition:inFrame:context:alpha:operation:isFocused:isFlipped:effects:] (1 samples, 0.03%)</title><rect x="6.1763%" y="917" width="0.0281%" height="15" fill="rgb(229,195,25)" fg:x="220" fg:w="1"/><text x="6.4263%" y="927.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (1 samples, 0.03%)</title><rect x="6.1763%" y="901" width="0.0281%" height="15" fill="rgb(224,132,51)" fg:x="220" fg:w="1"/><text x="6.4263%" y="911.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (1 samples, 0.03%)</title><rect x="6.1763%" y="885" width="0.0281%" height="15" fill="rgb(240,63,7)" fg:x="220" fg:w="1"/><text x="6.4263%" y="895.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (1 samples, 0.03%)</title><rect x="6.1763%" y="869" width="0.0281%" height="15" fill="rgb(249,182,41)" fg:x="220" fg:w="1"/><text x="6.4263%" y="879.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (1 samples, 0.03%)</title><rect x="6.1763%" y="853" width="0.0281%" height="15" fill="rgb(243,47,26)" fg:x="220" fg:w="1"/><text x="6.4263%" y="863.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (1 samples, 0.03%)</title><rect x="6.1763%" y="837" width="0.0281%" height="15" fill="rgb(233,48,2)" fg:x="220" fg:w="1"/><text x="6.4263%" y="847.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (1 samples, 0.03%)</title><rect x="6.1763%" y="821" width="0.0281%" height="15" fill="rgb(244,165,34)" fg:x="220" fg:w="1"/><text x="6.4263%" y="831.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (1 samples, 0.03%)</title><rect x="6.1763%" y="805" width="0.0281%" height="15" fill="rgb(207,89,7)" fg:x="220" fg:w="1"/><text x="6.4263%" y="815.50"></text></g><g><title>CoreGraphics`img_image (1 samples, 0.03%)</title><rect x="6.1763%" y="789" width="0.0281%" height="15" fill="rgb(244,117,36)" fg:x="220" fg:w="1"/><text x="6.4263%" y="799.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestinationWithImage (1 samples, 0.03%)</title><rect x="6.1763%" y="773" width="0.0281%" height="15" fill="rgb(226,144,34)" fg:x="220" fg:w="1"/><text x="6.4263%" y="783.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestination (1 samples, 0.03%)</title><rect x="6.1763%" y="757" width="0.0281%" height="15" fill="rgb(213,23,19)" fg:x="220" fg:w="1"/><text x="6.4263%" y="767.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvertGetConverterInfo (1 samples, 0.03%)</title><rect x="6.1763%" y="741" width="0.0281%" height="15" fill="rgb(217,75,12)" fg:x="220" fg:w="1"/><text x="6.4263%" y="751.50"></text></g><g><title>CoreGraphics`icc_converter_info (1 samples, 0.03%)</title><rect x="6.1763%" y="725" width="0.0281%" height="15" fill="rgb(224,159,17)" fg:x="220" fg:w="1"/><text x="6.4263%" y="735.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreateCachedCGvImageConverter (1 samples, 0.03%)</title><rect x="6.1763%" y="709" width="0.0281%" height="15" fill="rgb(217,118,1)" fg:x="220" fg:w="1"/><text x="6.4263%" y="719.50"></text></g><g><title>CoreGraphics`CGvImageConverterCacheGetRetained (1 samples, 0.03%)</title><rect x="6.1763%" y="693" width="0.0281%" height="15" fill="rgb(232,180,48)" fg:x="220" fg:w="1"/><text x="6.4263%" y="703.50"></text></g><g><title>CoreGraphics`CGvImageConverterInitializeShared (1 samples, 0.03%)</title><rect x="6.1763%" y="677" width="0.0281%" height="15" fill="rgb(230,27,33)" fg:x="220" fg:w="1"/><text x="6.4263%" y="687.50"></text></g><g><title>vImage`vImageConverter_CreateWithCGColorConversionInfo (1 samples, 0.03%)</title><rect x="6.1763%" y="661" width="0.0281%" height="15" fill="rgb(205,31,21)" fg:x="220" fg:w="1"/><text x="6.4263%" y="671.50"></text></g><g><title>vImage`CreatePass_ColorSpaceTransformWithCGColorConversionInfo (1 samples, 0.03%)</title><rect x="6.1763%" y="645" width="0.0281%" height="15" fill="rgb(253,59,4)" fg:x="220" fg:w="1"/><text x="6.4263%" y="655.50"></text></g><g><title>vImage`CacheTable_Init (1 samples, 0.03%)</title><rect x="6.1763%" y="629" width="0.0281%" height="15" fill="rgb(224,201,9)" fg:x="220" fg:w="1"/><text x="6.4263%" y="639.50"></text></g><g><title>vImage`PiecewiseGamma_ComputeTable16Q12 (1 samples, 0.03%)</title><rect x="6.1763%" y="613" width="0.0281%" height="15" fill="rgb(229,206,30)" fg:x="220" fg:w="1"/><text x="6.4263%" y="623.50"></text></g><g><title>vImage`_vImagePiecewiseGamma_PlanarF (1 samples, 0.03%)</title><rect x="6.1763%" y="597" width="0.0281%" height="15" fill="rgb(212,67,47)" fg:x="220" fg:w="1"/><text x="6.4263%" y="607.50"></text></g><g><title>vImage`symmetricPiecewiseGamma_pixelBlock (1 samples, 0.03%)</title><rect x="6.1763%" y="581" width="0.0281%" height="15" fill="rgb(211,96,50)" fg:x="220" fg:w="1"/><text x="6.4263%" y="591.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (4 samples, 0.11%)</title><rect x="6.1202%" y="1173" width="0.1123%" height="15" fill="rgb(252,114,18)" fg:x="218" fg:w="4"/><text x="6.3702%" y="1183.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (2 samples, 0.06%)</title><rect x="6.1763%" y="1157" width="0.0561%" height="15" fill="rgb(223,58,37)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1167.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.06%)</title><rect x="6.1763%" y="1141" width="0.0561%" height="15" fill="rgb(237,70,4)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1151.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (2 samples, 0.06%)</title><rect x="6.1763%" y="1125" width="0.0561%" height="15" fill="rgb(244,85,46)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1135.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.06%)</title><rect x="6.1763%" y="1109" width="0.0561%" height="15" fill="rgb(223,39,52)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1119.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (2 samples, 0.06%)</title><rect x="6.1763%" y="1093" width="0.0561%" height="15" fill="rgb(218,200,14)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1103.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (2 samples, 0.06%)</title><rect x="6.1763%" y="1077" width="0.0561%" height="15" fill="rgb(208,171,16)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1087.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (2 samples, 0.06%)</title><rect x="6.1763%" y="1061" width="0.0561%" height="15" fill="rgb(234,200,18)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1071.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (2 samples, 0.06%)</title><rect x="6.1763%" y="1045" width="0.0561%" height="15" fill="rgb(228,45,11)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1055.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (2 samples, 0.06%)</title><rect x="6.1763%" y="1029" width="0.0561%" height="15" fill="rgb(237,182,11)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1039.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (2 samples, 0.06%)</title><rect x="6.1763%" y="1013" width="0.0561%" height="15" fill="rgb(241,175,49)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1023.50"></text></g><g><title>CoreUI`CUIDraw (2 samples, 0.06%)</title><rect x="6.1763%" y="997" width="0.0561%" height="15" fill="rgb(247,38,35)" fg:x="220" fg:w="2"/><text x="6.4263%" y="1007.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (2 samples, 0.06%)</title><rect x="6.1763%" y="981" width="0.0561%" height="15" fill="rgb(228,39,49)" fg:x="220" fg:w="2"/><text x="6.4263%" y="991.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (2 samples, 0.06%)</title><rect x="6.1763%" y="965" width="0.0561%" height="15" fill="rgb(226,101,26)" fg:x="220" fg:w="2"/><text x="6.4263%" y="975.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:context:effects:] (2 samples, 0.06%)</title><rect x="6.1763%" y="949" width="0.0561%" height="15" fill="rgb(206,141,19)" fg:x="220" fg:w="2"/><text x="6.4263%" y="959.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:isFlipped:effects:] (2 samples, 0.06%)</title><rect x="6.1763%" y="933" width="0.0561%" height="15" fill="rgb(211,200,13)" fg:x="220" fg:w="2"/><text x="6.4263%" y="943.50"></text></g><g><title>CoreUI`DrawOnePartElementFromRenditionWithOperation (1 samples, 0.03%)</title><rect x="6.2044%" y="917" width="0.0281%" height="15" fill="rgb(241,121,6)" fg:x="221" fg:w="1"/><text x="6.4544%" y="927.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_commit (1 samples, 0.03%)</title><rect x="6.2325%" y="1173" width="0.0281%" height="15" fill="rgb(234,221,29)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1183.50"></text></g><g><title>QuartzCore`CA::Render::prepare_image (1 samples, 0.03%)</title><rect x="6.2325%" y="1157" width="0.0281%" height="15" fill="rgb(229,136,5)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1167.50"></text></g><g><title>QuartzCore`CA::Render::copy_image (1 samples, 0.03%)</title><rect x="6.2325%" y="1141" width="0.0281%" height="15" fill="rgb(238,36,11)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1151.50"></text></g><g><title>QuartzCore`CARequiresColorMatching (1 samples, 0.03%)</title><rect x="6.2325%" y="1125" width="0.0281%" height="15" fill="rgb(251,55,41)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1135.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateConversionCurve (1 samples, 0.03%)</title><rect x="6.2325%" y="1109" width="0.0281%" height="15" fill="rgb(242,34,40)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1119.50"></text></g><g><title>CoreGraphics`conversion_cache_get_retained_conversion_params (1 samples, 0.03%)</title><rect x="6.2325%" y="1093" width="0.0281%" height="15" fill="rgb(215,42,17)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1103.50"></text></g><g><title>CoreGraphics`iterate_with_params (1 samples, 0.03%)</title><rect x="6.2325%" y="1077" width="0.0281%" height="15" fill="rgb(207,44,46)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1087.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoIterateColorSpaceFunctionsWithCallbacksAndOptions (1 samples, 0.03%)</title><rect x="6.2325%" y="1061" width="0.0281%" height="15" fill="rgb(211,206,28)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1071.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoIterateFunctionsWithCallbacks (1 samples, 0.03%)</title><rect x="6.2325%" y="1045" width="0.0281%" height="15" fill="rgb(237,167,16)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1055.50"></text></g><g><title>ColorSync`ColorSyncTransformIterate (1 samples, 0.03%)</title><rect x="6.2325%" y="1029" width="0.0281%" height="15" fill="rgb(233,66,6)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1039.50"></text></g><g><title>ColorSync`ColorSyncTransformGetIterator (1 samples, 0.03%)</title><rect x="6.2325%" y="1013" width="0.0281%" height="15" fill="rgb(246,123,29)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1023.50"></text></g><g><title>ColorSync`ColorSyncTransformIteratorCreate (1 samples, 0.03%)</title><rect x="6.2325%" y="997" width="0.0281%" height="15" fill="rgb(209,62,40)" fg:x="222" fg:w="1"/><text x="6.4825%" y="1007.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$malloc_zone_malloc (1 samples, 0.03%)</title><rect x="6.2325%" y="981" width="0.0281%" height="15" fill="rgb(218,4,25)" fg:x="222" fg:w="1"/><text x="6.4825%" y="991.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (7 samples, 0.20%)</title><rect x="6.0921%" y="1189" width="0.1965%" height="15" fill="rgb(253,91,49)" fg:x="217" fg:w="7"/><text x="6.3421%" y="1199.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.03%)</title><rect x="6.2605%" y="1173" width="0.0281%" height="15" fill="rgb(228,155,29)" fg:x="223" fg:w="1"/><text x="6.5105%" y="1183.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.03%)</title><rect x="6.2605%" y="1157" width="0.0281%" height="15" fill="rgb(243,57,37)" fg:x="223" fg:w="1"/><text x="6.5105%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="6.2605%" y="1141" width="0.0281%" height="15" fill="rgb(244,167,17)" fg:x="223" fg:w="1"/><text x="6.5105%" y="1151.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForLayout_block_invoke (1 samples, 0.03%)</title><rect x="6.2886%" y="1141" width="0.0281%" height="15" fill="rgb(207,181,38)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1151.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) layoutIfNeeded] (1 samples, 0.03%)</title><rect x="6.2886%" y="1125" width="0.0281%" height="15" fill="rgb(211,8,23)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1135.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) _layoutViewTree] (1 samples, 0.03%)</title><rect x="6.2886%" y="1109" width="0.0281%" height="15" fill="rgb(235,11,44)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1119.50"></text></g><g><title>AppKit`-[NSView _layoutSubtreeIfNeededAndAllowTemporaryEngine:] (1 samples, 0.03%)</title><rect x="6.2886%" y="1093" width="0.0281%" height="15" fill="rgb(248,18,52)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1103.50"></text></g><g><title>AppKit`-[NSView _layoutSubtreeWithOldSize:] (1 samples, 0.03%)</title><rect x="6.2886%" y="1077" width="0.0281%" height="15" fill="rgb(208,4,7)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1087.50"></text></g><g><title>AppKit`_NSViewLayout (1 samples, 0.03%)</title><rect x="6.2886%" y="1061" width="0.0281%" height="15" fill="rgb(240,17,39)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1071.50"></text></g><g><title>AppKit`-[NSThemeFrame layout] (1 samples, 0.03%)</title><rect x="6.2886%" y="1045" width="0.0281%" height="15" fill="rgb(207,170,3)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1055.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (1 samples, 0.03%)</title><rect x="6.2886%" y="1029" width="0.0281%" height="15" fill="rgb(236,100,52)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1039.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleTextField] (1 samples, 0.03%)</title><rect x="6.2886%" y="1013" width="0.0281%" height="15" fill="rgb(246,78,51)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1023.50"></text></g><g><title>AppKit`-[NSTextField initWithFrame:] (1 samples, 0.03%)</title><rect x="6.2886%" y="997" width="0.0281%" height="15" fill="rgb(211,17,15)" fg:x="224" fg:w="1"/><text x="6.5386%" y="1007.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (1 samples, 0.03%)</title><rect x="6.2886%" y="981" width="0.0281%" height="15" fill="rgb(209,59,46)" fg:x="224" fg:w="1"/><text x="6.5386%" y="991.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (1 samples, 0.03%)</title><rect x="6.2886%" y="965" width="0.0281%" height="15" fill="rgb(210,92,25)" fg:x="224" fg:w="1"/><text x="6.5386%" y="975.50"></text></g><g><title>AppKit`-[NSView _commonAwake] (1 samples, 0.03%)</title><rect x="6.2886%" y="949" width="0.0281%" height="15" fill="rgb(238,174,52)" fg:x="224" fg:w="1"/><text x="6.5386%" y="959.50"></text></g><g><title>AppKit`_NSSubclassOverridesSelector (1 samples, 0.03%)</title><rect x="6.2886%" y="933" width="0.0281%" height="15" fill="rgb(230,73,7)" fg:x="224" fg:w="1"/><text x="6.5386%" y="943.50"></text></g><g><title>libobjc.A.dylib`class_getMethodImplementation (1 samples, 0.03%)</title><rect x="6.2886%" y="917" width="0.0281%" height="15" fill="rgb(243,124,40)" fg:x="224" fg:w="1"/><text x="6.5386%" y="927.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="6.2886%" y="901" width="0.0281%" height="15" fill="rgb(244,170,11)" fg:x="224" fg:w="1"/><text x="6.5386%" y="911.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateConstraints_block_invoke (1 samples, 0.03%)</title><rect x="6.3167%" y="1141" width="0.0281%" height="15" fill="rgb(207,114,54)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1151.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) updateConstraintsIfNeeded] (1 samples, 0.03%)</title><rect x="6.3167%" y="1125" width="0.0281%" height="15" fill="rgb(205,42,20)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1135.50"></text></g><g><title>AppKit`-[NSView updateConstraintsForSubtreeIfNeeded] (1 samples, 0.03%)</title><rect x="6.3167%" y="1109" width="0.0281%" height="15" fill="rgb(230,30,28)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1119.50"></text></g><g><title>AppKit`__45-[NSView updateConstraintsForSubtreeIfNeeded]_block_invoke (1 samples, 0.03%)</title><rect x="6.3167%" y="1093" width="0.0281%" height="15" fill="rgb(205,73,54)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1103.50"></text></g><g><title>AppKit`-[NSView _updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines:] (1 samples, 0.03%)</title><rect x="6.3167%" y="1077" width="0.0281%" height="15" fill="rgb(254,227,23)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1087.50"></text></g><g><title>AppKit`-[NSView _updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines:] (1 samples, 0.03%)</title><rect x="6.3167%" y="1061" width="0.0281%" height="15" fill="rgb(228,202,34)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1071.50"></text></g><g><title>AppKit`_NSViewUpdateConstraints (1 samples, 0.03%)</title><rect x="6.3167%" y="1045" width="0.0281%" height="15" fill="rgb(222,225,37)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1055.50"></text></g><g><title>AppKit`-[NSView updateConstraints] (1 samples, 0.03%)</title><rect x="6.3167%" y="1029" width="0.0281%" height="15" fill="rgb(221,14,54)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1039.50"></text></g><g><title>AppKit`-[NSView(NSConstraintBasedLayout) _updateAutoresizingConstraints] (1 samples, 0.03%)</title><rect x="6.3167%" y="1013" width="0.0281%" height="15" fill="rgb(254,102,2)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1023.50"></text></g><g><title>AppKit`-[NSView(NSConstraintBasedLayout) _constraintsEquivalentToAutoresizingMask] (1 samples, 0.03%)</title><rect x="6.3167%" y="997" width="0.0281%" height="15" fill="rgb(232,104,17)" fg:x="225" fg:w="1"/><text x="6.5667%" y="1007.50"></text></g><g><title>CoreAutoLayout`+[NSAutoresizingMaskLayoutConstraint constraintsWithAutoresizingMask:subitem:frame:superitem:bounds:] (1 samples, 0.03%)</title><rect x="6.3167%" y="981" width="0.0281%" height="15" fill="rgb(250,220,14)" fg:x="225" fg:w="1"/><text x="6.5667%" y="991.50"></text></g><g><title>CoreAutoLayout`DYLD-STUB$$objc_opt_class (1 samples, 0.03%)</title><rect x="6.3167%" y="965" width="0.0281%" height="15" fill="rgb(241,158,9)" fg:x="225" fg:w="1"/><text x="6.5667%" y="975.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (11 samples, 0.31%)</title><rect x="6.0640%" y="1237" width="0.3088%" height="15" fill="rgb(246,9,43)" fg:x="216" fg:w="11"/><text x="6.3140%" y="1247.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (10 samples, 0.28%)</title><rect x="6.0921%" y="1221" width="0.2807%" height="15" fill="rgb(206,73,33)" fg:x="217" fg:w="10"/><text x="6.3421%" y="1231.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (10 samples, 0.28%)</title><rect x="6.0921%" y="1205" width="0.2807%" height="15" fill="rgb(222,79,8)" fg:x="217" fg:w="10"/><text x="6.3421%" y="1215.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (3 samples, 0.08%)</title><rect x="6.2886%" y="1189" width="0.0842%" height="15" fill="rgb(234,8,54)" fg:x="224" fg:w="3"/><text x="6.5386%" y="1199.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (3 samples, 0.08%)</title><rect x="6.2886%" y="1173" width="0.0842%" height="15" fill="rgb(209,134,38)" fg:x="224" fg:w="3"/><text x="6.5386%" y="1183.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (3 samples, 0.08%)</title><rect x="6.2886%" y="1157" width="0.0842%" height="15" fill="rgb(230,127,29)" fg:x="224" fg:w="3"/><text x="6.5386%" y="1167.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (1 samples, 0.03%)</title><rect x="6.3448%" y="1141" width="0.0281%" height="15" fill="rgb(242,44,41)" fg:x="226" fg:w="1"/><text x="6.5948%" y="1151.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _resetDragMarginsIfNeeded] (1 samples, 0.03%)</title><rect x="6.3448%" y="1125" width="0.0281%" height="15" fill="rgb(222,56,43)" fg:x="226" fg:w="1"/><text x="6.5948%" y="1135.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _resetDragMargins] (1 samples, 0.03%)</title><rect x="6.3448%" y="1109" width="0.0281%" height="15" fill="rgb(238,39,47)" fg:x="226" fg:w="1"/><text x="6.5948%" y="1119.50"></text></g><g><title>AppKit`__53-[NSWindow(NSWindow_Theme) _titlebarActivationRegion]_block_invoke (1 samples, 0.03%)</title><rect x="6.3448%" y="1093" width="0.0281%" height="15" fill="rgb(226,79,43)" fg:x="226" fg:w="1"/><text x="6.5948%" y="1103.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_begin_handler (1 samples, 0.03%)</title><rect x="6.3728%" y="1237" width="0.0281%" height="15" fill="rgb(242,105,53)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1247.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler (1 samples, 0.03%)</title><rect x="6.3728%" y="1221" width="0.0281%" height="15" fill="rgb(251,132,46)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1231.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::event_loop::stop_app_on_panic (1 samples, 0.03%)</title><rect x="6.3728%" y="1205" width="0.0281%" height="15" fill="rgb(231,77,14)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1215.50"></text></g><g><title>rust-sokoban`std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="6.3728%" y="1189" width="0.0281%" height="15" fill="rgb(240,135,9)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1199.50"></text></g><g><title>rust-sokoban`std::panicking::try (1 samples, 0.03%)</title><rect x="6.3728%" y="1173" width="0.0281%" height="15" fill="rgb(248,109,14)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1183.50"></text></g><g><title>rust-sokoban`__rust_try (1 samples, 0.03%)</title><rect x="6.3728%" y="1157" width="0.0281%" height="15" fill="rgb(227,146,52)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1167.50"></text></g><g><title>rust-sokoban`std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="6.3728%" y="1141" width="0.0281%" height="15" fill="rgb(232,54,3)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1151.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (1 samples, 0.03%)</title><rect x="6.3728%" y="1125" width="0.0281%" height="15" fill="rgb(229,201,43)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1135.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_begin_handler::_{{closure}} (1 samples, 0.03%)</title><rect x="6.3728%" y="1109" width="0.0281%" height="15" fill="rgb(252,161,33)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1119.50"></text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::AppState::wakeup (1 samples, 0.03%)</title><rect x="6.3728%" y="1093" width="0.0281%" height="15" fill="rgb(226,146,40)" fg:x="227" fg:w="1"/><text x="6.6228%" y="1103.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="6.4009%" y="1077" width="0.0281%" height="15" fill="rgb(219,47,25)" fg:x="228" fg:w="1"/><text x="6.6509%" y="1087.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="6.4009%" y="1061" width="0.0281%" height="15" fill="rgb(250,135,13)" fg:x="228" fg:w="1"/><text x="6.6509%" y="1071.50"></text></g><g><title>rust-sokoban`alloc::slice::_&lt;impl [T]&gt;::sort_by_key (1 samples, 0.03%)</title><rect x="6.4290%" y="949" width="0.0281%" height="15" fill="rgb(219,229,18)" fg:x="229" fg:w="1"/><text x="6.6790%" y="959.50"></text></g><g><title>rust-sokoban`alloc::slice::merge_sort (1 samples, 0.03%)</title><rect x="6.4290%" y="933" width="0.0281%" height="15" fill="rgb(217,152,27)" fg:x="229" fg:w="1"/><text x="6.6790%" y="943.50"></text></g><g><title>rust-sokoban`alloc::slice::merge (1 samples, 0.03%)</title><rect x="6.4290%" y="917" width="0.0281%" height="15" fill="rgb(225,71,47)" fg:x="229" fg:w="1"/><text x="6.6790%" y="927.50"></text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.03%)</title><rect x="6.4290%" y="901" width="0.0281%" height="15" fill="rgb(220,139,14)" fg:x="229" fg:w="1"/><text x="6.6790%" y="911.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="6.4570%" y="901" width="0.0281%" height="15" fill="rgb(247,54,32)" fg:x="230" fg:w="1"/><text x="6.7070%" y="911.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="6.4570%" y="885" width="0.0281%" height="15" fill="rgb(252,131,39)" fg:x="230" fg:w="1"/><text x="6.7070%" y="895.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="6.4570%" y="869" width="0.0281%" height="15" fill="rgb(210,108,39)" fg:x="230" fg:w="1"/><text x="6.7070%" y="879.50"></text></g><g><title>rust-sokoban`&lt;specs::join::JoinIter&lt;J&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.4570%" y="853" width="0.0281%" height="15" fill="rgb(205,23,29)" fg:x="230" fg:w="1"/><text x="6.7070%" y="863.50"></text></g><g><title>rust-sokoban`&lt;hibitset::iter::BitIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.4570%" y="837" width="0.0281%" height="15" fill="rgb(246,139,46)" fg:x="230" fg:w="1"/><text x="6.7070%" y="847.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="6.4570%" y="821" width="0.0281%" height="15" fill="rgb(250,81,26)" fg:x="230" fg:w="1"/><text x="6.7070%" y="831.50"></text></g><g><title>rust-sokoban`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="6.4570%" y="805" width="0.0281%" height="15" fill="rgb(214,104,7)" fg:x="230" fg:w="1"/><text x="6.7070%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="6.4570%" y="949" width="0.0561%" height="15" fill="rgb(233,189,8)" fg:x="230" fg:w="2"/><text x="6.7070%" y="959.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="6.4570%" y="933" width="0.0561%" height="15" fill="rgb(228,141,17)" fg:x="230" fg:w="2"/><text x="6.7070%" y="943.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="6.4570%" y="917" width="0.0561%" height="15" fill="rgb(247,157,1)" fg:x="230" fg:w="2"/><text x="6.7070%" y="927.50"></text></g><g><title>rust-sokoban`core::ptr::write (1 samples, 0.03%)</title><rect x="6.4851%" y="901" width="0.0281%" height="15" fill="rgb(249,225,5)" fg:x="231" fg:w="1"/><text x="6.7351%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;&gt; (1 samples, 0.03%)</title><rect x="6.5132%" y="949" width="0.0281%" height="15" fill="rgb(242,55,13)" fg:x="232" fg:w="1"/><text x="6.7632%" y="959.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;gfx_core::handle::RawShaderResourceView&lt;gfx_device_gl::Resources&gt;&gt; (1 samples, 0.03%)</title><rect x="6.5132%" y="933" width="0.0281%" height="15" fill="rgb(230,49,50)" fg:x="232" fg:w="1"/><text x="6.7632%" y="943.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;gfx_core::handle::ViewSource&lt;gfx_device_gl::Resources&gt;&gt; (1 samples, 0.03%)</title><rect x="6.5132%" y="917" width="0.0281%" height="15" fill="rgb(241,111,38)" fg:x="232" fg:w="1"/><text x="6.7632%" y="927.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;gfx_core::handle::RawTexture&lt;gfx_device_gl::Resources&gt;&gt; (1 samples, 0.03%)</title><rect x="6.5132%" y="901" width="0.0281%" height="15" fill="rgb(252,155,4)" fg:x="232" fg:w="1"/><text x="6.7632%" y="911.50"></text></g><g><title>rust-sokoban`&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsMut&lt;T&gt;&gt;::as_mut (1 samples, 0.03%)</title><rect x="6.5413%" y="917" width="0.0281%" height="15" fill="rgb(212,69,32)" fg:x="233" fg:w="1"/><text x="6.7913%" y="927.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;(gfx_core::handle::ShaderResourceView&lt;gfx_device_gl::Resources,[f32 (1 samples, 0.03%)</title><rect x="6.5693%" y="901" width="0.0281%" height="15" fill="rgb(243,107,47)" fg:x="234" fg:w="1"/><text x="6.8193%" y="911.50"></text></g><g><title> 4]&gt;,gfx_core::handle::Sampler&lt;gfx_device_gl::Resources&gt;)&gt; (1 samples, 0.03%)</title><rect x="6.5693%" y="885" width="0.0281%" height="15" fill="rgb(247,130,12)" fg:x="234" fg:w="1"/><text x="6.8193%" y="895.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;gfx_core::handle::ShaderResourceView&lt;gfx_device_gl::Resources,[f32 (1 samples, 0.03%)</title><rect x="6.5693%" y="869" width="0.0281%" height="15" fill="rgb(233,74,16)" fg:x="234" fg:w="1"/><text x="6.8193%" y="879.50"></text></g><g><title> 4]&gt;&gt; (1 samples, 0.03%)</title><rect x="6.5693%" y="853" width="0.0281%" height="15" fill="rgb(208,58,18)" fg:x="234" fg:w="1"/><text x="6.8193%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;gfx_core::handle::RawShaderResourceView&lt;gfx_device_gl::Resources&gt;&gt; (1 samples, 0.03%)</title><rect x="6.5693%" y="837" width="0.0281%" height="15" fill="rgb(242,225,1)" fg:x="234" fg:w="1"/><text x="6.8193%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Sampler&lt;R&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="6.5974%" y="885" width="0.0281%" height="15" fill="rgb(249,39,40)" fg:x="235" fg:w="1"/><text x="6.8474%" y="895.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="6.5974%" y="869" width="0.0281%" height="15" fill="rgb(207,72,44)" fg:x="235" fg:w="1"/><text x="6.8474%" y="879.50"></text></g><g><title>rust-sokoban`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="6.6255%" y="709" width="0.0281%" height="15" fill="rgb(215,193,12)" fg:x="236" fg:w="1"/><text x="6.8755%" y="719.50"></text></g><g><title>rust-sokoban`hashbrown::map::make_insert_hash (2 samples, 0.06%)</title><rect x="6.6255%" y="853" width="0.0561%" height="15" fill="rgb(248,41,39)" fg:x="236" fg:w="2"/><text x="6.8755%" y="863.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::texture::SamplerInfo as core::hash::Hash&gt;::hash (2 samples, 0.06%)</title><rect x="6.6255%" y="837" width="0.0561%" height="15" fill="rgb(253,85,4)" fg:x="236" fg:w="2"/><text x="6.8755%" y="847.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for (A,B,C)&gt;::hash (2 samples, 0.06%)</title><rect x="6.6255%" y="821" width="0.0561%" height="15" fill="rgb(243,70,31)" fg:x="236" fg:w="2"/><text x="6.8755%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::texture::WrapMode as core::hash::Hash&gt;::hash (2 samples, 0.06%)</title><rect x="6.6255%" y="805" width="0.0561%" height="15" fill="rgb(253,195,26)" fg:x="236" fg:w="2"/><text x="6.8755%" y="815.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.06%)</title><rect x="6.6255%" y="789" width="0.0561%" height="15" fill="rgb(243,42,11)" fg:x="236" fg:w="2"/><text x="6.8755%" y="799.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_isize (2 samples, 0.06%)</title><rect x="6.6255%" y="773" width="0.0561%" height="15" fill="rgb(239,66,17)" fg:x="236" fg:w="2"/><text x="6.8755%" y="783.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_usize (2 samples, 0.06%)</title><rect x="6.6255%" y="757" width="0.0561%" height="15" fill="rgb(217,132,21)" fg:x="236" fg:w="2"/><text x="6.8755%" y="767.50"></text></g><g><title>rust-sokoban`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="6.6255%" y="741" width="0.0561%" height="15" fill="rgb(252,202,21)" fg:x="236" fg:w="2"/><text x="6.8755%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="6.6255%" y="725" width="0.0561%" height="15" fill="rgb(233,98,36)" fg:x="236" fg:w="2"/><text x="6.8755%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="6.6536%" y="709" width="0.0281%" height="15" fill="rgb(216,153,54)" fg:x="237" fg:w="1"/><text x="6.9036%" y="719.50"></text></g><g><title>rust-sokoban`&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.6816%" y="837" width="0.0281%" height="15" fill="rgb(250,99,7)" fg:x="238" fg:w="1"/><text x="6.9316%" y="847.50"></text></g><g><title>rust-sokoban`hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.03%)</title><rect x="6.6816%" y="821" width="0.0281%" height="15" fill="rgb(207,56,50)" fg:x="238" fg:w="1"/><text x="6.9316%" y="831.50"></text></g><g><title>rust-sokoban`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.03%)</title><rect x="6.6816%" y="805" width="0.0281%" height="15" fill="rgb(244,61,34)" fg:x="238" fg:w="1"/><text x="6.9316%" y="815.50"></text></g><g><title>rust-sokoban`ggez::graphics::SamplerCache&lt;B&gt;::get_or_insert (6 samples, 0.17%)</title><rect x="6.5974%" y="901" width="0.1684%" height="15" fill="rgb(241,50,38)" fg:x="235" fg:w="6"/><text x="6.8474%" y="911.50"></text></g><g><title>rust-sokoban`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.14%)</title><rect x="6.6255%" y="885" width="0.1404%" height="15" fill="rgb(212,166,30)" fg:x="236" fg:w="5"/><text x="6.8755%" y="895.50"></text></g><g><title>rust-sokoban`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.14%)</title><rect x="6.6255%" y="869" width="0.1404%" height="15" fill="rgb(249,127,32)" fg:x="236" fg:w="5"/><text x="6.8755%" y="879.50"></text></g><g><title>rust-sokoban`hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.08%)</title><rect x="6.6816%" y="853" width="0.0842%" height="15" fill="rgb(209,103,0)" fg:x="238" fg:w="3"/><text x="6.9316%" y="863.50"></text></g><g><title>rust-sokoban`hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.06%)</title><rect x="6.7097%" y="837" width="0.0561%" height="15" fill="rgb(238,209,51)" fg:x="239" fg:w="2"/><text x="6.9597%" y="847.50"></text></g><g><title>rust-sokoban`hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.06%)</title><rect x="6.7097%" y="821" width="0.0561%" height="15" fill="rgb(237,56,23)" fg:x="239" fg:w="2"/><text x="6.9597%" y="831.50"></text></g><g><title>rust-sokoban`hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.06%)</title><rect x="6.7097%" y="805" width="0.0561%" height="15" fill="rgb(215,153,46)" fg:x="239" fg:w="2"/><text x="6.9597%" y="815.50"></text></g><g><title>rust-sokoban`hashbrown::raw::h2 (2 samples, 0.06%)</title><rect x="6.7097%" y="789" width="0.0561%" height="15" fill="rgb(224,49,31)" fg:x="239" fg:w="2"/><text x="6.9597%" y="799.50"></text></g><g><title>rust-sokoban`core::cmp::Ord::min (2 samples, 0.06%)</title><rect x="6.7097%" y="773" width="0.0561%" height="15" fill="rgb(250,18,42)" fg:x="239" fg:w="2"/><text x="6.9597%" y="783.50"></text></g><g><title>rust-sokoban`core::cmp::min_by (1 samples, 0.03%)</title><rect x="6.7378%" y="757" width="0.0281%" height="15" fill="rgb(215,176,39)" fg:x="240" fg:w="1"/><text x="6.9878%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="6.7659%" y="853" width="0.0561%" height="15" fill="rgb(223,77,29)" fg:x="241" fg:w="2"/><text x="7.0159%" y="863.50"></text></g><g><title>rust-sokoban`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="6.8220%" y="853" width="0.0281%" height="15" fill="rgb(234,94,52)" fg:x="243" fg:w="1"/><text x="7.0720%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="6.8501%" y="837" width="0.0281%" height="15" fill="rgb(220,154,50)" fg:x="244" fg:w="1"/><text x="7.1001%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="6.8782%" y="837" width="0.0281%" height="15" fill="rgb(212,11,10)" fg:x="245" fg:w="1"/><text x="7.1282%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="6.8782%" y="821" width="0.0281%" height="15" fill="rgb(205,166,19)" fg:x="245" fg:w="1"/><text x="7.1282%" y="831.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="6.8782%" y="805" width="0.0281%" height="15" fill="rgb(244,198,16)" fg:x="245" fg:w="1"/><text x="7.1282%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="6.8782%" y="789" width="0.0281%" height="15" fill="rgb(219,69,12)" fg:x="245" fg:w="1"/><text x="7.1282%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.8782%" y="773" width="0.0281%" height="15" fill="rgb(245,30,7)" fg:x="245" fg:w="1"/><text x="7.1282%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.8782%" y="757" width="0.0281%" height="15" fill="rgb(218,221,48)" fg:x="245" fg:w="1"/><text x="7.1282%" y="767.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="6.8782%" y="741" width="0.0281%" height="15" fill="rgb(216,66,15)" fg:x="245" fg:w="1"/><text x="7.1282%" y="751.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="6.8782%" y="725" width="0.0281%" height="15" fill="rgb(226,122,50)" fg:x="245" fg:w="1"/><text x="7.1282%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="6.8782%" y="709" width="0.0281%" height="15" fill="rgb(239,156,16)" fg:x="245" fg:w="1"/><text x="7.1282%" y="719.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="6.9062%" y="837" width="0.0281%" height="15" fill="rgb(224,27,38)" fg:x="246" fg:w="1"/><text x="7.1562%" y="847.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="6.9062%" y="821" width="0.0281%" height="15" fill="rgb(224,39,27)" fg:x="246" fg:w="1"/><text x="7.1562%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_pipeline_state (4 samples, 0.11%)</title><rect x="6.8501%" y="853" width="0.1123%" height="15" fill="rgb(215,92,29)" fg:x="244" fg:w="4"/><text x="7.1001%" y="863.50"></text></g><g><title>rust-sokoban`gfx_device_gl::command::Cache::set_stencil_state (1 samples, 0.03%)</title><rect x="6.9343%" y="837" width="0.0281%" height="15" fill="rgb(207,159,16)" fg:x="247" fg:w="1"/><text x="7.1843%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_pixel_targets (1 samples, 0.03%)</title><rect x="6.9624%" y="853" width="0.0281%" height="15" fill="rgb(238,163,47)" fg:x="248" fg:w="1"/><text x="7.2124%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="6.9624%" y="837" width="0.0281%" height="15" fill="rgb(219,91,49)" fg:x="248" fg:w="1"/><text x="7.2124%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="6.9624%" y="821" width="0.0281%" height="15" fill="rgb(227,167,31)" fg:x="248" fg:w="1"/><text x="7.2124%" y="831.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="6.9624%" y="805" width="0.0281%" height="15" fill="rgb(234,80,54)" fg:x="248" fg:w="1"/><text x="7.2124%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="6.9624%" y="789" width="0.0281%" height="15" fill="rgb(212,114,2)" fg:x="248" fg:w="1"/><text x="7.2124%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.9624%" y="773" width="0.0281%" height="15" fill="rgb(234,50,24)" fg:x="248" fg:w="1"/><text x="7.2124%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="6.9624%" y="757" width="0.0281%" height="15" fill="rgb(221,68,8)" fg:x="248" fg:w="1"/><text x="7.2124%" y="767.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="6.9624%" y="741" width="0.0281%" height="15" fill="rgb(254,180,31)" fg:x="248" fg:w="1"/><text x="7.2124%" y="751.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="6.9624%" y="725" width="0.0281%" height="15" fill="rgb(247,130,50)" fg:x="248" fg:w="1"/><text x="7.2124%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="6.9624%" y="709" width="0.0281%" height="15" fill="rgb(211,109,4)" fg:x="248" fg:w="1"/><text x="7.2124%" y="719.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="6.9905%" y="837" width="0.0281%" height="15" fill="rgb(238,50,21)" fg:x="249" fg:w="1"/><text x="7.2405%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="6.9905%" y="821" width="0.0281%" height="15" fill="rgb(225,57,45)" fg:x="249" fg:w="1"/><text x="7.2405%" y="831.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="7.0185%" y="821" width="0.0561%" height="15" fill="rgb(209,196,50)" fg:x="250" fg:w="2"/><text x="7.2685%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="7.0466%" y="805" width="0.0281%" height="15" fill="rgb(242,140,13)" fg:x="251" fg:w="1"/><text x="7.2966%" y="815.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_resource_views (4 samples, 0.11%)</title><rect x="6.9905%" y="853" width="0.1123%" height="15" fill="rgb(217,111,7)" fg:x="249" fg:w="4"/><text x="7.2405%" y="863.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.08%)</title><rect x="7.0185%" y="837" width="0.0842%" height="15" fill="rgb(253,193,51)" fg:x="250" fg:w="3"/><text x="7.2685%" y="847.50"></text></g><g><title>rust-sokoban`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.03%)</title><rect x="7.0747%" y="821" width="0.0281%" height="15" fill="rgb(252,70,29)" fg:x="252" fg:w="1"/><text x="7.3247%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_samplers (1 samples, 0.03%)</title><rect x="7.1028%" y="853" width="0.0281%" height="15" fill="rgb(232,127,12)" fg:x="253" fg:w="1"/><text x="7.3528%" y="863.50"></text></g><g><title>rust-sokoban`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="7.1028%" y="837" width="0.0281%" height="15" fill="rgb(211,180,21)" fg:x="253" fg:w="1"/><text x="7.3528%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_vertex_buffers (1 samples, 0.03%)</title><rect x="7.1308%" y="853" width="0.0281%" height="15" fill="rgb(229,72,13)" fg:x="254" fg:w="1"/><text x="7.3808%" y="863.50"></text></g><g><title>rust-sokoban`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="7.1308%" y="837" width="0.0281%" height="15" fill="rgb(240,211,49)" fg:x="254" fg:w="1"/><text x="7.3808%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::pso::VertexBufferSet&lt;R&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="7.1308%" y="821" width="0.0281%" height="15" fill="rgb(219,149,40)" fg:x="254" fg:w="1"/><text x="7.3808%" y="831.50"></text></g><g><title>rust-sokoban`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (1 samples, 0.03%)</title><rect x="7.1308%" y="805" width="0.0281%" height="15" fill="rgb(210,127,46)" fg:x="254" fg:w="1"/><text x="7.3808%" y="815.50"></text></g><g><title> N]&gt; for [A (1 samples, 0.03%)</title><rect x="7.1308%" y="789" width="0.0281%" height="15" fill="rgb(220,106,7)" fg:x="254" fg:w="1"/><text x="7.3808%" y="799.50"></text></g><g><title> N]&gt;::eq (1 samples, 0.03%)</title><rect x="7.1308%" y="773" width="0.0281%" height="15" fill="rgb(249,31,22)" fg:x="254" fg:w="1"/><text x="7.3808%" y="783.50"></text></g><g><title>rust-sokoban`&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (1 samples, 0.03%)</title><rect x="7.1308%" y="757" width="0.0281%" height="15" fill="rgb(253,1,49)" fg:x="254" fg:w="1"/><text x="7.3808%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.03%)</title><rect x="7.1308%" y="741" width="0.0281%" height="15" fill="rgb(227,144,33)" fg:x="254" fg:w="1"/><text x="7.3808%" y="751.50"></text></g><g><title>rust-sokoban`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.03%)</title><rect x="7.1308%" y="725" width="0.0281%" height="15" fill="rgb(249,163,44)" fg:x="254" fg:w="1"/><text x="7.3808%" y="735.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="7.1308%" y="709" width="0.0281%" height="15" fill="rgb(234,15,39)" fg:x="254" fg:w="1"/><text x="7.3808%" y="719.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::set_ref_values (1 samples, 0.03%)</title><rect x="7.1589%" y="853" width="0.0281%" height="15" fill="rgb(207,66,16)" fg:x="255" fg:w="1"/><text x="7.4089%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="7.1589%" y="837" width="0.0281%" height="15" fill="rgb(233,112,24)" fg:x="255" fg:w="1"/><text x="7.4089%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="7.1589%" y="821" width="0.0281%" height="15" fill="rgb(230,90,22)" fg:x="255" fg:w="1"/><text x="7.4089%" y="831.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="7.1589%" y="805" width="0.0281%" height="15" fill="rgb(229,61,13)" fg:x="255" fg:w="1"/><text x="7.4089%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="7.1589%" y="789" width="0.0281%" height="15" fill="rgb(225,57,24)" fg:x="255" fg:w="1"/><text x="7.4089%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.1589%" y="773" width="0.0281%" height="15" fill="rgb(208,169,48)" fg:x="255" fg:w="1"/><text x="7.4089%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.1589%" y="757" width="0.0281%" height="15" fill="rgb(244,218,51)" fg:x="255" fg:w="1"/><text x="7.4089%" y="767.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="7.1589%" y="741" width="0.0281%" height="15" fill="rgb(214,148,10)" fg:x="255" fg:w="1"/><text x="7.4089%" y="751.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="7.1589%" y="725" width="0.0281%" height="15" fill="rgb(225,174,27)" fg:x="255" fg:w="1"/><text x="7.4089%" y="735.50"></text></g><g><title>rust-sokoban`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="7.1589%" y="709" width="0.0281%" height="15" fill="rgb(230,96,26)" fg:x="255" fg:w="1"/><text x="7.4089%" y="719.50"></text></g><g><title>rust-sokoban`&lt;gfx::pso::buffer::VertexBufferCommon&lt;T,I&gt; as gfx::pso::DataBind&lt;R&gt;&gt;::bind_to (1 samples, 0.03%)</title><rect x="7.1870%" y="821" width="0.0281%" height="15" fill="rgb(232,10,30)" fg:x="256" fg:w="1"/><text x="7.4370%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx::pso::buffer::RawVertexBuffer as gfx::pso::DataBind&lt;R&gt;&gt;::bind_to (1 samples, 0.03%)</title><rect x="7.1870%" y="805" width="0.0281%" height="15" fill="rgb(222,8,50)" fg:x="256" fg:w="1"/><text x="7.4370%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="7.1870%" y="789" width="0.0281%" height="15" fill="rgb(213,81,27)" fg:x="256" fg:w="1"/><text x="7.4370%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="7.1870%" y="773" width="0.0281%" height="15" fill="rgb(245,50,10)" fg:x="256" fg:w="1"/><text x="7.4370%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="7.1870%" y="757" width="0.0281%" height="15" fill="rgb(216,100,18)" fg:x="256" fg:w="1"/><text x="7.4370%" y="767.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::shader::ConstData&lt;R,C&gt; as gfx::pso::PipelineData&lt;R&gt;&gt;::bake_to (2 samples, 0.06%)</title><rect x="7.1870%" y="853" width="0.0561%" height="15" fill="rgb(236,147,54)" fg:x="256" fg:w="2"/><text x="7.4370%" y="863.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::pipe::Data&lt;R&gt; as gfx::pso::PipelineData&lt;R&gt;&gt;::bake_to (2 samples, 0.06%)</title><rect x="7.1870%" y="837" width="0.0561%" height="15" fill="rgb(205,143,26)" fg:x="256" fg:w="2"/><text x="7.4370%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Buffer&lt;R,T&gt; as gfx_core::memory::Typed&gt;::raw (1 samples, 0.03%)</title><rect x="7.2150%" y="821" width="0.0281%" height="15" fill="rgb(236,26,9)" fg:x="257" fg:w="1"/><text x="7.4650%" y="831.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw_slice (1 samples, 0.03%)</title><rect x="7.2431%" y="853" width="0.0281%" height="15" fill="rgb(221,165,53)" fg:x="258" fg:w="1"/><text x="7.4931%" y="863.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw_indexed (1 samples, 0.03%)</title><rect x="7.2431%" y="837" width="0.0281%" height="15" fill="rgb(214,110,17)" fg:x="258" fg:w="1"/><text x="7.4931%" y="847.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::ref_buffer (1 samples, 0.03%)</title><rect x="7.2431%" y="821" width="0.0281%" height="15" fill="rgb(237,197,12)" fg:x="258" fg:w="1"/><text x="7.4931%" y="831.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="7.2431%" y="805" width="0.0281%" height="15" fill="rgb(205,84,17)" fg:x="258" fg:w="1"/><text x="7.4931%" y="815.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="7.2431%" y="789" width="0.0281%" height="15" fill="rgb(237,18,45)" fg:x="258" fg:w="1"/><text x="7.4931%" y="799.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::shader::ShaderProgram&lt;Spec,C&gt; as ggez::graphics::shader::ShaderHandle&lt;Spec&gt;&gt;::draw (19 samples, 0.53%)</title><rect x="6.7659%" y="885" width="0.5334%" height="15" fill="rgb(221,87,14)" fg:x="241" fg:w="19"/><text x="7.0159%" y="895.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw (19 samples, 0.53%)</title><rect x="6.7659%" y="869" width="0.5334%" height="15" fill="rgb(238,186,15)" fg:x="241" fg:w="19"/><text x="7.0159%" y="879.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::ref_pso (1 samples, 0.03%)</title><rect x="7.2712%" y="853" width="0.0281%" height="15" fill="rgb(208,115,11)" fg:x="259" fg:w="1"/><text x="7.5212%" y="863.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Program&lt;R&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="7.2712%" y="837" width="0.0281%" height="15" fill="rgb(254,175,0)" fg:x="259" fg:w="1"/><text x="7.5212%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="7.2712%" y="821" width="0.0281%" height="15" fill="rgb(227,24,42)" fg:x="259" fg:w="1"/><text x="7.5212%" y="831.50"></text></g><g><title>rust-sokoban`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="7.2712%" y="805" width="0.0281%" height="15" fill="rgb(223,211,37)" fg:x="259" fg:w="1"/><text x="7.5212%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="7.2712%" y="789" width="0.0281%" height="15" fill="rgb(235,49,27)" fg:x="259" fg:w="1"/><text x="7.5212%" y="799.50"></text></g><g><title>rust-sokoban`ggez::graphics::context::GraphicsContextGeneric&lt;B&gt;::draw (20 samples, 0.56%)</title><rect x="6.7659%" y="901" width="0.5615%" height="15" fill="rgb(254,97,51)" fg:x="241" fg:w="20"/><text x="7.0159%" y="911.50"></text></g><g><title>rust-sokoban`core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.03%)</title><rect x="7.2993%" y="885" width="0.0281%" height="15" fill="rgb(249,51,40)" fg:x="260" fg:w="1"/><text x="7.5493%" y="895.50"></text></g><g><title>rust-sokoban`core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.03%)</title><rect x="7.2993%" y="869" width="0.0281%" height="15" fill="rgb(210,128,45)" fg:x="260" fg:w="1"/><text x="7.5493%" y="879.50"></text></g><g><title>rust-sokoban`core::cell::BorrowRef::new (1 samples, 0.03%)</title><rect x="7.2993%" y="853" width="0.0281%" height="15" fill="rgb(224,137,50)" fg:x="260" fg:w="1"/><text x="7.5493%" y="863.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="7.2993%" y="837" width="0.0281%" height="15" fill="rgb(242,15,9)" fg:x="260" fg:w="1"/><text x="7.5493%" y="847.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="7.2993%" y="821" width="0.0281%" height="15" fill="rgb(233,187,41)" fg:x="260" fg:w="1"/><text x="7.5493%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="7.2993%" y="805" width="0.0281%" height="15" fill="rgb(227,2,29)" fg:x="260" fg:w="1"/><text x="7.5493%" y="815.50"></text></g><g><title>rust-sokoban`ggez::graphics::draw (29 samples, 0.81%)</title><rect x="6.5413%" y="949" width="0.8141%" height="15" fill="rgb(222,70,3)" fg:x="233" fg:w="29"/><text x="6.7913%" y="959.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt; as ggez::graphics::Drawable&gt;::draw (29 samples, 0.81%)</title><rect x="6.5413%" y="933" width="0.8141%" height="15" fill="rgb(213,11,42)" fg:x="233" fg:w="29"/><text x="6.7913%" y="943.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::draw_image_raw (28 samples, 0.79%)</title><rect x="6.5693%" y="917" width="0.7861%" height="15" fill="rgb(225,150,9)" fg:x="234" fg:w="28"/><text x="6.8193%" y="927.50"></text></g><g><title>rust-sokoban`ggez::graphics::context::GraphicsContextGeneric&lt;B&gt;::update_instance_properties (1 samples, 0.03%)</title><rect x="7.3273%" y="901" width="0.0281%" height="15" fill="rgb(230,162,45)" fg:x="261" fg:w="1"/><text x="7.5773%" y="911.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::update_buffer (1 samples, 0.03%)</title><rect x="7.3273%" y="885" width="0.0281%" height="15" fill="rgb(222,14,52)" fg:x="261" fg:w="1"/><text x="7.5773%" y="895.50"></text></g><g><title>rust-sokoban`gfx_core::memory::cast_slice (1 samples, 0.03%)</title><rect x="7.3273%" y="869" width="0.0281%" height="15" fill="rgb(254,198,14)" fg:x="261" fg:w="1"/><text x="7.5773%" y="879.50"></text></g><g><title>rust-sokoban`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="7.3554%" y="917" width="0.0281%" height="15" fill="rgb(220,217,30)" fg:x="262" fg:w="1"/><text x="7.6054%" y="927.50"></text></g><g><title>rust-sokoban`image::image::ImageFormat::from_extension (1 samples, 0.03%)</title><rect x="7.3554%" y="901" width="0.0281%" height="15" fill="rgb(215,146,41)" fg:x="262" fg:w="1"/><text x="7.6054%" y="911.50"></text></g><g><title>rust-sokoban`image::image::ImageFormat::from_extension::inner (1 samples, 0.03%)</title><rect x="7.3554%" y="885" width="0.0281%" height="15" fill="rgb(217,27,36)" fg:x="262" fg:w="1"/><text x="7.6054%" y="895.50"></text></g><g><title>rust-sokoban`alloc::str::_&lt;impl str&gt;::to_ascii_lowercase (1 samples, 0.03%)</title><rect x="7.3554%" y="869" width="0.0281%" height="15" fill="rgb(219,218,39)" fg:x="262" fg:w="1"/><text x="7.6054%" y="879.50"></text></g><g><title>rust-sokoban`alloc::slice::_&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="7.3554%" y="853" width="0.0281%" height="15" fill="rgb(219,4,42)" fg:x="262" fg:w="1"/><text x="7.6054%" y="863.50"></text></g><g><title>rust-sokoban`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="7.3554%" y="837" width="0.0281%" height="15" fill="rgb(249,119,36)" fg:x="262" fg:w="1"/><text x="7.6054%" y="847.50"></text></g><g><title>rust-sokoban`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="7.3554%" y="821" width="0.0281%" height="15" fill="rgb(209,23,33)" fg:x="262" fg:w="1"/><text x="7.6054%" y="831.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.06%)</title><rect x="7.3554%" y="933" width="0.0561%" height="15" fill="rgb(211,10,0)" fg:x="262" fg:w="2"/><text x="7.6054%" y="943.50"></text></g><g><title>rust-sokoban`image::image::ImageFormat::from_extension (1 samples, 0.03%)</title><rect x="7.3835%" y="917" width="0.0281%" height="15" fill="rgb(208,99,37)" fg:x="263" fg:w="1"/><text x="7.6335%" y="927.50"></text></g><g><title>rust-sokoban`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="7.4116%" y="901" width="0.0281%" height="15" fill="rgb(213,132,31)" fg:x="264" fg:w="1"/><text x="7.6616%" y="911.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.4396%" y="885" width="0.0281%" height="15" fill="rgb(243,129,40)" fg:x="265" fg:w="1"/><text x="7.6896%" y="895.50"></text></g><g><title>rust-sokoban`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.4396%" y="869" width="0.0281%" height="15" fill="rgb(210,66,33)" fg:x="265" fg:w="1"/><text x="7.6896%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="7.4396%" y="853" width="0.0281%" height="15" fill="rgb(209,189,4)" fg:x="265" fg:w="1"/><text x="7.6896%" y="863.50"></text></g><g><title>rust-sokoban`alloc::alloc::box_free (2 samples, 0.06%)</title><rect x="7.4396%" y="901" width="0.0561%" height="15" fill="rgb(214,107,37)" fg:x="265" fg:w="2"/><text x="7.6896%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="7.4677%" y="885" width="0.0281%" height="15" fill="rgb(245,88,54)" fg:x="266" fg:w="1"/><text x="7.7177%" y="895.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;ggez::filesystem::File&gt; (8 samples, 0.22%)</title><rect x="7.4116%" y="933" width="0.2246%" height="15" fill="rgb(205,146,20)" fg:x="264" fg:w="8"/><text x="7.6616%" y="943.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn ggez::vfs::VFile&gt;&gt; (8 samples, 0.22%)</title><rect x="7.4116%" y="917" width="0.2246%" height="15" fill="rgb(220,161,25)" fg:x="264" fg:w="8"/><text x="7.6616%" y="927.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::fs::File&gt; (5 samples, 0.14%)</title><rect x="7.4958%" y="901" width="0.1404%" height="15" fill="rgb(215,152,15)" fg:x="267" fg:w="5"/><text x="7.7458%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (5 samples, 0.14%)</title><rect x="7.4958%" y="885" width="0.1404%" height="15" fill="rgb(233,192,44)" fg:x="267" fg:w="5"/><text x="7.7458%" y="895.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (5 samples, 0.14%)</title><rect x="7.4958%" y="869" width="0.1404%" height="15" fill="rgb(240,170,46)" fg:x="267" fg:w="5"/><text x="7.7458%" y="879.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (5 samples, 0.14%)</title><rect x="7.4958%" y="853" width="0.1404%" height="15" fill="rgb(207,104,33)" fg:x="267" fg:w="5"/><text x="7.7458%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`close (5 samples, 0.14%)</title><rect x="7.4958%" y="837" width="0.1404%" height="15" fill="rgb(219,21,39)" fg:x="267" fg:w="5"/><text x="7.7458%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.03%)</title><rect x="7.6362%" y="917" width="0.0281%" height="15" fill="rgb(214,133,29)" fg:x="272" fg:w="1"/><text x="7.8862%" y="927.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="7.6362%" y="901" width="0.0281%" height="15" fill="rgb(226,93,6)" fg:x="272" fg:w="1"/><text x="7.8862%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="7.6362%" y="885" width="0.0281%" height="15" fill="rgb(252,222,34)" fg:x="272" fg:w="1"/><text x="7.8862%" y="895.50"></text></g><g><title>rust-sokoban`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.6362%" y="869" width="0.0281%" height="15" fill="rgb(252,92,48)" fg:x="272" fg:w="1"/><text x="7.8862%" y="879.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.6362%" y="853" width="0.0281%" height="15" fill="rgb(245,223,24)" fg:x="272" fg:w="1"/><text x="7.8862%" y="863.50"></text></g><g><title>rust-sokoban`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.6362%" y="837" width="0.0281%" height="15" fill="rgb(205,176,3)" fg:x="272" fg:w="1"/><text x="7.8862%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="7.6362%" y="821" width="0.0281%" height="15" fill="rgb(235,151,15)" fg:x="272" fg:w="1"/><text x="7.8862%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="7.6362%" y="805" width="0.0281%" height="15" fill="rgb(237,209,11)" fg:x="272" fg:w="1"/><text x="7.8862%" y="815.50"></text></g><g><title>rust-sokoban`ggez::vfs::OpenOptions::read (2 samples, 0.06%)</title><rect x="7.6642%" y="917" width="0.0561%" height="15" fill="rgb(243,227,24)" fg:x="273" fg:w="2"/><text x="7.9142%" y="927.50"></text></g><g><title>rust-sokoban`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.7204%" y="885" width="0.0281%" height="15" fill="rgb(239,193,16)" fg:x="275" fg:w="1"/><text x="7.9704%" y="895.50"></text></g><g><title>rust-sokoban`&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="7.7485%" y="853" width="0.0281%" height="15" fill="rgb(231,27,9)" fg:x="276" fg:w="1"/><text x="7.9985%" y="863.50"></text></g><g><title>rust-sokoban`&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="7.7485%" y="837" width="0.0281%" height="15" fill="rgb(219,169,10)" fg:x="276" fg:w="1"/><text x="7.9985%" y="847.50"></text></g><g><title>rust-sokoban`&lt;std::sys::unix::os_str::Buf as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="7.7485%" y="821" width="0.0281%" height="15" fill="rgb(244,229,43)" fg:x="276" fg:w="1"/><text x="7.9985%" y="831.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="7.7485%" y="805" width="0.0281%" height="15" fill="rgb(254,38,20)" fg:x="276" fg:w="1"/><text x="7.9985%" y="815.50"></text></g><g><title>rust-sokoban`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="7.7485%" y="789" width="0.0281%" height="15" fill="rgb(250,47,30)" fg:x="276" fg:w="1"/><text x="7.9985%" y="799.50"></text></g><g><title>rust-sokoban`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="7.7485%" y="773" width="0.0281%" height="15" fill="rgb(224,124,36)" fg:x="276" fg:w="1"/><text x="7.9985%" y="783.50"></text></g><g><title>rust-sokoban`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="7.7485%" y="757" width="0.0281%" height="15" fill="rgb(246,68,51)" fg:x="276" fg:w="1"/><text x="7.9985%" y="767.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="7.7485%" y="741" width="0.0281%" height="15" fill="rgb(253,43,49)" fg:x="276" fg:w="1"/><text x="7.9985%" y="751.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="7.7485%" y="725" width="0.0281%" height="15" fill="rgb(219,54,36)" fg:x="276" fg:w="1"/><text x="7.9985%" y="735.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="7.7485%" y="709" width="0.0281%" height="15" fill="rgb(227,133,34)" fg:x="276" fg:w="1"/><text x="7.9985%" y="719.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="7.7485%" y="693" width="0.0281%" height="15" fill="rgb(247,227,15)" fg:x="276" fg:w="1"/><text x="7.9985%" y="703.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="7.7485%" y="677" width="0.0281%" height="15" fill="rgb(229,96,14)" fg:x="276" fg:w="1"/><text x="7.9985%" y="687.50"></text></g><g><title>rust-sokoban`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="7.7485%" y="661" width="0.0281%" height="15" fill="rgb(220,79,17)" fg:x="276" fg:w="1"/><text x="7.9985%" y="671.50"></text></g><g><title>rust-sokoban`core::num::nonzero::NonZeroUsize::get (1 samples, 0.03%)</title><rect x="7.7485%" y="645" width="0.0281%" height="15" fill="rgb(205,131,53)" fg:x="276" fg:w="1"/><text x="7.9985%" y="655.50"></text></g><g><title>rust-sokoban`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.7765%" y="837" width="0.0281%" height="15" fill="rgb(209,50,29)" fg:x="277" fg:w="1"/><text x="8.0265%" y="847.50"></text></g><g><title>rust-sokoban`&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (2 samples, 0.06%)</title><rect x="7.8046%" y="821" width="0.0561%" height="15" fill="rgb(245,86,46)" fg:x="278" fg:w="2"/><text x="8.0546%" y="831.50"></text></g><g><title>rust-sokoban`std::path::_&lt;impl core::convert::AsRef&lt;std::path::Path&gt; for str&gt;::as_ref (2 samples, 0.06%)</title><rect x="7.8046%" y="805" width="0.0561%" height="15" fill="rgb(235,66,46)" fg:x="278" fg:w="2"/><text x="8.0546%" y="815.50"></text></g><g><title>rust-sokoban`std::path::Path::new (2 samples, 0.06%)</title><rect x="7.8046%" y="789" width="0.0561%" height="15" fill="rgb(232,148,31)" fg:x="278" fg:w="2"/><text x="8.0546%" y="799.50"></text></g><g><title>rust-sokoban`std::ffi::os_str::_&lt;impl core::convert::AsRef&lt;std::ffi::os_str::OsStr&gt; for str&gt;::as_ref (2 samples, 0.06%)</title><rect x="7.8046%" y="773" width="0.0561%" height="15" fill="rgb(217,149,8)" fg:x="278" fg:w="2"/><text x="8.0546%" y="783.50"></text></g><g><title>rust-sokoban`std::sys::unix::os_str::Slice::from_str (2 samples, 0.06%)</title><rect x="7.8046%" y="757" width="0.0561%" height="15" fill="rgb(209,183,11)" fg:x="278" fg:w="2"/><text x="8.0546%" y="767.50"></text></g><g><title>rust-sokoban`ggez::vfs::sanitize_path (4 samples, 0.11%)</title><rect x="7.7765%" y="853" width="0.1123%" height="15" fill="rgb(208,55,20)" fg:x="277" fg:w="4"/><text x="8.0265%" y="863.50"></text></g><g><title>rust-sokoban`std::path::PathBuf::push (3 samples, 0.08%)</title><rect x="7.8046%" y="837" width="0.0842%" height="15" fill="rgb(218,39,14)" fg:x="278" fg:w="3"/><text x="8.0546%" y="847.50"></text></g><g><title>rust-sokoban`std::path::PathBuf::_push (1 samples, 0.03%)</title><rect x="7.8608%" y="821" width="0.0281%" height="15" fill="rgb(216,169,33)" fg:x="280" fg:w="1"/><text x="8.1108%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (1 samples, 0.03%)</title><rect x="7.8888%" y="837" width="0.0281%" height="15" fill="rgb(233,80,24)" fg:x="281" fg:w="1"/><text x="8.1388%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1 samples, 0.03%)</title><rect x="7.8888%" y="821" width="0.0281%" height="15" fill="rgb(213,179,31)" fg:x="281" fg:w="1"/><text x="8.1388%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (1 samples, 0.03%)</title><rect x="7.8888%" y="805" width="0.0281%" height="15" fill="rgb(209,19,5)" fg:x="281" fg:w="1"/><text x="8.1388%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="7.8888%" y="789" width="0.0281%" height="15" fill="rgb(219,18,35)" fg:x="281" fg:w="1"/><text x="8.1388%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.8888%" y="773" width="0.0281%" height="15" fill="rgb(209,169,16)" fg:x="281" fg:w="1"/><text x="8.1388%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="7.8888%" y="757" width="0.0281%" height="15" fill="rgb(245,90,51)" fg:x="281" fg:w="1"/><text x="8.1388%" y="767.50"></text></g><g><title>rust-sokoban`ggez::vfs::PhysicalFS::to_absolute (7 samples, 0.20%)</title><rect x="7.7485%" y="869" width="0.1965%" height="15" fill="rgb(220,99,45)" fg:x="276" fg:w="7"/><text x="7.9985%" y="879.50"></text></g><g><title>rust-sokoban`std::path::PathBuf::push (2 samples, 0.06%)</title><rect x="7.8888%" y="853" width="0.0561%" height="15" fill="rgb(249,89,25)" fg:x="281" fg:w="2"/><text x="8.1388%" y="863.50"></text></g><g><title>rust-sokoban`std::path::PathBuf::_push (1 samples, 0.03%)</title><rect x="7.9169%" y="837" width="0.0281%" height="15" fill="rgb(239,193,0)" fg:x="282" fg:w="1"/><text x="8.1669%" y="847.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="7.9169%" y="821" width="0.0281%" height="15" fill="rgb(231,126,1)" fg:x="282" fg:w="1"/><text x="8.1669%" y="831.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="7.9169%" y="805" width="0.0281%" height="15" fill="rgb(243,166,3)" fg:x="282" fg:w="1"/><text x="8.1669%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="7.9169%" y="789" width="0.0281%" height="15" fill="rgb(223,22,34)" fg:x="282" fg:w="1"/><text x="8.1669%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="7.9169%" y="773" width="0.0281%" height="15" fill="rgb(251,52,51)" fg:x="282" fg:w="1"/><text x="8.1669%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="7.9169%" y="757" width="0.0281%" height="15" fill="rgb(221,165,28)" fg:x="282" fg:w="1"/><text x="8.1669%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="7.9169%" y="741" width="0.0281%" height="15" fill="rgb(218,121,47)" fg:x="282" fg:w="1"/><text x="8.1669%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (1 samples, 0.03%)</title><rect x="7.9450%" y="853" width="0.0281%" height="15" fill="rgb(209,120,9)" fg:x="283" fg:w="1"/><text x="8.1950%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1 samples, 0.03%)</title><rect x="7.9450%" y="837" width="0.0281%" height="15" fill="rgb(236,68,12)" fg:x="283" fg:w="1"/><text x="8.1950%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (1 samples, 0.03%)</title><rect x="7.9450%" y="821" width="0.0281%" height="15" fill="rgb(225,194,26)" fg:x="283" fg:w="1"/><text x="8.1950%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="7.9450%" y="805" width="0.0281%" height="15" fill="rgb(231,84,39)" fg:x="283" fg:w="1"/><text x="8.1950%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="7.9450%" y="789" width="0.0281%" height="15" fill="rgb(210,11,45)" fg:x="283" fg:w="1"/><text x="8.1950%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.9450%" y="773" width="0.0281%" height="15" fill="rgb(224,54,52)" fg:x="283" fg:w="1"/><text x="8.1950%" y="783.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.9450%" y="757" width="0.0281%" height="15" fill="rgb(238,102,14)" fg:x="283" fg:w="1"/><text x="8.1950%" y="767.50"></text></g><g><title>rust-sokoban`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.9450%" y="741" width="0.0281%" height="15" fill="rgb(243,160,52)" fg:x="283" fg:w="1"/><text x="8.1950%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="7.9450%" y="725" width="0.0281%" height="15" fill="rgb(216,114,19)" fg:x="283" fg:w="1"/><text x="8.1950%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="7.9450%" y="709" width="0.0281%" height="15" fill="rgb(244,166,37)" fg:x="283" fg:w="1"/><text x="8.1950%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="7.9730%" y="837" width="0.0281%" height="15" fill="rgb(246,29,44)" fg:x="284" fg:w="1"/><text x="8.2230%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="7.9730%" y="821" width="0.0281%" height="15" fill="rgb(215,56,53)" fg:x="284" fg:w="1"/><text x="8.2230%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__open (59 samples, 1.66%)</title><rect x="8.0011%" y="821" width="1.6564%" height="15" fill="rgb(217,60,2)" fg:x="285" fg:w="59"/><text x="8.2511%" y="831.50"></text></g><g><title>rust-sokoban`&lt;ggez::vfs::PhysicalFS as ggez::vfs::VFS&gt;::open_options (69 samples, 1.94%)</title><rect x="7.7485%" y="885" width="1.9371%" height="15" fill="rgb(207,26,24)" fg:x="276" fg:w="69"/><text x="7.9985%" y="895.50">r..</text></g><g><title>rust-sokoban`std::fs::OpenOptions::open (62 samples, 1.74%)</title><rect x="7.9450%" y="869" width="1.7406%" height="15" fill="rgb(252,210,15)" fg:x="283" fg:w="62"/><text x="8.1950%" y="879.50"></text></g><g><title>rust-sokoban`std::fs::OpenOptions::_open (61 samples, 1.71%)</title><rect x="7.9730%" y="853" width="1.7125%" height="15" fill="rgb(253,209,26)" fg:x="284" fg:w="61"/><text x="8.2230%" y="863.50"></text></g><g><title>rust-sokoban`std::sys::unix::fs::File::open_c (60 samples, 1.68%)</title><rect x="8.0011%" y="837" width="1.6844%" height="15" fill="rgb(238,170,14)" fg:x="285" fg:w="60"/><text x="8.2511%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`open (1 samples, 0.03%)</title><rect x="9.6575%" y="821" width="0.0281%" height="15" fill="rgb(216,178,15)" fg:x="344" fg:w="1"/><text x="9.9075%" y="831.50"></text></g><g><title>rust-sokoban`&lt;ggez::vfs::PhysicalFS as ggez::vfs::VFS&gt;::to_path_buf (1 samples, 0.03%)</title><rect x="9.6856%" y="885" width="0.0281%" height="15" fill="rgb(250,197,2)" fg:x="345" fg:w="1"/><text x="9.9356%" y="895.50"></text></g><g><title>rust-sokoban`&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.6856%" y="869" width="0.0281%" height="15" fill="rgb(212,70,42)" fg:x="345" fg:w="1"/><text x="9.9356%" y="879.50"></text></g><g><title>rust-sokoban`&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.6856%" y="853" width="0.0281%" height="15" fill="rgb(227,213,9)" fg:x="345" fg:w="1"/><text x="9.9356%" y="863.50"></text></g><g><title>rust-sokoban`&lt;std::sys::unix::os_str::Buf as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.6856%" y="837" width="0.0281%" height="15" fill="rgb(245,99,25)" fg:x="345" fg:w="1"/><text x="9.9356%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="9.6856%" y="821" width="0.0281%" height="15" fill="rgb(250,82,29)" fg:x="345" fg:w="1"/><text x="9.9356%" y="831.50"></text></g><g><title>rust-sokoban`alloc::slice::_&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="9.6856%" y="805" width="0.0281%" height="15" fill="rgb(241,226,54)" fg:x="345" fg:w="1"/><text x="9.9356%" y="815.50"></text></g><g><title>rust-sokoban`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="9.6856%" y="789" width="0.0281%" height="15" fill="rgb(221,99,41)" fg:x="345" fg:w="1"/><text x="9.9356%" y="799.50"></text></g><g><title>rust-sokoban`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="9.6856%" y="773" width="0.0281%" height="15" fill="rgb(213,90,21)" fg:x="345" fg:w="1"/><text x="9.9356%" y="783.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="9.6856%" y="757" width="0.0281%" height="15" fill="rgb(205,208,24)" fg:x="345" fg:w="1"/><text x="9.9356%" y="767.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="9.6856%" y="741" width="0.0281%" height="15" fill="rgb(246,31,12)" fg:x="345" fg:w="1"/><text x="9.9356%" y="751.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="9.6856%" y="725" width="0.0281%" height="15" fill="rgb(213,154,6)" fg:x="345" fg:w="1"/><text x="9.9356%" y="735.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="9.6856%" y="709" width="0.0281%" height="15" fill="rgb(222,163,29)" fg:x="345" fg:w="1"/><text x="9.9356%" y="719.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="9.6856%" y="693" width="0.0281%" height="15" fill="rgb(227,201,8)" fg:x="345" fg:w="1"/><text x="9.9356%" y="703.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::align (1 samples, 0.03%)</title><rect x="9.6856%" y="677" width="0.0281%" height="15" fill="rgb(233,9,32)" fg:x="345" fg:w="1"/><text x="9.9356%" y="687.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="9.7136%" y="805" width="0.0281%" height="15" fill="rgb(217,54,24)" fg:x="346" fg:w="1"/><text x="9.9636%" y="815.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="9.7417%" y="805" width="0.0281%" height="15" fill="rgb(235,192,0)" fg:x="347" fg:w="1"/><text x="9.9917%" y="815.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="9.7417%" y="789" width="0.0281%" height="15" fill="rgb(235,45,9)" fg:x="347" fg:w="1"/><text x="9.9917%" y="799.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="9.7417%" y="773" width="0.0281%" height="15" fill="rgb(246,42,40)" fg:x="347" fg:w="1"/><text x="9.9917%" y="783.50"></text></g><g><title>rust-sokoban`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="9.7417%" y="757" width="0.0281%" height="15" fill="rgb(248,111,24)" fg:x="347" fg:w="1"/><text x="9.9917%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="9.7417%" y="741" width="0.0281%" height="15" fill="rgb(249,65,22)" fg:x="347" fg:w="1"/><text x="9.9917%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="9.7417%" y="725" width="0.0281%" height="15" fill="rgb(238,111,51)" fg:x="347" fg:w="1"/><text x="9.9917%" y="735.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.08%)</title><rect x="9.7136%" y="885" width="0.0842%" height="15" fill="rgb(250,118,22)" fg:x="346" fg:w="3"/><text x="9.9636%" y="895.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="9.7136%" y="869" width="0.0842%" height="15" fill="rgb(234,84,26)" fg:x="346" fg:w="3"/><text x="9.9636%" y="879.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="9.7136%" y="853" width="0.0842%" height="15" fill="rgb(243,172,12)" fg:x="346" fg:w="3"/><text x="9.9636%" y="863.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.08%)</title><rect x="9.7136%" y="837" width="0.0842%" height="15" fill="rgb(236,150,49)" fg:x="346" fg:w="3"/><text x="9.9636%" y="847.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.08%)</title><rect x="9.7136%" y="821" width="0.0842%" height="15" fill="rgb(225,197,26)" fg:x="346" fg:w="3"/><text x="9.9636%" y="831.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="9.7698%" y="805" width="0.0281%" height="15" fill="rgb(214,17,42)" fg:x="348" fg:w="1"/><text x="10.0198%" y="815.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="9.7698%" y="789" width="0.0281%" height="15" fill="rgb(224,165,40)" fg:x="348" fg:w="1"/><text x="10.0198%" y="799.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::align (1 samples, 0.03%)</title><rect x="9.7698%" y="773" width="0.0281%" height="15" fill="rgb(246,100,4)" fg:x="348" fg:w="1"/><text x="10.0198%" y="783.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="9.7979%" y="869" width="0.0281%" height="15" fill="rgb(222,103,0)" fg:x="349" fg:w="1"/><text x="10.0479%" y="879.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;[(std::path::PathBuf,ggez::error::GameError)]&gt; (1 samples, 0.03%)</title><rect x="9.7979%" y="853" width="0.0281%" height="15" fill="rgb(227,189,26)" fg:x="349" fg:w="1"/><text x="10.0479%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;(std::path::PathBuf,ggez::error::GameError)&gt; (1 samples, 0.03%)</title><rect x="9.7979%" y="837" width="0.0281%" height="15" fill="rgb(214,202,17)" fg:x="349" fg:w="1"/><text x="10.0479%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;ggez::error::GameError&gt; (1 samples, 0.03%)</title><rect x="9.7979%" y="821" width="0.0281%" height="15" fill="rgb(229,111,3)" fg:x="349" fg:w="1"/><text x="10.0479%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::io::error::Error&gt;&gt; (1 samples, 0.03%)</title><rect x="9.7979%" y="805" width="0.0281%" height="15" fill="rgb(229,172,15)" fg:x="349" fg:w="1"/><text x="10.0479%" y="815.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="9.7979%" y="789" width="0.0281%" height="15" fill="rgb(230,224,35)" fg:x="349" fg:w="1"/><text x="10.0479%" y="799.50"></text></g><g><title>rust-sokoban`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.03%)</title><rect x="9.7979%" y="773" width="0.0281%" height="15" fill="rgb(251,141,6)" fg:x="349" fg:w="1"/><text x="10.0479%" y="783.50"></text></g><g><title>rust-sokoban`core::mem::drop (1 samples, 0.03%)</title><rect x="9.7979%" y="757" width="0.0281%" height="15" fill="rgb(225,208,6)" fg:x="349" fg:w="1"/><text x="10.0479%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::io::error::Error&gt;&gt; (1 samples, 0.03%)</title><rect x="9.7979%" y="741" width="0.0281%" height="15" fill="rgb(246,181,16)" fg:x="349" fg:w="1"/><text x="10.0479%" y="751.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="9.7979%" y="725" width="0.0281%" height="15" fill="rgb(227,129,36)" fg:x="349" fg:w="1"/><text x="10.0479%" y="735.50"></text></g><g><title>rust-sokoban`core::mem::align_of_val_raw (1 samples, 0.03%)</title><rect x="9.7979%" y="709" width="0.0281%" height="15" fill="rgb(248,117,24)" fg:x="349" fg:w="1"/><text x="10.0479%" y="719.50"></text></g><g><title>rust-sokoban`ggez::filesystem::Filesystem::open (79 samples, 2.22%)</title><rect x="7.6362%" y="933" width="2.2179%" height="15" fill="rgb(214,185,35)" fg:x="272" fg:w="79"/><text x="7.8862%" y="943.50">r..</text></g><g><title>rust-sokoban`ggez::vfs::VFS::open (76 samples, 2.13%)</title><rect x="7.7204%" y="917" width="2.1336%" height="15" fill="rgb(236,150,34)" fg:x="275" fg:w="76"/><text x="7.9704%" y="927.50">r..</text></g><g><title>rust-sokoban`&lt;ggez::vfs::OverlayFS as ggez::vfs::VFS&gt;::open_options (76 samples, 2.13%)</title><rect x="7.7204%" y="901" width="2.1336%" height="15" fill="rgb(243,228,27)" fg:x="275" fg:w="76"/><text x="7.9704%" y="911.50">r..</text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(std::path::PathBuf,ggez::error::GameError)&gt;&gt; (2 samples, 0.06%)</title><rect x="9.7979%" y="885" width="0.0561%" height="15" fill="rgb(245,77,44)" fg:x="349" fg:w="2"/><text x="10.0479%" y="895.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(std::path::PathBuf,ggez::error::GameError)&gt;&gt; (1 samples, 0.03%)</title><rect x="9.8259%" y="869" width="0.0281%" height="15" fill="rgb(235,214,42)" fg:x="350" fg:w="1"/><text x="10.0759%" y="879.50"></text></g><g><title>rust-sokoban`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="9.8259%" y="853" width="0.0281%" height="15" fill="rgb(221,74,3)" fg:x="350" fg:w="1"/><text x="10.0759%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="9.8259%" y="837" width="0.0281%" height="15" fill="rgb(206,121,29)" fg:x="350" fg:w="1"/><text x="10.0759%" y="847.50"></text></g><g><title>rust-sokoban`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="9.8259%" y="821" width="0.0281%" height="15" fill="rgb(249,131,53)" fg:x="350" fg:w="1"/><text x="10.0759%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="9.8259%" y="805" width="0.0281%" height="15" fill="rgb(236,170,29)" fg:x="350" fg:w="1"/><text x="10.0759%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;image::buffer_::ImageBuffer&lt;image::color::Rgba&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="9.8821%" y="901" width="0.0281%" height="15" fill="rgb(247,96,15)" fg:x="352" fg:w="1"/><text x="10.1321%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="9.8821%" y="885" width="0.0281%" height="15" fill="rgb(211,210,7)" fg:x="352" fg:w="1"/><text x="10.1321%" y="895.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="9.8821%" y="869" width="0.0281%" height="15" fill="rgb(240,88,50)" fg:x="352" fg:w="1"/><text x="10.1321%" y="879.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="9.8821%" y="853" width="0.0281%" height="15" fill="rgb(209,229,26)" fg:x="352" fg:w="1"/><text x="10.1321%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="9.8821%" y="837" width="0.0281%" height="15" fill="rgb(210,68,23)" fg:x="352" fg:w="1"/><text x="10.1321%" y="847.50"></text></g><g><title>rust-sokoban`gfx_core::texture::Info::to_raw_image_info (1 samples, 0.03%)</title><rect x="9.9663%" y="837" width="0.0281%" height="15" fill="rgb(229,180,13)" fg:x="355" fg:w="1"/><text x="10.2163%" y="847.50"></text></g><g><title>rust-sokoban`gfx_core::texture::Info::to_image_info (1 samples, 0.03%)</title><rect x="9.9663%" y="821" width="0.0281%" height="15" fill="rgb(236,53,44)" fg:x="355" fg:w="1"/><text x="10.2163%" y="831.50"></text></g><g><title>rust-sokoban`gfx_core::texture::Kind::get_level_dimensions (1 samples, 0.03%)</title><rect x="9.9663%" y="805" width="0.0281%" height="15" fill="rgb(244,214,29)" fg:x="355" fg:w="1"/><text x="10.2163%" y="815.50"></text></g><g><title>rust-sokoban`gfx_core::texture::Kind::get_level_dimensions::_{{closure}} (1 samples, 0.03%)</title><rect x="9.9663%" y="789" width="0.0281%" height="15" fill="rgb(220,75,29)" fg:x="355" fg:w="1"/><text x="10.2163%" y="799.50"></text></g><g><title>rust-sokoban`core::cmp::min (1 samples, 0.03%)</title><rect x="9.9663%" y="773" width="0.0281%" height="15" fill="rgb(214,183,37)" fg:x="355" fg:w="1"/><text x="10.2163%" y="783.50"></text></g><g><title>rust-sokoban`core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="9.9663%" y="757" width="0.0281%" height="15" fill="rgb(239,117,29)" fg:x="355" fg:w="1"/><text x="10.2163%" y="767.50"></text></g><g><title>rust-sokoban`core::cmp::min_by (1 samples, 0.03%)</title><rect x="9.9663%" y="741" width="0.0281%" height="15" fill="rgb(237,171,35)" fg:x="355" fg:w="1"/><text x="10.2163%" y="751.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::format_to_glpixel (1 samples, 0.03%)</title><rect x="9.9944%" y="837" width="0.0281%" height="15" fill="rgb(229,178,53)" fg:x="356" fg:w="1"/><text x="10.2444%" y="847.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::load (1 samples, 0.03%)</title><rect x="10.0225%" y="741" width="0.0281%" height="15" fill="rgb(210,102,19)" fg:x="357" fg:w="1"/><text x="10.2725%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea4f84 (1 samples, 0.03%)</title><rect x="10.0786%" y="725" width="0.0281%" height="15" fill="rgb(235,127,22)" fg:x="359" fg:w="1"/><text x="10.3286%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea06c8 (1 samples, 0.03%)</title><rect x="10.1067%" y="709" width="0.0281%" height="15" fill="rgb(244,31,31)" fg:x="360" fg:w="1"/><text x="10.3567%" y="719.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea2394 (1 samples, 0.03%)</title><rect x="10.1348%" y="661" width="0.0281%" height="15" fill="rgb(231,43,21)" fg:x="361" fg:w="1"/><text x="10.3848%" y="671.50"></text></g><g><title>AGXMetalG13X`0x00000001d4062e68 (2 samples, 0.06%)</title><rect x="10.1348%" y="709" width="0.0561%" height="15" fill="rgb(217,131,35)" fg:x="361" fg:w="2"/><text x="10.3848%" y="719.50"></text></g><g><title>AGXMetalG13X`0x00000001d405f6e8 (2 samples, 0.06%)</title><rect x="10.1348%" y="693" width="0.0561%" height="15" fill="rgb(221,149,4)" fg:x="361" fg:w="2"/><text x="10.3848%" y="703.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea55f4 (2 samples, 0.06%)</title><rect x="10.1348%" y="677" width="0.0561%" height="15" fill="rgb(232,170,28)" fg:x="361" fg:w="2"/><text x="10.3848%" y="687.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea35a4 (1 samples, 0.03%)</title><rect x="10.1628%" y="661" width="0.0281%" height="15" fill="rgb(238,56,10)" fg:x="362" fg:w="1"/><text x="10.4128%" y="671.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d6d740 (2 samples, 0.06%)</title><rect x="10.1909%" y="661" width="0.0561%" height="15" fill="rgb(235,196,14)" fg:x="363" fg:w="2"/><text x="10.4409%" y="671.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d6d8b8 (2 samples, 0.06%)</title><rect x="10.1909%" y="645" width="0.0561%" height="15" fill="rgb(216,45,48)" fg:x="363" fg:w="2"/><text x="10.4409%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (2 samples, 0.06%)</title><rect x="10.1909%" y="629" width="0.0561%" height="15" fill="rgb(238,213,17)" fg:x="363" fg:w="2"/><text x="10.4409%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (2 samples, 0.06%)</title><rect x="10.1909%" y="613" width="0.0561%" height="15" fill="rgb(212,13,2)" fg:x="363" fg:w="2"/><text x="10.4409%" y="623.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (2 samples, 0.06%)</title><rect x="10.1909%" y="597" width="0.0561%" height="15" fill="rgb(240,114,20)" fg:x="363" fg:w="2"/><text x="10.4409%" y="607.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.06%)</title><rect x="10.1909%" y="581" width="0.0561%" height="15" fill="rgb(228,41,40)" fg:x="363" fg:w="2"/><text x="10.4409%" y="591.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.06%)</title><rect x="10.1909%" y="565" width="0.0561%" height="15" fill="rgb(244,132,35)" fg:x="363" fg:w="2"/><text x="10.4409%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.06%)</title><rect x="10.1909%" y="549" width="0.0561%" height="15" fill="rgb(253,189,4)" fg:x="363" fg:w="2"/><text x="10.4409%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (3 samples, 0.08%)</title><rect x="10.1909%" y="693" width="0.0842%" height="15" fill="rgb(224,37,19)" fg:x="363" fg:w="3"/><text x="10.4409%" y="703.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorAllocate (3 samples, 0.08%)</title><rect x="10.1909%" y="677" width="0.0842%" height="15" fill="rgb(235,223,18)" fg:x="363" fg:w="3"/><text x="10.4409%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (1 samples, 0.03%)</title><rect x="10.2471%" y="661" width="0.0281%" height="15" fill="rgb(235,163,25)" fg:x="365" fg:w="1"/><text x="10.4971%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:] (4 samples, 0.11%)</title><rect x="10.1909%" y="709" width="0.1123%" height="15" fill="rgb(217,145,28)" fg:x="363" fg:w="4"/><text x="10.4409%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="10.2751%" y="693" width="0.0281%" height="15" fill="rgb(223,223,32)" fg:x="366" fg:w="1"/><text x="10.5251%" y="703.50"></text></g><g><title>IOKit`IOConnectCallMethod (11 samples, 0.31%)</title><rect x="10.3032%" y="645" width="0.3088%" height="15" fill="rgb(227,189,39)" fg:x="367" fg:w="11"/><text x="10.5532%" y="655.50"></text></g><g><title>IOKit`io_connect_method (11 samples, 0.31%)</title><rect x="10.3032%" y="629" width="0.3088%" height="15" fill="rgb(248,10,22)" fg:x="367" fg:w="11"/><text x="10.5532%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (11 samples, 0.31%)</title><rect x="10.3032%" y="613" width="0.3088%" height="15" fill="rgb(248,46,39)" fg:x="367" fg:w="11"/><text x="10.5532%" y="623.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (12 samples, 0.34%)</title><rect x="10.3032%" y="661" width="0.3369%" height="15" fill="rgb(248,113,48)" fg:x="367" fg:w="12"/><text x="10.5532%" y="671.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.03%)</title><rect x="10.6120%" y="645" width="0.0281%" height="15" fill="rgb(245,16,25)" fg:x="378" fg:w="1"/><text x="10.8620%" y="655.50"></text></g><g><title>libobjc.A.dylib`callSetWeaklyReferenced(objc_object*) (1 samples, 0.03%)</title><rect x="10.6401%" y="661" width="0.0281%" height="15" fill="rgb(249,152,16)" fg:x="379" fg:w="1"/><text x="10.8901%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:descriptor:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (14 samples, 0.39%)</title><rect x="10.3032%" y="709" width="0.3930%" height="15" fill="rgb(250,16,1)" fg:x="367" fg:w="14"/><text x="10.5532%" y="719.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithBuffer:descriptor:sysMemOffset:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:isStrideTexture:] (14 samples, 0.39%)</title><rect x="10.3032%" y="693" width="0.3930%" height="15" fill="rgb(249,138,3)" fg:x="367" fg:w="14"/><text x="10.5532%" y="703.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (14 samples, 0.39%)</title><rect x="10.3032%" y="677" width="0.3930%" height="15" fill="rgb(227,71,41)" fg:x="367" fg:w="14"/><text x="10.5532%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (1 samples, 0.03%)</title><rect x="10.6682%" y="661" width="0.0281%" height="15" fill="rgb(209,184,23)" fg:x="380" fg:w="1"/><text x="10.9182%" y="671.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (1 samples, 0.03%)</title><rect x="10.6682%" y="645" width="0.0281%" height="15" fill="rgb(223,215,31)" fg:x="380" fg:w="1"/><text x="10.9182%" y="655.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (1 samples, 0.03%)</title><rect x="10.6682%" y="629" width="0.0281%" height="15" fill="rgb(210,146,28)" fg:x="380" fg:w="1"/><text x="10.9182%" y="639.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal validateWithDevice:] (1 samples, 0.03%)</title><rect x="10.6962%" y="709" width="0.0281%" height="15" fill="rgb(209,183,41)" fg:x="381" fg:w="1"/><text x="10.9462%" y="719.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (1 samples, 0.03%)</title><rect x="10.6962%" y="693" width="0.0281%" height="15" fill="rgb(209,224,45)" fg:x="381" fg:w="1"/><text x="10.9462%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="10.6962%" y="677" width="0.0281%" height="15" fill="rgb(224,209,51)" fg:x="381" fg:w="1"/><text x="10.9462%" y="687.50"></text></g><g><title>Metal`-[_MTLDevice maxTextureWidth2D] (1 samples, 0.03%)</title><rect x="10.7243%" y="709" width="0.0281%" height="15" fill="rgb(223,17,39)" fg:x="382" fg:w="1"/><text x="10.9743%" y="719.50"></text></g><g><title>Metal`_MTLMessageContextBegin_ (1 samples, 0.03%)</title><rect x="10.7524%" y="709" width="0.0281%" height="15" fill="rgb(234,204,37)" fg:x="383" fg:w="1"/><text x="11.0024%" y="719.50"></text></g><g><title>AGXMetalG13X`0x00000001d407196c (25 samples, 0.70%)</title><rect x="10.1067%" y="725" width="0.7019%" height="15" fill="rgb(236,120,5)" fg:x="360" fg:w="25"/><text x="10.3567%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="10.7805%" y="709" width="0.0281%" height="15" fill="rgb(248,97,27)" fg:x="384" fg:w="1"/><text x="11.0305%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::isValidTexture (1 samples, 0.03%)</title><rect x="10.8085%" y="725" width="0.0281%" height="15" fill="rgb(240,66,17)" fg:x="385" fg:w="1"/><text x="11.0585%" y="735.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (1 samples, 0.03%)</title><rect x="10.8085%" y="709" width="0.0281%" height="15" fill="rgb(210,79,3)" fg:x="385" fg:w="1"/><text x="11.0585%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="10.8085%" y="693" width="0.0281%" height="15" fill="rgb(214,176,27)" fg:x="385" fg:w="1"/><text x="11.0585%" y="703.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::loadObj (29 samples, 0.81%)</title><rect x="10.0505%" y="741" width="0.8141%" height="15" fill="rgb(235,185,3)" fg:x="358" fg:w="29"/><text x="10.3005%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc_opt_new (1 samples, 0.03%)</title><rect x="10.8366%" y="725" width="0.0281%" height="15" fill="rgb(227,24,12)" fg:x="386" fg:w="1"/><text x="11.0866%" y="735.50"></text></g><g><title>Metal`+[MTLTextureDescriptor allocWithZone:] (1 samples, 0.03%)</title><rect x="10.8366%" y="709" width="0.0281%" height="15" fill="rgb(252,169,48)" fg:x="386" fg:w="1"/><text x="11.0866%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void (1 samples, 0.03%)</title><rect x="10.8647%" y="741" width="0.0281%" height="15" fill="rgb(212,65,1)" fg:x="387" fg:w="1"/><text x="11.1147%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`DYLD-STUB$$objc_msgSend (1 samples, 0.03%)</title><rect x="10.8928%" y="725" width="0.0281%" height="15" fill="rgb(242,39,24)" fg:x="388" fg:w="1"/><text x="11.1428%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (7 samples, 0.20%)</title><rect x="10.8928%" y="741" width="0.1965%" height="15" fill="rgb(249,32,23)" fg:x="388" fg:w="7"/><text x="11.1428%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (6 samples, 0.17%)</title><rect x="10.9208%" y="725" width="0.1684%" height="15" fill="rgb(251,195,23)" fg:x="389" fg:w="6"/><text x="11.1708%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea61fc (6 samples, 0.17%)</title><rect x="10.9208%" y="709" width="0.1684%" height="15" fill="rgb(236,174,8)" fg:x="389" fg:w="6"/><text x="11.1708%" y="719.50"></text></g><g><title>AGXMetalG13X`0x00000001d3eeb204 (6 samples, 0.17%)</title><rect x="10.9208%" y="693" width="0.1684%" height="15" fill="rgb(220,197,8)" fg:x="389" fg:w="6"/><text x="11.1708%" y="703.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (1 samples, 0.03%)</title><rect x="11.0893%" y="741" width="0.0281%" height="15" fill="rgb(240,108,37)" fg:x="395" fg:w="1"/><text x="11.3393%" y="751.50"></text></g><g><title>Metal`MTLPixelFormatQuery::supportsFamily (1 samples, 0.03%)</title><rect x="11.0893%" y="725" width="0.0281%" height="15" fill="rgb(232,176,24)" fg:x="395" fg:w="1"/><text x="11.3393%" y="735.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::init_texture_data (42 samples, 1.18%)</title><rect x="9.9663%" y="853" width="1.1791%" height="15" fill="rgb(243,35,29)" fg:x="355" fg:w="42"/><text x="10.2163%" y="863.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::update_texture (40 samples, 1.12%)</title><rect x="10.0225%" y="837" width="1.1230%" height="15" fill="rgb(210,37,18)" fg:x="357" fg:w="40"/><text x="10.2725%" y="847.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::tex_sub_image (40 samples, 1.12%)</title><rect x="10.0225%" y="821" width="1.1230%" height="15" fill="rgb(224,184,40)" fg:x="357" fg:w="40"/><text x="10.2725%" y="831.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::TexSubImage2D (40 samples, 1.12%)</title><rect x="10.0225%" y="805" width="1.1230%" height="15" fill="rgb(236,39,29)" fg:x="357" fg:w="40"/><text x="10.2725%" y="815.50"></text></g><g><title>libGL.dylib`glTexSubImage2D (40 samples, 1.12%)</title><rect x="10.0225%" y="789" width="1.1230%" height="15" fill="rgb(232,48,39)" fg:x="357" fg:w="40"/><text x="10.2725%" y="799.50"></text></g><g><title>GLEngine`glTexSubImage2D_Exec (40 samples, 1.12%)</title><rect x="10.0225%" y="773" width="1.1230%" height="15" fill="rgb(236,34,42)" fg:x="357" fg:w="40"/><text x="10.2725%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldModifyTexSubImage (40 samples, 1.12%)</title><rect x="10.0225%" y="757" width="1.1230%" height="15" fill="rgb(243,106,37)" fg:x="357" fg:w="40"/><text x="10.2725%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="11.1173%" y="741" width="0.0281%" height="15" fill="rgb(218,96,6)" fg:x="396" fg:w="1"/><text x="11.3673%" y="751.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::make_texture (1 samples, 0.03%)</title><rect x="11.1454%" y="821" width="0.0281%" height="15" fill="rgb(235,130,12)" fg:x="397" fg:w="1"/><text x="11.3954%" y="831.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::GenTextures (1 samples, 0.03%)</title><rect x="11.1454%" y="805" width="0.0281%" height="15" fill="rgb(231,95,0)" fg:x="397" fg:w="1"/><text x="11.3954%" y="815.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::make_with_storage_impl::mip_level2 (1 samples, 0.03%)</title><rect x="11.1735%" y="821" width="0.0281%" height="15" fill="rgb(228,12,23)" fg:x="398" fg:w="1"/><text x="11.4235%" y="831.50"></text></g><g><title>rust-sokoban`core::cmp::max (1 samples, 0.03%)</title><rect x="11.1735%" y="805" width="0.0281%" height="15" fill="rgb(216,12,1)" fg:x="398" fg:w="1"/><text x="11.4235%" y="815.50"></text></g><g><title>rust-sokoban`core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="11.1735%" y="789" width="0.0281%" height="15" fill="rgb(219,59,3)" fg:x="398" fg:w="1"/><text x="11.4235%" y="799.50"></text></g><g><title>rust-sokoban`core::cmp::max_by (1 samples, 0.03%)</title><rect x="11.1735%" y="773" width="0.0281%" height="15" fill="rgb(215,208,46)" fg:x="398" fg:w="1"/><text x="11.4235%" y="783.50"></text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::Ord for u16&gt;::cmp (1 samples, 0.03%)</title><rect x="11.1735%" y="757" width="0.0281%" height="15" fill="rgb(254,224,29)" fg:x="398" fg:w="1"/><text x="11.4235%" y="767.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_texture_raw (45 samples, 1.26%)</title><rect x="9.9663%" y="869" width="1.2633%" height="15" fill="rgb(232,14,29)" fg:x="355" fg:w="45"/><text x="10.2163%" y="879.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::make_with_storage (3 samples, 0.08%)</title><rect x="11.1454%" y="853" width="0.0842%" height="15" fill="rgb(208,45,52)" fg:x="397" fg:w="3"/><text x="11.3954%" y="863.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::make_with_storage_impl (3 samples, 0.08%)</title><rect x="11.1454%" y="837" width="0.0842%" height="15" fill="rgb(234,191,28)" fg:x="397" fg:w="3"/><text x="11.3954%" y="847.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::TexStorage2D (1 samples, 0.03%)</title><rect x="11.2016%" y="821" width="0.0281%" height="15" fill="rgb(244,67,43)" fg:x="399" fg:w="1"/><text x="11.4516%" y="831.50"></text></g><g><title>GLEngine`glTexStorage2D_Exec (1 samples, 0.03%)</title><rect x="11.2016%" y="805" width="0.0281%" height="15" fill="rgb(236,189,24)" fg:x="399" fg:w="1"/><text x="11.4516%" y="815.50"></text></g><g><title>libGFXShared.dylib`gfxSynchronizeTexLevelStorage (1 samples, 0.03%)</title><rect x="11.2016%" y="789" width="0.0281%" height="15" fill="rgb(239,214,33)" fg:x="399" fg:w="1"/><text x="11.4516%" y="799.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_rgba_image (50 samples, 1.40%)</title><rect x="9.8540%" y="917" width="1.4037%" height="15" fill="rgb(226,176,41)" fg:x="351" fg:w="50"/><text x="10.1040%" y="927.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_rgba8 (48 samples, 1.35%)</title><rect x="9.9102%" y="901" width="1.3476%" height="15" fill="rgb(248,47,8)" fg:x="353" fg:w="48"/><text x="10.1602%" y="911.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;B&gt;::make_raw (48 samples, 1.35%)</title><rect x="9.9102%" y="885" width="1.3476%" height="15" fill="rgb(218,81,44)" fg:x="353" fg:w="48"/><text x="10.1602%" y="895.50"></text></g><g><title>rust-sokoban`gfx_core::memory::Bind::intersects (1 samples, 0.03%)</title><rect x="11.2296%" y="869" width="0.0281%" height="15" fill="rgb(213,98,6)" fg:x="400" fg:w="1"/><text x="11.4796%" y="879.50"></text></g><g><title>rust-sokoban`&lt;A as image::color::FromColor&lt;A&gt;&gt;::from_color (3 samples, 0.08%)</title><rect x="11.2577%" y="901" width="0.0842%" height="15" fill="rgb(222,85,22)" fg:x="401" fg:w="3"/><text x="11.5077%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (7 samples, 0.20%)</title><rect x="16.2830%" y="757" width="0.1965%" height="15" fill="rgb(239,46,39)" fg:x="580" fg:w="7"/><text x="16.5330%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (39 samples, 1.09%)</title><rect x="15.5811%" y="773" width="1.0949%" height="15" fill="rgb(237,12,29)" fg:x="555" fg:w="39"/><text x="15.8311%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (7 samples, 0.20%)</title><rect x="16.4795%" y="757" width="0.1965%" height="15" fill="rgb(214,77,8)" fg:x="587" fg:w="7"/><text x="16.7295%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (6 samples, 0.17%)</title><rect x="16.6760%" y="773" width="0.1684%" height="15" fill="rgb(217,168,37)" fg:x="594" fg:w="6"/><text x="16.9260%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::len (9 samples, 0.25%)</title><rect x="16.8445%" y="773" width="0.2527%" height="15" fill="rgb(221,217,23)" fg:x="600" fg:w="9"/><text x="17.0945%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (102 samples, 2.86%)</title><rect x="14.5424%" y="789" width="2.8636%" height="15" fill="rgb(243,229,36)" fg:x="518" fg:w="102"/><text x="14.7924%" y="799.50">ru..</text></g><g><title>rust-sokoban`core::ptr::metadata::metadata (11 samples, 0.31%)</title><rect x="17.0971%" y="773" width="0.3088%" height="15" fill="rgb(251,163,40)" fg:x="609" fg:w="11"/><text x="17.3471%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (28 samples, 0.79%)</title><rect x="18.5851%" y="757" width="0.7861%" height="15" fill="rgb(237,222,12)" fg:x="662" fg:w="28"/><text x="18.8351%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (62 samples, 1.74%)</title><rect x="17.9113%" y="773" width="1.7406%" height="15" fill="rgb(248,132,6)" fg:x="638" fg:w="62"/><text x="18.1613%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (10 samples, 0.28%)</title><rect x="19.3711%" y="757" width="0.2807%" height="15" fill="rgb(227,167,50)" fg:x="690" fg:w="10"/><text x="19.6211%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (268 samples, 7.52%)</title><rect x="12.2684%" y="853" width="7.5239%" height="15" fill="rgb(242,84,37)" fg:x="437" fg:w="268"/><text x="12.5184%" y="863.50">rust-sokob..</text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (248 samples, 6.96%)</title><rect x="12.8299%" y="837" width="6.9624%" height="15" fill="rgb(212,4,50)" fg:x="457" fg:w="248"/><text x="13.0799%" y="847.50">rust-soko..</text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (233 samples, 6.54%)</title><rect x="13.2510%" y="821" width="6.5413%" height="15" fill="rgb(230,228,32)" fg:x="472" fg:w="233"/><text x="13.5010%" y="831.50">rust-soko..</text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (213 samples, 5.98%)</title><rect x="13.8125%" y="805" width="5.9798%" height="15" fill="rgb(248,217,23)" fg:x="492" fg:w="213"/><text x="14.0625%" y="815.50">rust-sok..</text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (85 samples, 2.39%)</title><rect x="17.4060%" y="789" width="2.3863%" height="15" fill="rgb(238,197,32)" fg:x="620" fg:w="85"/><text x="17.6560%" y="799.50">ru..</text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (5 samples, 0.14%)</title><rect x="19.6519%" y="773" width="0.1404%" height="15" fill="rgb(236,106,1)" fg:x="700" fg:w="5"/><text x="19.9019%" y="783.50"></text></g><g><title>rust-sokoban`core::mem::replace (9 samples, 0.25%)</title><rect x="20.5222%" y="837" width="0.2527%" height="15" fill="rgb(219,228,13)" fg:x="731" fg:w="9"/><text x="20.7722%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::read (76 samples, 2.13%)</title><rect x="20.7748%" y="837" width="2.1336%" height="15" fill="rgb(238,30,35)" fg:x="740" fg:w="76"/><text x="21.0248%" y="847.50">r..</text></g><g><title>rust-sokoban`core::ptr::write (5 samples, 0.14%)</title><rect x="22.9085%" y="837" width="0.1404%" height="15" fill="rgb(236,70,23)" fg:x="816" fg:w="5"/><text x="23.1585%" y="847.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="23.4700%" y="821" width="0.0281%" height="15" fill="rgb(249,104,48)" fg:x="836" fg:w="1"/><text x="23.7200%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts_mut (32 samples, 0.90%)</title><rect x="24.5929%" y="789" width="0.8984%" height="15" fill="rgb(254,117,50)" fg:x="876" fg:w="32"/><text x="24.8429%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (243 samples, 6.82%)</title><rect x="19.7923%" y="853" width="6.8220%" height="15" fill="rgb(223,152,4)" fg:x="705" fg:w="243"/><text x="20.0423%" y="863.50">rust-soko..</text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (127 samples, 3.57%)</title><rect x="23.0488%" y="837" width="3.5654%" height="15" fill="rgb(245,6,2)" fg:x="821" fg:w="127"/><text x="23.2988%" y="847.50">rust..</text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (111 samples, 3.12%)</title><rect x="23.4980%" y="821" width="3.1162%" height="15" fill="rgb(249,150,24)" fg:x="837" fg:w="111"/><text x="23.7480%" y="831.50">rus..</text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (80 samples, 2.25%)</title><rect x="24.3683%" y="805" width="2.2459%" height="15" fill="rgb(228,185,42)" fg:x="868" fg:w="80"/><text x="24.6183%" y="815.50">r..</text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (40 samples, 1.12%)</title><rect x="25.4913%" y="789" width="1.1230%" height="15" fill="rgb(226,39,33)" fg:x="908" fg:w="40"/><text x="25.7413%" y="799.50"></text></g><g><title>rust-sokoban`&lt;image::color::Rgba&lt;T&gt; as image::traits::Pixel&gt;::from_slice (18 samples, 0.51%)</title><rect x="27.9618%" y="821" width="0.5053%" height="15" fill="rgb(221,166,19)" fg:x="996" fg:w="18"/><text x="28.2118%" y="831.50"></text></g><g><title>rust-sokoban`&lt;image::buffer_::Pixels&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (28 samples, 0.79%)</title><rect x="27.7092%" y="837" width="0.7861%" height="15" fill="rgb(209,109,2)" fg:x="987" fg:w="28"/><text x="27.9592%" y="847.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="28.4672%" y="821" width="0.0281%" height="15" fill="rgb(252,216,26)" fg:x="1014" fg:w="1"/><text x="28.7172%" y="831.50"></text></g><g><title>rust-sokoban`&lt;image::buffer_::PixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (28 samples, 0.79%)</title><rect x="28.4952%" y="837" width="0.7861%" height="15" fill="rgb(227,173,36)" fg:x="1015" fg:w="28"/><text x="28.7452%" y="847.50"></text></g><g><title>rust-sokoban`&lt;image::color::Rgba&lt;T&gt; as image::traits::Pixel&gt;::from_slice_mut (23 samples, 0.65%)</title><rect x="28.6356%" y="821" width="0.6457%" height="15" fill="rgb(209,90,7)" fg:x="1020" fg:w="23"/><text x="28.8856%" y="831.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::map (96 samples, 2.70%)</title><rect x="26.6143%" y="853" width="2.6951%" height="15" fill="rgb(250,194,11)" fg:x="948" fg:w="96"/><text x="26.8643%" y="863.50">ru..</text></g><g><title>rust-sokoban`&lt;image::color::Rgba&lt;T&gt; as image::traits::Pixel&gt;::from_slice_mut (1 samples, 0.03%)</title><rect x="29.2813%" y="837" width="0.0281%" height="15" fill="rgb(220,72,50)" fg:x="1043" fg:w="1"/><text x="29.5313%" y="847.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (622 samples, 17.46%)</title><rect x="11.8754%" y="869" width="17.4621%" height="15" fill="rgb(222,106,48)" fg:x="423" fg:w="622"/><text x="12.1254%" y="879.50">rust-sokoban`&lt;core::iter::a..</text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="29.3094%" y="853" width="0.0281%" height="15" fill="rgb(216,220,45)" fg:x="1044" fg:w="1"/><text x="29.5594%" y="863.50"></text></g><g><title>rust-sokoban`&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.14%)</title><rect x="29.3375%" y="869" width="0.1404%" height="15" fill="rgb(234,112,18)" fg:x="1045" fg:w="5"/><text x="29.5875%" y="879.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (635 samples, 17.83%)</title><rect x="11.6788%" y="885" width="17.8271%" height="15" fill="rgb(206,179,9)" fg:x="416" fg:w="635"/><text x="11.9288%" y="895.50">rust-sokoban`&lt;core::iter::ad..</text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="29.4778%" y="869" width="0.0281%" height="15" fill="rgb(215,115,40)" fg:x="1050" fg:w="1"/><text x="29.7278%" y="879.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="29.5059%" y="885" width="0.0281%" height="15" fill="rgb(222,69,34)" fg:x="1051" fg:w="1"/><text x="29.7559%" y="895.50"></text></g><g><title>rust-sokoban`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.03%)</title><rect x="29.5059%" y="869" width="0.0281%" height="15" fill="rgb(209,161,10)" fg:x="1051" fg:w="1"/><text x="29.7559%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="29.5059%" y="853" width="0.0281%" height="15" fill="rgb(217,6,38)" fg:x="1051" fg:w="1"/><text x="29.7559%" y="863.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::chunks_exact (1 samples, 0.03%)</title><rect x="29.5340%" y="869" width="0.0281%" height="15" fill="rgb(229,229,48)" fg:x="1052" fg:w="1"/><text x="29.7840%" y="879.50"></text></g><g><title>rust-sokoban`core::slice::iter::ChunksExact&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="29.5340%" y="853" width="0.0281%" height="15" fill="rgb(225,21,28)" fg:x="1052" fg:w="1"/><text x="29.7840%" y="863.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="29.5340%" y="837" width="0.0281%" height="15" fill="rgb(206,33,13)" fg:x="1052" fg:w="1"/><text x="29.7840%" y="847.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.5340%" y="821" width="0.0281%" height="15" fill="rgb(242,178,17)" fg:x="1052" fg:w="1"/><text x="29.7840%" y="831.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.5340%" y="805" width="0.0281%" height="15" fill="rgb(220,162,5)" fg:x="1052" fg:w="1"/><text x="29.7840%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.5340%" y="789" width="0.0281%" height="15" fill="rgb(210,33,43)" fg:x="1052" fg:w="1"/><text x="29.7840%" y="799.50"></text></g><g><title>rust-sokoban`image::buffer_::ImageBuffer&lt;P,Container&gt;::pixels (2 samples, 0.06%)</title><rect x="29.5340%" y="885" width="0.0561%" height="15" fill="rgb(216,116,54)" fg:x="1052" fg:w="2"/><text x="29.7840%" y="895.50"></text></g><g><title>rust-sokoban`image::buffer_::ImageBuffer&lt;P,Container&gt;::inner_pixels (1 samples, 0.03%)</title><rect x="29.5620%" y="869" width="0.0281%" height="15" fill="rgb(249,92,24)" fg:x="1053" fg:w="1"/><text x="29.8120%" y="879.50"></text></g><g><title>rust-sokoban`image::buffer_::ImageBuffer&lt;P,Container&gt;::image_buffer_len (1 samples, 0.03%)</title><rect x="29.5620%" y="853" width="0.0281%" height="15" fill="rgb(231,189,14)" fg:x="1053" fg:w="1"/><text x="29.8120%" y="863.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="29.5620%" y="837" width="0.0281%" height="15" fill="rgb(230,8,41)" fg:x="1053" fg:w="1"/><text x="29.8120%" y="847.50"></text></g><g><title>rust-sokoban`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.03%)</title><rect x="29.5620%" y="821" width="0.0281%" height="15" fill="rgb(249,7,27)" fg:x="1053" fg:w="1"/><text x="29.8120%" y="831.50"></text></g><g><title>rust-sokoban`image::dynimage::DynamicImage::to_rgba8 (654 samples, 18.36%)</title><rect x="11.2577%" y="917" width="18.3605%" height="15" fill="rgb(232,86,5)" fg:x="401" fg:w="654"/><text x="11.5077%" y="927.50">rust-sokoban`image::dynimage:..</text></g><g><title>rust-sokoban`&lt;image::buffer_::ImageBuffer&lt;FromType,Container&gt; as image::buffer_::ConvertBuffer&lt;image::buffer_::ImageBuffer&lt;ToType,alloc::vec::Vec&lt;&lt;ToType as image::traits::Pixel&gt;::Subpixel&gt;&gt;&gt;&gt;::convert (651 samples, 18.28%)</title><rect x="11.3419%" y="901" width="18.2762%" height="15" fill="rgb(224,175,18)" fg:x="404" fg:w="651"/><text x="11.5919%" y="911.50">rust-sokoban`&lt;image::buffer_..</text></g><g><title>rust-sokoban`image::buffer_::ImageBuffer&lt;P,alloc::vec::Vec&lt;&lt;P as image::traits::Pixel&gt;::Subpixel&gt;&gt;::new (1 samples, 0.03%)</title><rect x="29.5901%" y="885" width="0.0281%" height="15" fill="rgb(220,129,12)" fg:x="1054" fg:w="1"/><text x="29.8401%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="29.6182%" y="885" width="0.0281%" height="15" fill="rgb(210,19,36)" fg:x="1055" fg:w="1"/><text x="29.8682%" y="895.50"></text></g><g><title>rust-sokoban`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="29.6463%" y="885" width="0.0281%" height="15" fill="rgb(219,96,14)" fg:x="1056" fg:w="1"/><text x="29.8963%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="29.6743%" y="869" width="0.0281%" height="15" fill="rgb(249,106,1)" fg:x="1057" fg:w="1"/><text x="29.9243%" y="879.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="29.7024%" y="869" width="0.0281%" height="15" fill="rgb(249,155,20)" fg:x="1058" fg:w="1"/><text x="29.9524%" y="879.50"></text></g><g><title>rust-sokoban`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.03%)</title><rect x="29.7305%" y="869" width="0.0281%" height="15" fill="rgb(244,168,9)" fg:x="1059" fg:w="1"/><text x="29.9805%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="29.7866%" y="853" width="0.0281%" height="15" fill="rgb(216,23,50)" fg:x="1061" fg:w="1"/><text x="30.0366%" y="863.50"></text></g><g><title>rust-sokoban`std::io::cursor::Cursor&lt;T&gt;::remaining_slice (1 samples, 0.03%)</title><rect x="29.8428%" y="805" width="0.0281%" height="15" fill="rgb(224,219,20)" fg:x="1063" fg:w="1"/><text x="30.0928%" y="815.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="29.8428%" y="789" width="0.0281%" height="15" fill="rgb(222,156,15)" fg:x="1063" fg:w="1"/><text x="30.0928%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="29.8428%" y="773" width="0.0281%" height="15" fill="rgb(231,97,17)" fg:x="1063" fg:w="1"/><text x="30.0928%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.8428%" y="757" width="0.0281%" height="15" fill="rgb(218,70,48)" fg:x="1063" fg:w="1"/><text x="30.0928%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.8428%" y="741" width="0.0281%" height="15" fill="rgb(212,196,52)" fg:x="1063" fg:w="1"/><text x="30.0928%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="29.8428%" y="725" width="0.0281%" height="15" fill="rgb(243,203,18)" fg:x="1063" fg:w="1"/><text x="30.0928%" y="735.50"></text></g><g><title>rust-sokoban`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.06%)</title><rect x="29.8428%" y="837" width="0.0561%" height="15" fill="rgb(252,125,41)" fg:x="1063" fg:w="2"/><text x="30.0928%" y="847.50"></text></g><g><title>rust-sokoban`&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (2 samples, 0.06%)</title><rect x="29.8428%" y="821" width="0.0561%" height="15" fill="rgb(223,180,33)" fg:x="1063" fg:w="2"/><text x="30.0928%" y="831.50"></text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Read for &amp;[u8]&gt;::read (1 samples, 0.03%)</title><rect x="29.8709%" y="805" width="0.0281%" height="15" fill="rgb(254,159,46)" fg:x="1064" fg:w="1"/><text x="30.1209%" y="815.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="29.8709%" y="789" width="0.0281%" height="15" fill="rgb(254,38,10)" fg:x="1064" fg:w="1"/><text x="30.1209%" y="799.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="29.8709%" y="773" width="0.0281%" height="15" fill="rgb(208,217,32)" fg:x="1064" fg:w="1"/><text x="30.1209%" y="783.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.8709%" y="757" width="0.0281%" height="15" fill="rgb(221,120,13)" fg:x="1064" fg:w="1"/><text x="30.1209%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.8709%" y="741" width="0.0281%" height="15" fill="rgb(246,54,52)" fg:x="1064" fg:w="1"/><text x="30.1209%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="29.8709%" y="725" width="0.0281%" height="15" fill="rgb(242,34,25)" fg:x="1064" fg:w="1"/><text x="30.1209%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="29.8989%" y="821" width="0.0281%" height="15" fill="rgb(247,209,9)" fg:x="1065" fg:w="1"/><text x="30.1489%" y="831.50"></text></g><g><title>rust-sokoban`core::convert::num::_&lt;impl core::convert::From&lt;u8&gt; for u32&gt;::from (1 samples, 0.03%)</title><rect x="29.9270%" y="821" width="0.0281%" height="15" fill="rgb(228,71,26)" fg:x="1066" fg:w="1"/><text x="30.1770%" y="831.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="29.9551%" y="821" width="0.0281%" height="15" fill="rgb(222,145,49)" fg:x="1067" fg:w="1"/><text x="30.2051%" y="831.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="30.0112%" y="773" width="0.0281%" height="15" fill="rgb(218,121,17)" fg:x="1069" fg:w="1"/><text x="30.2612%" y="783.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.11%)</title><rect x="29.9832%" y="821" width="0.1123%" height="15" fill="rgb(244,50,7)" fg:x="1068" fg:w="4"/><text x="30.2332%" y="831.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.11%)</title><rect x="29.9832%" y="805" width="0.1123%" height="15" fill="rgb(246,229,37)" fg:x="1068" fg:w="4"/><text x="30.2332%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.11%)</title><rect x="29.9832%" y="789" width="0.1123%" height="15" fill="rgb(225,18,5)" fg:x="1068" fg:w="4"/><text x="30.2332%" y="799.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::metadata (2 samples, 0.06%)</title><rect x="30.0393%" y="773" width="0.0561%" height="15" fill="rgb(213,204,8)" fg:x="1070" fg:w="2"/><text x="30.2893%" y="783.50"></text></g><g><title>rust-sokoban`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.03%)</title><rect x="30.3762%" y="757" width="0.0281%" height="15" fill="rgb(238,103,6)" fg:x="1082" fg:w="1"/><text x="30.6262%" y="767.50"></text></g><g><title> N]&gt;::eq (2 samples, 0.06%)</title><rect x="30.3762%" y="773" width="0.0561%" height="15" fill="rgb(222,25,35)" fg:x="1082" fg:w="2"/><text x="30.6262%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="30.4043%" y="757" width="0.0281%" height="15" fill="rgb(213,203,35)" fg:x="1083" fg:w="1"/><text x="30.6543%" y="767.50"></text></g><g><title>rust-sokoban`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (3 samples, 0.08%)</title><rect x="30.3762%" y="805" width="0.0842%" height="15" fill="rgb(221,79,53)" fg:x="1082" fg:w="3"/><text x="30.6262%" y="815.50"></text></g><g><title> N]&gt; for [A (3 samples, 0.08%)</title><rect x="30.3762%" y="789" width="0.0842%" height="15" fill="rgb(243,200,35)" fg:x="1082" fg:w="3"/><text x="30.6262%" y="799.50"></text></g><g><title> N]&gt;::ne (1 samples, 0.03%)</title><rect x="30.4323%" y="773" width="0.0281%" height="15" fill="rgb(248,60,25)" fg:x="1084" fg:w="1"/><text x="30.6823%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::read (3 samples, 0.08%)</title><rect x="30.4885%" y="789" width="0.0842%" height="15" fill="rgb(227,53,46)" fg:x="1086" fg:w="3"/><text x="30.7385%" y="799.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::take (5 samples, 0.14%)</title><rect x="30.4604%" y="805" width="0.1404%" height="15" fill="rgb(216,120,32)" fg:x="1085" fg:w="5"/><text x="30.7104%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::write (1 samples, 0.03%)</title><rect x="30.5727%" y="789" width="0.0281%" height="15" fill="rgb(220,134,1)" fg:x="1089" fg:w="1"/><text x="30.8227%" y="799.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="30.6008%" y="805" width="0.0281%" height="15" fill="rgb(237,168,5)" fg:x="1090" fg:w="1"/><text x="30.8508%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="30.6008%" y="789" width="0.0281%" height="15" fill="rgb(231,100,33)" fg:x="1090" fg:w="1"/><text x="30.8508%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="30.6008%" y="773" width="0.0281%" height="15" fill="rgb(236,177,47)" fg:x="1090" fg:w="1"/><text x="30.8508%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="30.6008%" y="757" width="0.0281%" height="15" fill="rgb(235,7,49)" fg:x="1090" fg:w="1"/><text x="30.8508%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.81%)</title><rect x="30.6289%" y="757" width="0.8141%" height="15" fill="rgb(232,119,22)" fg:x="1091" fg:w="29"/><text x="30.8789%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="31.4430%" y="725" width="0.0281%" height="15" fill="rgb(254,73,53)" fg:x="1120" fg:w="1"/><text x="31.6930%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="31.4430%" y="741" width="0.0561%" height="15" fill="rgb(251,35,20)" fg:x="1120" fg:w="2"/><text x="31.6930%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="31.4711%" y="725" width="0.0281%" height="15" fill="rgb(241,119,20)" fg:x="1121" fg:w="1"/><text x="31.7211%" y="735.50"></text></g><g><title>rust-sokoban`crc32fast::Hasher::update (32 samples, 0.90%)</title><rect x="30.6289%" y="805" width="0.8984%" height="15" fill="rgb(207,102,14)" fg:x="1091" fg:w="32"/><text x="30.8789%" y="815.50"></text></g><g><title>rust-sokoban`crc32fast::baseline::State::update (32 samples, 0.90%)</title><rect x="30.6289%" y="789" width="0.8984%" height="15" fill="rgb(248,201,50)" fg:x="1091" fg:w="32"/><text x="30.8789%" y="799.50"></text></g><g><title>rust-sokoban`crc32fast::baseline::update_fast_16 (32 samples, 0.90%)</title><rect x="30.6289%" y="773" width="0.8984%" height="15" fill="rgb(222,185,44)" fg:x="1091" fg:w="32"/><text x="30.8789%" y="783.50"></text></g><g><title>rust-sokoban`crc32fast::baseline::update_slow (3 samples, 0.08%)</title><rect x="31.4430%" y="757" width="0.0842%" height="15" fill="rgb(218,107,18)" fg:x="1120" fg:w="3"/><text x="31.6930%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="31.4992%" y="741" width="0.0281%" height="15" fill="rgb(237,177,39)" fg:x="1122" fg:w="1"/><text x="31.7492%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="31.4992%" y="725" width="0.0281%" height="15" fill="rgb(246,69,6)" fg:x="1122" fg:w="1"/><text x="31.7492%" y="735.50"></text></g><g><title>rust-sokoban`&lt;W as png::traits::ReadBytesExt&lt;u32&gt;&gt;::read_be (1 samples, 0.03%)</title><rect x="31.5834%" y="773" width="0.0281%" height="15" fill="rgb(234,208,37)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="783.50"></text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.03%)</title><rect x="31.5834%" y="757" width="0.0281%" height="15" fill="rgb(225,4,6)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="31.5834%" y="741" width="0.0281%" height="15" fill="rgb(233,45,0)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="31.5834%" y="725" width="0.0281%" height="15" fill="rgb(226,136,5)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="31.5834%" y="709" width="0.0281%" height="15" fill="rgb(211,91,47)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="31.5834%" y="693" width="0.0281%" height="15" fill="rgb(242,88,51)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::metadata (1 samples, 0.03%)</title><rect x="31.5834%" y="677" width="0.0281%" height="15" fill="rgb(230,91,28)" fg:x="1125" fg:w="1"/><text x="31.8334%" y="687.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::parse_ihdr (4 samples, 0.11%)</title><rect x="31.5272%" y="789" width="0.1123%" height="15" fill="rgb(254,186,29)" fg:x="1123" fg:w="4"/><text x="31.7772%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="31.6115%" y="773" width="0.0281%" height="15" fill="rgb(238,6,4)" fg:x="1126" fg:w="1"/><text x="31.8615%" y="783.50"></text></g><g><title>rust-sokoban`png::decoder::ReadDecoder&lt;R&gt;::decode_next (66 samples, 1.85%)</title><rect x="29.8147%" y="853" width="1.8529%" height="15" fill="rgb(221,151,16)" fg:x="1062" fg:w="66"/><text x="30.0647%" y="863.50">r..</text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::update (63 samples, 1.77%)</title><rect x="29.8989%" y="837" width="1.7687%" height="15" fill="rgb(251,143,52)" fg:x="1065" fg:w="63"/><text x="30.1489%" y="847.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::next_state (56 samples, 1.57%)</title><rect x="30.0955%" y="821" width="1.5722%" height="15" fill="rgb(206,90,15)" fg:x="1072" fg:w="56"/><text x="30.3455%" y="831.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::parse_chunk (5 samples, 0.14%)</title><rect x="31.5272%" y="805" width="0.1404%" height="15" fill="rgb(218,35,8)" fg:x="1123" fg:w="5"/><text x="31.7772%" y="815.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::parse_phys (1 samples, 0.03%)</title><rect x="31.6395%" y="789" width="0.0281%" height="15" fill="rgb(239,215,6)" fg:x="1127" fg:w="1"/><text x="31.8895%" y="799.50"></text></g><g><title>rust-sokoban`&lt;W as png::traits::ReadBytesExt&lt;u32&gt;&gt;::read_be (1 samples, 0.03%)</title><rect x="31.6395%" y="773" width="0.0281%" height="15" fill="rgb(245,116,39)" fg:x="1127" fg:w="1"/><text x="31.8895%" y="783.50"></text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.03%)</title><rect x="31.6395%" y="757" width="0.0281%" height="15" fill="rgb(242,65,28)" fg:x="1127" fg:w="1"/><text x="31.8895%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="31.6395%" y="741" width="0.0281%" height="15" fill="rgb(252,132,53)" fg:x="1127" fg:w="1"/><text x="31.8895%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="31.6395%" y="725" width="0.0281%" height="15" fill="rgb(224,159,50)" fg:x="1127" fg:w="1"/><text x="31.8895%" y="735.50"></text></g><g><title>rust-sokoban`png::decoder::ReadDecoder&lt;R&gt;::info (1 samples, 0.03%)</title><rect x="31.6676%" y="853" width="0.0281%" height="15" fill="rgb(224,93,4)" fg:x="1128" fg:w="1"/><text x="31.9176%" y="863.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="31.7799%" y="789" width="0.0281%" height="15" fill="rgb(208,81,34)" fg:x="1132" fg:w="1"/><text x="32.0299%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="31.8080%" y="757" width="0.0561%" height="15" fill="rgb(233,92,54)" fg:x="1133" fg:w="2"/><text x="32.0580%" y="767.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.14%)</title><rect x="31.7518%" y="805" width="0.1404%" height="15" fill="rgb(237,21,14)" fg:x="1131" fg:w="5"/><text x="32.0018%" y="815.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="31.8080%" y="789" width="0.0842%" height="15" fill="rgb(249,128,51)" fg:x="1133" fg:w="3"/><text x="32.0580%" y="799.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.08%)</title><rect x="31.8080%" y="773" width="0.0842%" height="15" fill="rgb(223,129,24)" fg:x="1133" fg:w="3"/><text x="32.0580%" y="783.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="31.8641%" y="757" width="0.0281%" height="15" fill="rgb(231,168,25)" fg:x="1135" fg:w="1"/><text x="32.1141%" y="767.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="31.8641%" y="741" width="0.0281%" height="15" fill="rgb(224,39,20)" fg:x="1135" fg:w="1"/><text x="32.1141%" y="751.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::new (1 samples, 0.03%)</title><rect x="31.8641%" y="725" width="0.0281%" height="15" fill="rgb(225,152,53)" fg:x="1135" fg:w="1"/><text x="32.1141%" y="735.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.03%)</title><rect x="31.8641%" y="709" width="0.0281%" height="15" fill="rgb(252,17,24)" fg:x="1135" fg:w="1"/><text x="32.1141%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::read (2 samples, 0.06%)</title><rect x="31.9483%" y="773" width="0.0561%" height="15" fill="rgb(250,114,30)" fg:x="1138" fg:w="2"/><text x="32.1983%" y="783.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::extend_with (12 samples, 0.34%)</title><rect x="31.6957%" y="821" width="0.3369%" height="15" fill="rgb(229,5,4)" fg:x="1129" fg:w="12"/><text x="31.9457%" y="831.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.14%)</title><rect x="31.8922%" y="805" width="0.1404%" height="15" fill="rgb(225,176,49)" fg:x="1136" fg:w="5"/><text x="32.1422%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.11%)</title><rect x="31.9203%" y="789" width="0.1123%" height="15" fill="rgb(224,221,49)" fg:x="1137" fg:w="4"/><text x="32.1703%" y="799.50"></text></g><g><title>rust-sokoban`core::ptr::write (1 samples, 0.03%)</title><rect x="32.0045%" y="773" width="0.0281%" height="15" fill="rgb(253,169,27)" fg:x="1140" fg:w="1"/><text x="32.2545%" y="783.50"></text></g><g><title>rust-sokoban`alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.03%)</title><rect x="32.0326%" y="821" width="0.0281%" height="15" fill="rgb(211,206,16)" fg:x="1141" fg:w="1"/><text x="32.2826%" y="831.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::resize (15 samples, 0.42%)</title><rect x="31.6957%" y="837" width="0.4211%" height="15" fill="rgb(244,87,35)" fg:x="1129" fg:w="15"/><text x="31.9457%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::write (2 samples, 0.06%)</title><rect x="32.0606%" y="821" width="0.0561%" height="15" fill="rgb(246,28,10)" fg:x="1142" fg:w="2"/><text x="32.3106%" y="831.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::init (85 samples, 2.39%)</title><rect x="29.7586%" y="869" width="2.3863%" height="15" fill="rgb(229,12,44)" fg:x="1060" fg:w="85"/><text x="30.0086%" y="879.50">ru..</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::allocate_out_buf (16 samples, 0.45%)</title><rect x="31.6957%" y="853" width="0.4492%" height="15" fill="rgb(210,145,37)" fg:x="1129" fg:w="16"/><text x="31.9457%" y="863.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::line_size (1 samples, 0.03%)</title><rect x="32.1168%" y="837" width="0.0281%" height="15" fill="rgb(227,112,52)" fg:x="1144" fg:w="1"/><text x="32.3668%" y="847.50"></text></g><g><title>rust-sokoban`png::common::ColorType::checked_raw_row_length (1 samples, 0.03%)</title><rect x="32.1168%" y="821" width="0.0281%" height="15" fill="rgb(238,155,34)" fg:x="1144" fg:w="1"/><text x="32.3668%" y="831.50"></text></g><g><title>rust-sokoban`alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (1 samples, 0.03%)</title><rect x="32.1449%" y="837" width="0.0281%" height="15" fill="rgb(239,226,36)" fg:x="1145" fg:w="1"/><text x="32.3949%" y="847.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="32.1449%" y="821" width="0.0281%" height="15" fill="rgb(230,16,23)" fg:x="1145" fg:w="1"/><text x="32.3949%" y="831.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="32.1449%" y="805" width="0.0281%" height="15" fill="rgb(236,171,36)" fg:x="1145" fg:w="1"/><text x="32.3949%" y="815.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="32.1449%" y="789" width="0.0281%" height="15" fill="rgb(221,22,14)" fg:x="1145" fg:w="1"/><text x="32.3949%" y="799.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="32.1449%" y="773" width="0.0281%" height="15" fill="rgb(242,43,11)" fg:x="1145" fg:w="1"/><text x="32.3949%" y="783.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::from_size_align (1 samples, 0.03%)</title><rect x="32.1449%" y="757" width="0.0281%" height="15" fill="rgb(232,69,23)" fg:x="1145" fg:w="1"/><text x="32.3949%" y="767.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::new (2 samples, 0.06%)</title><rect x="32.1449%" y="869" width="0.0561%" height="15" fill="rgb(216,180,54)" fg:x="1145" fg:w="2"/><text x="32.3949%" y="879.50"></text></g><g><title>rust-sokoban`std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (2 samples, 0.06%)</title><rect x="32.1449%" y="853" width="0.0561%" height="15" fill="rgb(216,5,24)" fg:x="1145" fg:w="2"/><text x="32.3949%" y="863.50"></text></g><g><title>rust-sokoban`alloc::boxed::Box&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;],A&gt;::assume_init (1 samples, 0.03%)</title><rect x="32.1729%" y="837" width="0.0281%" height="15" fill="rgb(225,89,9)" fg:x="1146" fg:w="1"/><text x="32.4229%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="32.1729%" y="821" width="0.0281%" height="15" fill="rgb(243,75,33)" fg:x="1146" fg:w="1"/><text x="32.4229%" y="831.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::new (1 samples, 0.03%)</title><rect x="32.2010%" y="757" width="0.0281%" height="15" fill="rgb(247,141,45)" fg:x="1147" fg:w="1"/><text x="32.4510%" y="767.50"></text></g><g><title>rust-sokoban`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.03%)</title><rect x="32.2010%" y="741" width="0.0281%" height="15" fill="rgb(232,177,36)" fg:x="1147" fg:w="1"/><text x="32.4510%" y="751.50"></text></g><g><title>rust-sokoban`&lt;png::decoder::stream::ChunkState as core::default::Default&gt;::default (2 samples, 0.06%)</title><rect x="32.2010%" y="853" width="0.0561%" height="15" fill="rgb(219,125,36)" fg:x="1147" fg:w="2"/><text x="32.4510%" y="863.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.06%)</title><rect x="32.2010%" y="837" width="0.0561%" height="15" fill="rgb(227,94,9)" fg:x="1147" fg:w="2"/><text x="32.4510%" y="847.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="32.2010%" y="821" width="0.0561%" height="15" fill="rgb(240,34,52)" fg:x="1147" fg:w="2"/><text x="32.4510%" y="831.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="32.2010%" y="805" width="0.0561%" height="15" fill="rgb(216,45,12)" fg:x="1147" fg:w="2"/><text x="32.4510%" y="815.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.06%)</title><rect x="32.2010%" y="789" width="0.0561%" height="15" fill="rgb(246,21,19)" fg:x="1147" fg:w="2"/><text x="32.4510%" y="799.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (2 samples, 0.06%)</title><rect x="32.2010%" y="773" width="0.0561%" height="15" fill="rgb(213,98,42)" fg:x="1147" fg:w="2"/><text x="32.4510%" y="783.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="32.2291%" y="757" width="0.0281%" height="15" fill="rgb(250,136,47)" fg:x="1148" fg:w="1"/><text x="32.4791%" y="767.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::align (1 samples, 0.03%)</title><rect x="32.2291%" y="741" width="0.0281%" height="15" fill="rgb(251,124,27)" fg:x="1148" fg:w="1"/><text x="32.4791%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="32.2572%" y="837" width="0.0561%" height="15" fill="rgb(229,180,14)" fg:x="1149" fg:w="2"/><text x="32.5072%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="32.3133%" y="821" width="0.0561%" height="15" fill="rgb(245,216,25)" fg:x="1151" fg:w="2"/><text x="32.5633%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="32.3695%" y="821" width="0.0281%" height="15" fill="rgb(251,43,5)" fg:x="1153" fg:w="1"/><text x="32.6195%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.03%)</title><rect x="32.3975%" y="693" width="0.0281%" height="15" fill="rgb(250,128,24)" fg:x="1154" fg:w="1"/><text x="32.6475%" y="703.50"></text></g><g><title>rust-sokoban`&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (5 samples, 0.14%)</title><rect x="32.3133%" y="837" width="0.1404%" height="15" fill="rgb(217,117,27)" fg:x="1151" fg:w="5"/><text x="32.5633%" y="847.50"></text></g><g><title>rust-sokoban`alloc::alloc::exchange_malloc (2 samples, 0.06%)</title><rect x="32.3975%" y="821" width="0.0561%" height="15" fill="rgb(245,147,4)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="831.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="32.3975%" y="805" width="0.0561%" height="15" fill="rgb(242,201,35)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="815.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="32.3975%" y="789" width="0.0561%" height="15" fill="rgb(218,181,1)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="799.50"></text></g><g><title>rust-sokoban`alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="32.3975%" y="773" width="0.0561%" height="15" fill="rgb(222,6,29)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.06%)</title><rect x="32.3975%" y="757" width="0.0561%" height="15" fill="rgb(208,186,3)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="32.3975%" y="741" width="0.0561%" height="15" fill="rgb(216,36,26)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.06%)</title><rect x="32.3975%" y="725" width="0.0561%" height="15" fill="rgb(248,201,23)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.06%)</title><rect x="32.3975%" y="709" width="0.0561%" height="15" fill="rgb(251,170,31)" fg:x="1154" fg:w="2"/><text x="32.6475%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="32.4256%" y="693" width="0.0281%" height="15" fill="rgb(207,110,25)" fg:x="1155" fg:w="1"/><text x="32.6756%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="32.4537%" y="837" width="0.0281%" height="15" fill="rgb(250,54,15)" fg:x="1156" fg:w="1"/><text x="32.7037%" y="847.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="32.4537%" y="821" width="0.0281%" height="15" fill="rgb(227,68,33)" fg:x="1156" fg:w="1"/><text x="32.7037%" y="831.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="32.4537%" y="805" width="0.0281%" height="15" fill="rgb(238,34,41)" fg:x="1156" fg:w="1"/><text x="32.7037%" y="815.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="32.4537%" y="789" width="0.0281%" height="15" fill="rgb(220,11,15)" fg:x="1156" fg:w="1"/><text x="32.7037%" y="799.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="32.4537%" y="773" width="0.0281%" height="15" fill="rgb(246,111,35)" fg:x="1156" fg:w="1"/><text x="32.7037%" y="783.50"></text></g><g><title>rust-sokoban`core::num::_&lt;impl usize&gt;::checked_mul (1 samples, 0.03%)</title><rect x="32.4537%" y="757" width="0.0281%" height="15" fill="rgb(209,88,53)" fg:x="1156" fg:w="1"/><text x="32.7037%" y="767.50"></text></g><g><title>rust-sokoban`image::codecs::png::PngDecoder&lt;R&gt;::new (104 samples, 2.92%)</title><rect x="29.6182%" y="901" width="2.9197%" height="15" fill="rgb(231,185,47)" fg:x="1055" fg:w="104"/><text x="29.8682%" y="911.50">ru..</text></g><g><title>rust-sokoban`png::decoder::Decoder&lt;R&gt;::read_info (102 samples, 2.86%)</title><rect x="29.6743%" y="885" width="2.8636%" height="15" fill="rgb(233,154,1)" fg:x="1057" fg:w="102"/><text x="29.9243%" y="895.50">ru..</text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::new (12 samples, 0.34%)</title><rect x="32.2010%" y="869" width="0.3369%" height="15" fill="rgb(225,15,46)" fg:x="1147" fg:w="12"/><text x="32.4510%" y="879.50"></text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::new (10 samples, 0.28%)</title><rect x="32.2572%" y="853" width="0.2807%" height="15" fill="rgb(211,135,41)" fg:x="1149" fg:w="10"/><text x="32.5072%" y="863.50"></text></g><g><title>rust-sokoban`alloc::vec::from_elem (2 samples, 0.06%)</title><rect x="32.4818%" y="837" width="0.0561%" height="15" fill="rgb(208,54,0)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="847.50"></text></g><g><title>rust-sokoban`&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.06%)</title><rect x="32.4818%" y="821" width="0.0561%" height="15" fill="rgb(244,136,14)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="831.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2 samples, 0.06%)</title><rect x="32.4818%" y="805" width="0.0561%" height="15" fill="rgb(241,56,14)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="815.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.06%)</title><rect x="32.4818%" y="789" width="0.0561%" height="15" fill="rgb(205,80,24)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2 samples, 0.06%)</title><rect x="32.4818%" y="773" width="0.0561%" height="15" fill="rgb(220,57,4)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="783.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="32.4818%" y="757" width="0.0561%" height="15" fill="rgb(226,193,50)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="767.50"></text></g><g><title>rust-sokoban`alloc::alloc::alloc_zeroed (2 samples, 0.06%)</title><rect x="32.4818%" y="741" width="0.0561%" height="15" fill="rgb(231,168,22)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.06%)</title><rect x="32.4818%" y="725" width="0.0561%" height="15" fill="rgb(254,215,14)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="32.4818%" y="709" width="0.0561%" height="15" fill="rgb(211,115,16)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="719.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.06%)</title><rect x="32.4818%" y="693" width="0.0561%" height="15" fill="rgb(236,210,16)" fg:x="1157" fg:w="2"/><text x="32.7318%" y="703.50"></text></g><g><title>rust-sokoban`core::convert::num::_&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (1 samples, 0.03%)</title><rect x="32.5379%" y="837" width="0.0281%" height="15" fill="rgb(221,94,12)" fg:x="1159" fg:w="1"/><text x="32.7879%" y="847.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.20%)</title><rect x="32.6221%" y="821" width="0.1965%" height="15" fill="rgb(235,218,49)" fg:x="1162" fg:w="7"/><text x="32.8721%" y="831.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.14%)</title><rect x="32.6783%" y="805" width="0.1404%" height="15" fill="rgb(217,114,14)" fg:x="1164" fg:w="5"/><text x="32.9283%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.14%)</title><rect x="32.6783%" y="789" width="0.1404%" height="15" fill="rgb(216,145,22)" fg:x="1164" fg:w="5"/><text x="32.9283%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="32.7906%" y="773" width="0.0281%" height="15" fill="rgb(217,112,39)" fg:x="1168" fg:w="1"/><text x="33.0406%" y="783.50"></text></g><g><title>rust-sokoban`core::result::Result&lt;T,E&gt;::map (2 samples, 0.06%)</title><rect x="32.8186%" y="805" width="0.0561%" height="15" fill="rgb(225,85,32)" fg:x="1169" fg:w="2"/><text x="33.0686%" y="815.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_row::_{{closure}} (1 samples, 0.03%)</title><rect x="32.8467%" y="789" width="0.0281%" height="15" fill="rgb(245,209,47)" fg:x="1170" fg:w="1"/><text x="33.0967%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="33.0994%" y="773" width="0.0281%" height="15" fill="rgb(218,220,15)" fg:x="1179" fg:w="1"/><text x="33.3494%" y="783.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="33.0994%" y="757" width="0.0281%" height="15" fill="rgb(222,202,31)" fg:x="1179" fg:w="1"/><text x="33.3494%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="33.0994%" y="741" width="0.0281%" height="15" fill="rgb(243,203,4)" fg:x="1179" fg:w="1"/><text x="33.3494%" y="751.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="33.1275%" y="757" width="0.0281%" height="15" fill="rgb(237,92,17)" fg:x="1180" fg:w="1"/><text x="33.3775%" y="767.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="33.1275%" y="741" width="0.0281%" height="15" fill="rgb(231,119,7)" fg:x="1180" fg:w="1"/><text x="33.3775%" y="751.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="33.1275%" y="773" width="0.0561%" height="15" fill="rgb(237,82,41)" fg:x="1180" fg:w="2"/><text x="33.3775%" y="783.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="33.1555%" y="757" width="0.0281%" height="15" fill="rgb(226,81,48)" fg:x="1181" fg:w="1"/><text x="33.4055%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="33.1836%" y="773" width="0.0281%" height="15" fill="rgb(234,70,51)" fg:x="1182" fg:w="1"/><text x="33.4336%" y="783.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="33.2398%" y="725" width="0.0281%" height="15" fill="rgb(251,86,4)" fg:x="1184" fg:w="1"/><text x="33.4898%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.06%)</title><rect x="33.2678%" y="725" width="0.0561%" height="15" fill="rgb(244,144,28)" fg:x="1185" fg:w="2"/><text x="33.5178%" y="735.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.14%)</title><rect x="33.2398%" y="741" width="0.1404%" height="15" fill="rgb(232,161,39)" fg:x="1184" fg:w="5"/><text x="33.4898%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.06%)</title><rect x="33.3240%" y="725" width="0.0561%" height="15" fill="rgb(247,34,51)" fg:x="1187" fg:w="2"/><text x="33.5740%" y="735.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.17%)</title><rect x="33.2398%" y="757" width="0.1684%" height="15" fill="rgb(225,132,2)" fg:x="1184" fg:w="6"/><text x="33.4898%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="33.3801%" y="741" width="0.0281%" height="15" fill="rgb(209,159,44)" fg:x="1189" fg:w="1"/><text x="33.6301%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.22%)</title><rect x="33.2117%" y="773" width="0.2246%" height="15" fill="rgb(251,214,1)" fg:x="1183" fg:w="8"/><text x="33.4617%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="33.4082%" y="757" width="0.0281%" height="15" fill="rgb(247,84,47)" fg:x="1190" fg:w="1"/><text x="33.6582%" y="767.50"></text></g><g><title>rust-sokoban`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="33.4082%" y="741" width="0.0281%" height="15" fill="rgb(240,111,43)" fg:x="1190" fg:w="1"/><text x="33.6582%" y="751.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="33.4082%" y="725" width="0.0281%" height="15" fill="rgb(215,214,35)" fg:x="1190" fg:w="1"/><text x="33.6582%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::read (2 samples, 0.06%)</title><rect x="33.4363%" y="773" width="0.0561%" height="15" fill="rgb(248,207,23)" fg:x="1191" fg:w="2"/><text x="33.6863%" y="783.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.03%)</title><rect x="33.4924%" y="773" width="0.0281%" height="15" fill="rgb(214,186,4)" fg:x="1193" fg:w="1"/><text x="33.7424%" y="783.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="33.5205%" y="773" width="0.0281%" height="15" fill="rgb(220,133,22)" fg:x="1194" fg:w="1"/><text x="33.7705%" y="783.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="33.5205%" y="757" width="0.0281%" height="15" fill="rgb(239,134,19)" fg:x="1194" fg:w="1"/><text x="33.7705%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="33.5205%" y="741" width="0.0281%" height="15" fill="rgb(250,140,9)" fg:x="1194" fg:w="1"/><text x="33.7705%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="33.5205%" y="725" width="0.0281%" height="15" fill="rgb(225,59,14)" fg:x="1194" fg:w="1"/><text x="33.7705%" y="735.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.20%)</title><rect x="33.6328%" y="741" width="0.1965%" height="15" fill="rgb(214,152,51)" fg:x="1198" fg:w="7"/><text x="33.8828%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts (5 samples, 0.14%)</title><rect x="33.6889%" y="725" width="0.1404%" height="15" fill="rgb(251,227,43)" fg:x="1200" fg:w="5"/><text x="33.9389%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="33.8012%" y="709" width="0.0281%" height="15" fill="rgb(241,96,17)" fg:x="1204" fg:w="1"/><text x="34.0512%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.11%)</title><rect x="33.9135%" y="709" width="0.1123%" height="15" fill="rgb(234,198,43)" fg:x="1208" fg:w="4"/><text x="34.1635%" y="719.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.45%)</title><rect x="33.6047%" y="757" width="0.4492%" height="15" fill="rgb(220,108,29)" fg:x="1197" fg:w="16"/><text x="33.8547%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.22%)</title><rect x="33.8293%" y="741" width="0.2246%" height="15" fill="rgb(226,163,33)" fg:x="1205" fg:w="8"/><text x="34.0793%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.17%)</title><rect x="33.8855%" y="725" width="0.1684%" height="15" fill="rgb(205,194,45)" fg:x="1207" fg:w="6"/><text x="34.1355%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="34.0258%" y="709" width="0.0281%" height="15" fill="rgb(206,143,44)" fg:x="1212" fg:w="1"/><text x="34.2758%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="34.0820%" y="709" width="0.0281%" height="15" fill="rgb(236,136,36)" fg:x="1214" fg:w="1"/><text x="34.3320%" y="719.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.06%)</title><rect x="34.0820%" y="725" width="0.0561%" height="15" fill="rgb(249,172,42)" fg:x="1214" fg:w="2"/><text x="34.3320%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="34.1101%" y="709" width="0.0281%" height="15" fill="rgb(216,139,23)" fg:x="1215" fg:w="1"/><text x="34.3601%" y="719.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.08%)</title><rect x="34.0820%" y="741" width="0.0842%" height="15" fill="rgb(207,166,20)" fg:x="1214" fg:w="3"/><text x="34.3320%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="34.1381%" y="725" width="0.0281%" height="15" fill="rgb(210,209,22)" fg:x="1216" fg:w="1"/><text x="34.3881%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="34.1381%" y="709" width="0.0281%" height="15" fill="rgb(232,118,20)" fg:x="1216" fg:w="1"/><text x="34.3881%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.17%)</title><rect x="34.1943%" y="725" width="0.1684%" height="15" fill="rgb(238,113,42)" fg:x="1218" fg:w="6"/><text x="34.4443%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.11%)</title><rect x="34.2504%" y="709" width="0.1123%" height="15" fill="rgb(231,42,5)" fg:x="1220" fg:w="4"/><text x="34.5004%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.06%)</title><rect x="34.3066%" y="693" width="0.0561%" height="15" fill="rgb(243,166,24)" fg:x="1222" fg:w="2"/><text x="34.5566%" y="703.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (12 samples, 0.34%)</title><rect x="34.0539%" y="757" width="0.3369%" height="15" fill="rgb(237,226,12)" fg:x="1213" fg:w="12"/><text x="34.3039%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.22%)</title><rect x="34.1662%" y="741" width="0.2246%" height="15" fill="rgb(229,133,24)" fg:x="1217" fg:w="8"/><text x="34.4162%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="34.3627%" y="725" width="0.0281%" height="15" fill="rgb(238,33,43)" fg:x="1224" fg:w="1"/><text x="34.6127%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="34.3627%" y="709" width="0.0281%" height="15" fill="rgb(227,59,38)" fg:x="1224" fg:w="1"/><text x="34.6127%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="34.3627%" y="693" width="0.0281%" height="15" fill="rgb(230,97,0)" fg:x="1224" fg:w="1"/><text x="34.6127%" y="703.50"></text></g><g><title>rust-sokoban`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="34.3908%" y="757" width="0.0281%" height="15" fill="rgb(250,173,50)" fg:x="1225" fg:w="1"/><text x="34.6408%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="34.5592%" y="693" width="0.0561%" height="15" fill="rgb(240,15,50)" fg:x="1231" fg:w="2"/><text x="34.8092%" y="703.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.22%)</title><rect x="34.4189%" y="757" width="0.2246%" height="15" fill="rgb(221,93,22)" fg:x="1226" fg:w="8"/><text x="34.6689%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.22%)</title><rect x="34.4189%" y="741" width="0.2246%" height="15" fill="rgb(245,180,53)" fg:x="1226" fg:w="8"/><text x="34.6689%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.20%)</title><rect x="34.4469%" y="725" width="0.1965%" height="15" fill="rgb(231,88,51)" fg:x="1227" fg:w="7"/><text x="34.6969%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.14%)</title><rect x="34.5031%" y="709" width="0.1404%" height="15" fill="rgb(240,58,21)" fg:x="1229" fg:w="5"/><text x="34.7531%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="34.6154%" y="693" width="0.0281%" height="15" fill="rgb(237,21,10)" fg:x="1233" fg:w="1"/><text x="34.8654%" y="703.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.06%)</title><rect x="34.6435%" y="757" width="0.0561%" height="15" fill="rgb(218,43,11)" fg:x="1234" fg:w="2"/><text x="34.8935%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="34.6435%" y="741" width="0.0561%" height="15" fill="rgb(218,221,29)" fg:x="1234" fg:w="2"/><text x="34.8935%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.06%)</title><rect x="34.6435%" y="725" width="0.0561%" height="15" fill="rgb(214,118,42)" fg:x="1234" fg:w="2"/><text x="34.8935%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="34.6996%" y="677" width="0.0281%" height="15" fill="rgb(251,200,26)" fg:x="1236" fg:w="1"/><text x="34.9496%" y="687.50"></text></g><g><title>rust-sokoban`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.06%)</title><rect x="34.6996%" y="741" width="0.0561%" height="15" fill="rgb(237,101,39)" fg:x="1236" fg:w="2"/><text x="34.9496%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.06%)</title><rect x="34.6996%" y="725" width="0.0561%" height="15" fill="rgb(251,117,11)" fg:x="1236" fg:w="2"/><text x="34.9496%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="34.6996%" y="709" width="0.0561%" height="15" fill="rgb(216,223,23)" fg:x="1236" fg:w="2"/><text x="34.9496%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="34.6996%" y="693" width="0.0561%" height="15" fill="rgb(251,54,12)" fg:x="1236" fg:w="2"/><text x="34.9496%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="34.7277%" y="677" width="0.0281%" height="15" fill="rgb(254,176,54)" fg:x="1237" fg:w="1"/><text x="34.9777%" y="687.50"></text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::next_state (1 samples, 0.03%)</title><rect x="34.7558%" y="741" width="0.0281%" height="15" fill="rgb(210,32,8)" fg:x="1238" fg:w="1"/><text x="35.0058%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="34.8400%" y="725" width="0.0561%" height="15" fill="rgb(235,52,38)" fg:x="1241" fg:w="2"/><text x="35.0900%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.14%)</title><rect x="34.9523%" y="677" width="0.1404%" height="15" fill="rgb(231,4,44)" fg:x="1245" fg:w="5"/><text x="35.2023%" y="687.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="35.0646%" y="661" width="0.0281%" height="15" fill="rgb(249,2,32)" fg:x="1249" fg:w="1"/><text x="35.3146%" y="671.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.28%)</title><rect x="34.8961%" y="725" width="0.2807%" height="15" fill="rgb(224,65,26)" fg:x="1243" fg:w="10"/><text x="35.1461%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.28%)</title><rect x="34.8961%" y="709" width="0.2807%" height="15" fill="rgb(250,73,40)" fg:x="1243" fg:w="10"/><text x="35.1461%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.28%)</title><rect x="34.8961%" y="693" width="0.2807%" height="15" fill="rgb(253,177,16)" fg:x="1243" fg:w="10"/><text x="35.1461%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::len (3 samples, 0.08%)</title><rect x="35.0926%" y="677" width="0.0842%" height="15" fill="rgb(217,32,34)" fg:x="1250" fg:w="3"/><text x="35.3426%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.06%)</title><rect x="35.2892%" y="709" width="0.0561%" height="15" fill="rgb(212,7,10)" fg:x="1257" fg:w="2"/><text x="35.5392%" y="719.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.03%)</title><rect x="35.3453%" y="709" width="0.0281%" height="15" fill="rgb(245,89,8)" fg:x="1259" fg:w="1"/><text x="35.5953%" y="719.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.03%)</title><rect x="35.3453%" y="693" width="0.0281%" height="15" fill="rgb(237,16,53)" fg:x="1259" fg:w="1"/><text x="35.5953%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="35.3453%" y="677" width="0.0281%" height="15" fill="rgb(250,204,30)" fg:x="1259" fg:w="1"/><text x="35.5953%" y="687.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="35.3734%" y="709" width="0.0281%" height="15" fill="rgb(208,77,27)" fg:x="1260" fg:w="1"/><text x="35.6234%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="35.3734%" y="693" width="0.0281%" height="15" fill="rgb(250,204,28)" fg:x="1260" fg:w="1"/><text x="35.6234%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.53%)</title><rect x="35.4015%" y="677" width="0.5334%" height="15" fill="rgb(244,63,21)" fg:x="1261" fg:w="19"/><text x="35.6515%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (42 samples, 1.18%)</title><rect x="35.9349%" y="661" width="1.1791%" height="15" fill="rgb(236,85,44)" fg:x="1280" fg:w="42"/><text x="36.1849%" y="671.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="37.1140%" y="629" width="0.0281%" height="15" fill="rgb(215,98,4)" fg:x="1322" fg:w="1"/><text x="37.3640%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="37.1140%" y="645" width="0.0561%" height="15" fill="rgb(235,38,11)" fg:x="1322" fg:w="2"/><text x="37.3640%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="37.1421%" y="629" width="0.0281%" height="15" fill="rgb(254,186,25)" fg:x="1323" fg:w="1"/><text x="37.3921%" y="639.50"></text></g><g><title>rust-sokoban`crc32fast::Hasher::update (64 samples, 1.80%)</title><rect x="35.4015%" y="709" width="1.7967%" height="15" fill="rgb(225,55,31)" fg:x="1261" fg:w="64"/><text x="35.6515%" y="719.50">r..</text></g><g><title>rust-sokoban`crc32fast::baseline::State::update (64 samples, 1.80%)</title><rect x="35.4015%" y="693" width="1.7967%" height="15" fill="rgb(211,15,21)" fg:x="1261" fg:w="64"/><text x="35.6515%" y="703.50">r..</text></g><g><title>rust-sokoban`crc32fast::baseline::update_fast_16 (45 samples, 1.26%)</title><rect x="35.9349%" y="677" width="1.2633%" height="15" fill="rgb(215,187,41)" fg:x="1280" fg:w="45"/><text x="36.1849%" y="687.50"></text></g><g><title>rust-sokoban`crc32fast::baseline::update_slow (3 samples, 0.08%)</title><rect x="37.1140%" y="661" width="0.0842%" height="15" fill="rgb(248,69,32)" fg:x="1322" fg:w="3"/><text x="37.3640%" y="671.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="37.1701%" y="645" width="0.0281%" height="15" fill="rgb(252,102,52)" fg:x="1324" fg:w="1"/><text x="37.4201%" y="655.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.03%)</title><rect x="37.1982%" y="693" width="0.0281%" height="15" fill="rgb(253,140,32)" fg:x="1325" fg:w="1"/><text x="37.4482%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.03%)</title><rect x="37.1982%" y="677" width="0.0281%" height="15" fill="rgb(216,56,42)" fg:x="1325" fg:w="1"/><text x="37.4482%" y="687.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="37.1982%" y="661" width="0.0281%" height="15" fill="rgb(216,184,14)" fg:x="1325" fg:w="1"/><text x="37.4482%" y="671.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="37.1982%" y="645" width="0.0281%" height="15" fill="rgb(237,187,27)" fg:x="1325" fg:w="1"/><text x="37.4482%" y="655.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="37.2263%" y="693" width="0.0281%" height="15" fill="rgb(219,65,3)" fg:x="1326" fg:w="1"/><text x="37.4763%" y="703.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="37.2263%" y="677" width="0.0281%" height="15" fill="rgb(245,83,25)" fg:x="1326" fg:w="1"/><text x="37.4763%" y="687.50"></text></g><g><title>rust-sokoban`core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.03%)</title><rect x="37.2263%" y="661" width="0.0281%" height="15" fill="rgb(214,205,45)" fg:x="1326" fg:w="1"/><text x="37.4763%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="37.3666%" y="661" width="0.0281%" height="15" fill="rgb(241,20,18)" fg:x="1331" fg:w="1"/><text x="37.6166%" y="671.50"></text></g><g><title>rust-sokoban`core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T (1 samples, 0.03%)</title><rect x="37.3947%" y="661" width="0.0281%" height="15" fill="rgb(232,163,23)" fg:x="1332" fg:w="1"/><text x="37.6447%" y="671.50"></text></g><g><title> N]&gt;::index (1 samples, 0.03%)</title><rect x="37.3947%" y="645" width="0.0281%" height="15" fill="rgb(214,5,46)" fg:x="1332" fg:w="1"/><text x="37.6447%" y="655.50"></text></g><g><title>rust-sokoban`core::array::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T (1 samples, 0.03%)</title><rect x="37.4228%" y="661" width="0.0281%" height="15" fill="rgb(229,78,17)" fg:x="1333" fg:w="1"/><text x="37.6728%" y="671.50"></text></g><g><title> N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="37.4228%" y="645" width="0.0281%" height="15" fill="rgb(248,89,10)" fg:x="1333" fg:w="1"/><text x="37.6728%" y="655.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="37.4228%" y="629" width="0.0281%" height="15" fill="rgb(248,54,15)" fg:x="1333" fg:w="1"/><text x="37.6728%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="37.4228%" y="613" width="0.0281%" height="15" fill="rgb(223,116,6)" fg:x="1333" fg:w="1"/><text x="37.6728%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="37.4228%" y="597" width="0.0281%" height="15" fill="rgb(205,125,38)" fg:x="1333" fg:w="1"/><text x="37.6728%" y="607.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="37.4228%" y="581" width="0.0281%" height="15" fill="rgb(251,78,38)" fg:x="1333" fg:w="1"/><text x="37.6728%" y="591.50"></text></g><g><title>rust-sokoban`core::convert::num::_&lt;impl core::convert::From&lt;i16&gt; for i32&gt;::from (1 samples, 0.03%)</title><rect x="37.4509%" y="661" width="0.0281%" height="15" fill="rgb(253,78,28)" fg:x="1334" fg:w="1"/><text x="37.7009%" y="671.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="37.4789%" y="661" width="0.0281%" height="15" fill="rgb(209,120,3)" fg:x="1335" fg:w="1"/><text x="37.7289%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="37.4789%" y="645" width="0.0281%" height="15" fill="rgb(238,229,9)" fg:x="1335" fg:w="1"/><text x="37.7289%" y="655.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="37.4789%" y="629" width="0.0281%" height="15" fill="rgb(253,159,18)" fg:x="1335" fg:w="1"/><text x="37.7289%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="37.4789%" y="613" width="0.0281%" height="15" fill="rgb(244,42,34)" fg:x="1335" fg:w="1"/><text x="37.7289%" y="623.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="37.4789%" y="597" width="0.0281%" height="15" fill="rgb(224,8,7)" fg:x="1335" fg:w="1"/><text x="37.7289%" y="607.50"></text></g><g><title>rust-sokoban`core::mem::replace (6 samples, 0.17%)</title><rect x="38.1808%" y="597" width="0.1684%" height="15" fill="rgb(210,201,45)" fg:x="1360" fg:w="6"/><text x="38.4308%" y="607.50"></text></g><g><title>rust-sokoban`core::ptr::read (4 samples, 0.11%)</title><rect x="38.3492%" y="597" width="0.1123%" height="15" fill="rgb(252,185,21)" fg:x="1366" fg:w="4"/><text x="38.5992%" y="607.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.42%)</title><rect x="38.0966%" y="613" width="0.4211%" height="15" fill="rgb(223,131,1)" fg:x="1357" fg:w="15"/><text x="38.3466%" y="623.50"></text></g><g><title>rust-sokoban`core::ptr::write (2 samples, 0.06%)</title><rect x="38.4615%" y="597" width="0.0561%" height="15" fill="rgb(245,141,16)" fg:x="1370" fg:w="2"/><text x="38.7115%" y="607.50"></text></g><g><title>rust-sokoban`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="38.5177%" y="613" width="0.0281%" height="15" fill="rgb(229,55,45)" fg:x="1372" fg:w="1"/><text x="38.7677%" y="623.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::apply_match (39 samples, 1.09%)</title><rect x="37.5070%" y="661" width="1.0949%" height="15" fill="rgb(208,92,15)" fg:x="1336" fg:w="39"/><text x="37.7570%" y="671.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::transfer (39 samples, 1.09%)</title><rect x="37.5070%" y="645" width="1.0949%" height="15" fill="rgb(234,185,47)" fg:x="1336" fg:w="39"/><text x="37.7570%" y="655.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.56%)</title><rect x="38.0404%" y="629" width="0.5615%" height="15" fill="rgb(253,104,50)" fg:x="1355" fg:w="20"/><text x="38.2904%" y="639.50"></text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="38.5458%" y="613" width="0.0561%" height="15" fill="rgb(205,70,7)" fg:x="1373" fg:w="2"/><text x="38.7958%" y="623.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::HuffmanTable::fast_lookup (1 samples, 0.03%)</title><rect x="38.7142%" y="645" width="0.0281%" height="15" fill="rgb(240,178,43)" fg:x="1379" fg:w="1"/><text x="38.9642%" y="655.50"></text></g><g><title>rust-sokoban`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (1 samples, 0.03%)</title><rect x="38.7423%" y="581" width="0.0281%" height="15" fill="rgb(214,112,2)" fg:x="1380" fg:w="1"/><text x="38.9923%" y="591.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.03%)</title><rect x="38.7423%" y="565" width="0.0281%" height="15" fill="rgb(206,46,17)" fg:x="1380" fg:w="1"/><text x="38.9923%" y="575.50"></text></g><g><title>rust-sokoban`core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="38.7704%" y="581" width="0.0281%" height="15" fill="rgb(225,220,16)" fg:x="1381" fg:w="1"/><text x="39.0204%" y="591.50"></text></g><g><title>rust-sokoban`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.08%)</title><rect x="38.7423%" y="629" width="0.0842%" height="15" fill="rgb(238,65,40)" fg:x="1380" fg:w="3"/><text x="38.9923%" y="639.50"></text></g><g><title>rust-sokoban`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (3 samples, 0.08%)</title><rect x="38.7423%" y="613" width="0.0842%" height="15" fill="rgb(230,151,21)" fg:x="1380" fg:w="3"/><text x="38.9923%" y="623.50"></text></g><g><title> N]&gt;::try_from (3 samples, 0.08%)</title><rect x="38.7423%" y="597" width="0.0842%" height="15" fill="rgb(218,58,49)" fg:x="1380" fg:w="3"/><text x="38.9923%" y="607.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="38.7984%" y="581" width="0.0281%" height="15" fill="rgb(219,179,14)" fg:x="1382" fg:w="1"/><text x="39.0484%" y="591.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (4 samples, 0.11%)</title><rect x="38.8265%" y="629" width="0.1123%" height="15" fill="rgb(223,72,1)" fg:x="1383" fg:w="4"/><text x="39.0765%" y="639.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decode_huffman_code (13 samples, 0.36%)</title><rect x="38.6019%" y="661" width="0.3650%" height="15" fill="rgb(238,126,10)" fg:x="1375" fg:w="13"/><text x="38.8519%" y="671.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::read_u16_le (8 samples, 0.22%)</title><rect x="38.7423%" y="645" width="0.2246%" height="15" fill="rgb(224,206,38)" fg:x="1380" fg:w="8"/><text x="38.9923%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="38.9388%" y="629" width="0.0281%" height="15" fill="rgb(212,201,54)" fg:x="1387" fg:w="1"/><text x="39.1888%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (2 samples, 0.06%)</title><rect x="39.0230%" y="645" width="0.0561%" height="15" fill="rgb(218,154,48)" fg:x="1390" fg:w="2"/><text x="39.2730%" y="655.50"></text></g><g><title>rust-sokoban`core::convert::num::_&lt;impl core::convert::From&lt;i16&gt; for i32&gt;::from (1 samples, 0.03%)</title><rect x="39.0792%" y="629" width="0.0281%" height="15" fill="rgb(232,93,24)" fg:x="1392" fg:w="1"/><text x="39.3292%" y="639.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::HuffmanTable::lookup (2 samples, 0.06%)</title><rect x="39.0792%" y="645" width="0.0561%" height="15" fill="rgb(245,30,21)" fg:x="1392" fg:w="2"/><text x="39.3292%" y="655.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::HuffmanTable::fast_lookup (1 samples, 0.03%)</title><rect x="39.1072%" y="629" width="0.0281%" height="15" fill="rgb(242,148,29)" fg:x="1393" fg:w="1"/><text x="39.3572%" y="639.50"></text></g><g><title>rust-sokoban`core::mem::replace (3 samples, 0.08%)</title><rect x="39.6968%" y="581" width="0.0842%" height="15" fill="rgb(244,153,54)" fg:x="1414" fg:w="3"/><text x="39.9468%" y="591.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.25%)</title><rect x="39.6126%" y="597" width="0.2527%" height="15" fill="rgb(252,87,22)" fg:x="1411" fg:w="9"/><text x="39.8626%" y="607.50"></text></g><g><title>rust-sokoban`core::ptr::read (3 samples, 0.08%)</title><rect x="39.7810%" y="581" width="0.0842%" height="15" fill="rgb(210,51,29)" fg:x="1417" fg:w="3"/><text x="40.0310%" y="591.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_fast (34 samples, 0.95%)</title><rect x="38.9669%" y="661" width="0.9545%" height="15" fill="rgb(242,136,47)" fg:x="1388" fg:w="34"/><text x="39.2169%" y="671.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::apply_match (28 samples, 0.79%)</title><rect x="39.1353%" y="645" width="0.7861%" height="15" fill="rgb(238,68,4)" fg:x="1394" fg:w="28"/><text x="39.3853%" y="655.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::transfer (28 samples, 0.79%)</title><rect x="39.1353%" y="629" width="0.7861%" height="15" fill="rgb(242,161,30)" fg:x="1394" fg:w="28"/><text x="39.3853%" y="639.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.39%)</title><rect x="39.5284%" y="613" width="0.3930%" height="15" fill="rgb(218,58,44)" fg:x="1408" fg:w="14"/><text x="39.7784%" y="623.50"></text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="39.8652%" y="597" width="0.0561%" height="15" fill="rgb(252,125,32)" fg:x="1420" fg:w="2"/><text x="40.1152%" y="607.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="42.0270%" y="629" width="0.0281%" height="15" fill="rgb(219,178,0)" fg:x="1497" fg:w="1"/><text x="42.2770%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="42.0550%" y="629" width="0.0281%" height="15" fill="rgb(213,152,7)" fg:x="1498" fg:w="1"/><text x="42.3050%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.31%)</title><rect x="41.8024%" y="645" width="0.3088%" height="15" fill="rgb(249,109,34)" fg:x="1489" fg:w="11"/><text x="42.0524%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="42.0831%" y="629" width="0.0281%" height="15" fill="rgb(232,96,21)" fg:x="1499" fg:w="1"/><text x="42.3331%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="42.1112%" y="645" width="0.0561%" height="15" fill="rgb(228,27,39)" fg:x="1500" fg:w="2"/><text x="42.3612%" y="655.50"></text></g><g><title>rust-sokoban`core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T (1 samples, 0.03%)</title><rect x="42.1673%" y="645" width="0.0281%" height="15" fill="rgb(211,182,52)" fg:x="1502" fg:w="1"/><text x="42.4173%" y="655.50"></text></g><g><title> N]&gt;::index (1 samples, 0.03%)</title><rect x="42.1673%" y="629" width="0.0281%" height="15" fill="rgb(234,178,38)" fg:x="1502" fg:w="1"/><text x="42.4173%" y="639.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="42.1673%" y="613" width="0.0281%" height="15" fill="rgb(221,111,3)" fg:x="1502" fg:w="1"/><text x="42.4173%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="42.1673%" y="597" width="0.0281%" height="15" fill="rgb(228,175,21)" fg:x="1502" fg:w="1"/><text x="42.4173%" y="607.50"></text></g><g><title>rust-sokoban`core::array::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T (1 samples, 0.03%)</title><rect x="42.1954%" y="645" width="0.0281%" height="15" fill="rgb(228,174,43)" fg:x="1503" fg:w="1"/><text x="42.4454%" y="655.50"></text></g><g><title> N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="42.1954%" y="629" width="0.0281%" height="15" fill="rgb(211,191,0)" fg:x="1503" fg:w="1"/><text x="42.4454%" y="639.50"></text></g><g><title>rust-sokoban`core::mem::replace (6 samples, 0.17%)</title><rect x="42.5042%" y="613" width="0.1684%" height="15" fill="rgb(253,117,3)" fg:x="1514" fg:w="6"/><text x="42.7542%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.45%)</title><rect x="42.2796%" y="629" width="0.4492%" height="15" fill="rgb(241,127,19)" fg:x="1506" fg:w="16"/><text x="42.5296%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::read (2 samples, 0.06%)</title><rect x="42.6727%" y="613" width="0.0561%" height="15" fill="rgb(218,103,12)" fg:x="1520" fg:w="2"/><text x="42.9227%" y="623.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19 samples, 0.53%)</title><rect x="42.2235%" y="645" width="0.5334%" height="15" fill="rgb(236,214,43)" fg:x="1504" fg:w="19"/><text x="42.4735%" y="655.50"></text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.03%)</title><rect x="42.7288%" y="629" width="0.0281%" height="15" fill="rgb(244,144,19)" fg:x="1522" fg:w="1"/><text x="42.9788%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.11%)</title><rect x="42.7569%" y="645" width="0.1123%" height="15" fill="rgb(246,188,10)" fg:x="1523" fg:w="4"/><text x="43.0069%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="42.8692%" y="645" width="0.0281%" height="15" fill="rgb(212,193,33)" fg:x="1527" fg:w="1"/><text x="43.1192%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (40 samples, 1.12%)</title><rect x="46.0135%" y="613" width="1.1230%" height="15" fill="rgb(241,51,29)" fg:x="1639" fg:w="40"/><text x="46.2635%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 4.55%)</title><rect x="43.3745%" y="629" width="4.5480%" height="15" fill="rgb(211,58,19)" fg:x="1545" fg:w="162"/><text x="43.6245%" y="639.50">rust-..</text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (28 samples, 0.79%)</title><rect x="47.1364%" y="613" width="0.7861%" height="15" fill="rgb(229,111,26)" fg:x="1679" fg:w="28"/><text x="47.3864%" y="623.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="47.9225%" y="629" width="0.0281%" height="15" fill="rgb(213,115,40)" fg:x="1707" fg:w="1"/><text x="48.1725%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (42 samples, 1.18%)</title><rect x="47.9506%" y="629" width="1.1791%" height="15" fill="rgb(209,56,44)" fg:x="1708" fg:w="42"/><text x="48.2006%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (18 samples, 0.51%)</title><rect x="49.1297%" y="629" width="0.5053%" height="15" fill="rgb(230,108,32)" fg:x="1750" fg:w="18"/><text x="49.3797%" y="639.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::init_tree (347 samples, 9.74%)</title><rect x="39.9214%" y="661" width="9.7417%" height="15" fill="rgb(216,165,31)" fg:x="1422" fg:w="347"/><text x="40.1714%" y="671.50">rust-sokoban`m..</text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::memset (241 samples, 6.77%)</title><rect x="42.8972%" y="645" width="6.7659%" height="15" fill="rgb(218,122,21)" fg:x="1528" fg:w="241"/><text x="43.1472%" y="655.50">rust-soko..</text></g><g><title>rust-sokoban`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (1 samples, 0.03%)</title><rect x="49.6350%" y="629" width="0.0281%" height="15" fill="rgb(223,224,47)" fg:x="1768" fg:w="1"/><text x="49.8850%" y="639.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="49.6350%" y="613" width="0.0281%" height="15" fill="rgb(238,102,44)" fg:x="1768" fg:w="1"/><text x="49.8850%" y="623.50"></text></g><g><title>rust-sokoban`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="49.6350%" y="597" width="0.0281%" height="15" fill="rgb(236,46,40)" fg:x="1768" fg:w="1"/><text x="49.8850%" y="607.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="49.8596%" y="629" width="0.0281%" height="15" fill="rgb(247,202,50)" fg:x="1776" fg:w="1"/><text x="50.1096%" y="639.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::memset (11 samples, 0.31%)</title><rect x="49.6631%" y="661" width="0.3088%" height="15" fill="rgb(209,99,20)" fg:x="1769" fg:w="11"/><text x="49.9131%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.28%)</title><rect x="49.6912%" y="645" width="0.2807%" height="15" fill="rgb(252,27,34)" fg:x="1770" fg:w="10"/><text x="49.9412%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.08%)</title><rect x="49.8877%" y="629" width="0.0842%" height="15" fill="rgb(215,206,23)" fg:x="1777" fg:w="3"/><text x="50.1377%" y="639.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::init_tree (1 samples, 0.03%)</title><rect x="50.0281%" y="629" width="0.0281%" height="15" fill="rgb(212,135,36)" fg:x="1782" fg:w="1"/><text x="50.2781%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="50.0281%" y="613" width="0.0281%" height="15" fill="rgb(240,189,1)" fg:x="1782" fg:w="1"/><text x="50.2781%" y="623.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::read_bits (8 samples, 0.22%)</title><rect x="49.9719%" y="661" width="0.2246%" height="15" fill="rgb(242,56,20)" fg:x="1780" fg:w="8"/><text x="50.2219%" y="671.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_inner::_{{closure}} (6 samples, 0.17%)</title><rect x="50.0281%" y="645" width="0.1684%" height="15" fill="rgb(247,132,33)" fg:x="1782" fg:w="6"/><text x="50.2781%" y="655.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::memset (5 samples, 0.14%)</title><rect x="50.0561%" y="629" width="0.1404%" height="15" fill="rgb(208,149,11)" fg:x="1783" fg:w="5"/><text x="50.3061%" y="639.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.14%)</title><rect x="50.0561%" y="613" width="0.1404%" height="15" fill="rgb(211,33,11)" fg:x="1783" fg:w="5"/><text x="50.3061%" y="623.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.06%)</title><rect x="50.1404%" y="597" width="0.0561%" height="15" fill="rgb(221,29,38)" fg:x="1786" fg:w="2"/><text x="50.3904%" y="607.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::read_byte (1 samples, 0.03%)</title><rect x="50.1965%" y="661" width="0.0281%" height="15" fill="rgb(206,182,49)" fg:x="1788" fg:w="1"/><text x="50.4465%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.14%)</title><rect x="57.6362%" y="629" width="0.1404%" height="15" fill="rgb(216,140,1)" fg:x="2053" fg:w="5"/><text x="57.8862%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (5 samples, 0.14%)</title><rect x="64.8793%" y="581" width="0.1404%" height="15" fill="rgb(232,57,40)" fg:x="2311" fg:w="5"/><text x="65.1293%" y="591.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (49 samples, 1.38%)</title><rect x="65.0197%" y="581" width="1.3756%" height="15" fill="rgb(224,186,18)" fg:x="2316" fg:w="49"/><text x="65.2697%" y="591.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (196 samples, 5.50%)</title><rect x="62.1842%" y="597" width="5.5025%" height="15" fill="rgb(215,121,11)" fg:x="2215" fg:w="196"/><text x="62.4342%" y="607.50">rust-so..</text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (46 samples, 1.29%)</title><rect x="66.3953%" y="581" width="1.2914%" height="15" fill="rgb(245,147,10)" fg:x="2365" fg:w="46"/><text x="66.6453%" y="591.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (25 samples, 0.70%)</title><rect x="67.6867%" y="597" width="0.7019%" height="15" fill="rgb(238,153,13)" fg:x="2411" fg:w="25"/><text x="67.9367%" y="607.50"></text></g><g><title>rust-sokoban`adler32::RollingAdler32::update_buffer (649 samples, 18.22%)</title><rect x="50.2246%" y="645" width="18.2201%" height="15" fill="rgb(233,108,0)" fg:x="1789" fg:w="649"/><text x="50.4746%" y="655.50">rust-sokoban`adler32::Rollin..</text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (380 samples, 10.67%)</title><rect x="57.7765%" y="629" width="10.6682%" height="15" fill="rgb(212,157,17)" fg:x="2058" fg:w="380"/><text x="58.0265%" y="639.50">rust-sokoban`cor..</text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (306 samples, 8.59%)</title><rect x="59.8540%" y="613" width="8.5907%" height="15" fill="rgb(225,213,38)" fg:x="2132" fg:w="306"/><text x="60.1040%" y="623.50">rust-sokoban..</text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="68.3885%" y="597" width="0.0561%" height="15" fill="rgb(248,16,11)" fg:x="2436" fg:w="2"/><text x="68.6385%" y="607.50"></text></g><g><title>rust-sokoban`core::convert::num::_&lt;impl core::convert::From&lt;u8&gt; for u32&gt;::from (6 samples, 0.17%)</title><rect x="68.4447%" y="645" width="0.1684%" height="15" fill="rgb(241,33,4)" fg:x="2438" fg:w="6"/><text x="68.6947%" y="655.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress (1,122 samples, 31.50%)</title><rect x="37.2544%" y="693" width="31.4992%" height="15" fill="rgb(222,26,43)" fg:x="1327" fg:w="1122"/><text x="37.5044%" y="703.50">rust-sokoban`miniz_oxide::inflate::core::decompress</text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_inner (1,122 samples, 31.50%)</title><rect x="37.2544%" y="677" width="31.4992%" height="15" fill="rgb(243,29,36)" fg:x="1327" fg:w="1122"/><text x="37.5044%" y="687.50">rust-sokoban`miniz_oxide::inflate::core::decompress..</text></g><g><title>rust-sokoban`miniz_oxide::shared::update_adler32 (660 samples, 18.53%)</title><rect x="50.2246%" y="661" width="18.5289%" height="15" fill="rgb(241,9,27)" fg:x="1789" fg:w="660"/><text x="50.4746%" y="671.50">rust-sokoban`miniz_oxide::sha..</text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.14%)</title><rect x="68.6131%" y="645" width="0.1404%" height="15" fill="rgb(205,117,26)" fg:x="2444" fg:w="5"/><text x="68.8631%" y="655.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="68.7535%" y="613" width="0.0281%" height="15" fill="rgb(209,80,39)" fg:x="2449" fg:w="1"/><text x="69.0035%" y="623.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="68.7535%" y="597" width="0.0281%" height="15" fill="rgb(239,155,6)" fg:x="2449" fg:w="1"/><text x="69.0035%" y="607.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="68.7535%" y="677" width="0.0561%" height="15" fill="rgb(212,104,12)" fg:x="2449" fg:w="2"/><text x="69.0035%" y="687.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="68.7535%" y="661" width="0.0561%" height="15" fill="rgb(234,204,3)" fg:x="2449" fg:w="2"/><text x="69.0035%" y="671.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="68.7535%" y="645" width="0.0561%" height="15" fill="rgb(251,218,7)" fg:x="2449" fg:w="2"/><text x="69.0035%" y="655.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="68.7535%" y="629" width="0.0561%" height="15" fill="rgb(221,81,32)" fg:x="2449" fg:w="2"/><text x="69.0035%" y="639.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;u8,&lt;alloc::vec::Vec&lt;u8&gt; as alloc::vec::spec_extend::SpecExtend&lt;u8,alloc::vec::drain::Drain&lt;u8&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="68.7816%" y="613" width="0.0281%" height="15" fill="rgb(214,152,26)" fg:x="2450" fg:w="1"/><text x="69.0316%" y="623.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;&lt;alloc::vec::Vec&lt;u8&gt; as alloc::vec::spec_extend::SpecExtend&lt;u8,alloc::vec::drain::Drain&lt;u8&gt;&gt;&gt;::spec_extend::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="68.7816%" y="597" width="0.0281%" height="15" fill="rgb(223,22,3)" fg:x="2450" fg:w="1"/><text x="69.0316%" y="607.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="68.7816%" y="581" width="0.0281%" height="15" fill="rgb(207,174,7)" fg:x="2450" fg:w="1"/><text x="69.0316%" y="591.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="68.8097%" y="661" width="0.0281%" height="15" fill="rgb(224,19,52)" fg:x="2451" fg:w="1"/><text x="69.0597%" y="671.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="68.8097%" y="645" width="0.0281%" height="15" fill="rgb(228,24,14)" fg:x="2451" fg:w="1"/><text x="69.0597%" y="655.50"></text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::decompress (1,128 samples, 31.67%)</title><rect x="37.1982%" y="709" width="31.6676%" height="15" fill="rgb(230,153,43)" fg:x="1325" fg:w="1128"/><text x="37.4482%" y="719.50">rust-sokoban`png::decoder::zlib::ZlibStream::decomp..</text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::transfer_finished_data (4 samples, 0.11%)</title><rect x="68.7535%" y="693" width="0.1123%" height="15" fill="rgb(231,106,12)" fg:x="2449" fg:w="4"/><text x="69.0035%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::drain (2 samples, 0.06%)</title><rect x="68.8097%" y="677" width="0.0561%" height="15" fill="rgb(215,92,2)" fg:x="2451" fg:w="2"/><text x="69.0597%" y="687.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="68.8377%" y="661" width="0.0281%" height="15" fill="rgb(249,143,25)" fg:x="2452" fg:w="1"/><text x="69.0877%" y="671.50"></text></g><g><title>rust-sokoban`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="68.8377%" y="645" width="0.0281%" height="15" fill="rgb(252,7,35)" fg:x="2452" fg:w="1"/><text x="69.0877%" y="655.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::append (1 samples, 0.03%)</title><rect x="68.8658%" y="693" width="0.0281%" height="15" fill="rgb(216,69,40)" fg:x="2453" fg:w="1"/><text x="69.1158%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="68.8658%" y="677" width="0.0281%" height="15" fill="rgb(240,36,33)" fg:x="2453" fg:w="1"/><text x="69.1158%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="68.8658%" y="661" width="0.0281%" height="15" fill="rgb(231,128,14)" fg:x="2453" fg:w="1"/><text x="69.1158%" y="671.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::align (1 samples, 0.03%)</title><rect x="68.8939%" y="597" width="0.0281%" height="15" fill="rgb(245,143,14)" fg:x="2454" fg:w="1"/><text x="69.1439%" y="607.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::split_off (2 samples, 0.06%)</title><rect x="68.8939%" y="693" width="0.0561%" height="15" fill="rgb(222,130,28)" fg:x="2454" fg:w="2"/><text x="69.1439%" y="703.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="68.8939%" y="677" width="0.0561%" height="15" fill="rgb(212,10,48)" fg:x="2454" fg:w="2"/><text x="69.1439%" y="687.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="68.8939%" y="661" width="0.0561%" height="15" fill="rgb(254,118,45)" fg:x="2454" fg:w="2"/><text x="69.1439%" y="671.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.06%)</title><rect x="68.8939%" y="645" width="0.0561%" height="15" fill="rgb(228,6,45)" fg:x="2454" fg:w="2"/><text x="69.1439%" y="655.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (2 samples, 0.06%)</title><rect x="68.8939%" y="629" width="0.0561%" height="15" fill="rgb(241,18,35)" fg:x="2454" fg:w="2"/><text x="69.1439%" y="639.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (2 samples, 0.06%)</title><rect x="68.8939%" y="613" width="0.0561%" height="15" fill="rgb(227,214,53)" fg:x="2454" fg:w="2"/><text x="69.1439%" y="623.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::from_size_align (1 samples, 0.03%)</title><rect x="68.9220%" y="597" width="0.0281%" height="15" fill="rgb(224,107,51)" fg:x="2455" fg:w="1"/><text x="69.1720%" y="607.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.03%)</title><rect x="68.9500%" y="693" width="0.0281%" height="15" fill="rgb(248,60,28)" fg:x="2456" fg:w="1"/><text x="69.2000%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="68.9500%" y="677" width="0.0281%" height="15" fill="rgb(249,101,23)" fg:x="2456" fg:w="1"/><text x="69.2000%" y="687.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="68.9781%" y="693" width="0.0281%" height="15" fill="rgb(228,51,19)" fg:x="2457" fg:w="1"/><text x="69.2281%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="68.9781%" y="677" width="0.0281%" height="15" fill="rgb(213,20,6)" fg:x="2457" fg:w="1"/><text x="69.2281%" y="687.50"></text></g><g><title>rust-sokoban`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="68.9781%" y="661" width="0.0281%" height="15" fill="rgb(212,124,10)" fg:x="2457" fg:w="1"/><text x="69.2281%" y="671.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="68.9781%" y="645" width="0.0281%" height="15" fill="rgb(248,3,40)" fg:x="2457" fg:w="1"/><text x="69.2281%" y="655.50"></text></g><g><title>rust-sokoban`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="68.9781%" y="629" width="0.0281%" height="15" fill="rgb(223,178,23)" fg:x="2457" fg:w="1"/><text x="69.2281%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.03%)</title><rect x="68.9781%" y="613" width="0.0281%" height="15" fill="rgb(240,132,45)" fg:x="2457" fg:w="1"/><text x="69.2281%" y="623.50"></text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::finish_compressed_chunks (6 samples, 0.17%)</title><rect x="68.8658%" y="709" width="0.1684%" height="15" fill="rgb(245,164,36)" fg:x="2453" fg:w="6"/><text x="69.1158%" y="719.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress (1 samples, 0.03%)</title><rect x="69.0062%" y="693" width="0.0281%" height="15" fill="rgb(231,188,53)" fg:x="2458" fg:w="1"/><text x="69.2562%" y="703.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::decompress_inner (1 samples, 0.03%)</title><rect x="69.0062%" y="677" width="0.0281%" height="15" fill="rgb(237,198,39)" fg:x="2458" fg:w="1"/><text x="69.2562%" y="687.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="69.0062%" y="661" width="0.0281%" height="15" fill="rgb(223,120,35)" fg:x="2458" fg:w="1"/><text x="69.2562%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="69.0062%" y="645" width="0.0281%" height="15" fill="rgb(253,107,49)" fg:x="2458" fg:w="1"/><text x="69.2562%" y="655.50"></text></g><g><title>rust-sokoban`png::decoder::ReadDecoder&lt;R&gt;::decode_next (1,224 samples, 34.36%)</title><rect x="34.6996%" y="757" width="34.3627%" height="15" fill="rgb(216,44,31)" fg:x="1236" fg:w="1224"/><text x="34.9496%" y="767.50">rust-sokoban`png::decoder::ReadDecoder&lt;R&gt;::decode_next</text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::update (1,221 samples, 34.28%)</title><rect x="34.7838%" y="741" width="34.2785%" height="15" fill="rgb(253,87,21)" fg:x="1239" fg:w="1221"/><text x="35.0338%" y="751.50">rust-sokoban`png::decoder::stream::StreamingDecoder::upd..</text></g><g><title>rust-sokoban`png::decoder::stream::StreamingDecoder::next_state (1,207 samples, 33.89%)</title><rect x="35.1769%" y="725" width="33.8855%" height="15" fill="rgb(226,18,2)" fg:x="1253" fg:w="1207"/><text x="35.4269%" y="735.50">rust-sokoban`png::decoder::stream::StreamingDecoder::ne..</text></g><g><title>rust-sokoban`png::decoder::zlib::ZlibStream::reset (1 samples, 0.03%)</title><rect x="69.0343%" y="709" width="0.0281%" height="15" fill="rgb(216,8,46)" fg:x="2459" fg:w="1"/><text x="69.2843%" y="719.50"></text></g><g><title>rust-sokoban`miniz_oxide::inflate::core::HuffmanTable::new (1 samples, 0.03%)</title><rect x="69.0343%" y="693" width="0.0281%" height="15" fill="rgb(226,140,39)" fg:x="2459" fg:w="1"/><text x="69.2843%" y="703.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_pass (2 samples, 0.06%)</title><rect x="69.0623%" y="757" width="0.0561%" height="15" fill="rgb(221,194,54)" fg:x="2460" fg:w="2"/><text x="69.3123%" y="767.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="69.0623%" y="741" width="0.0561%" height="15" fill="rgb(213,92,11)" fg:x="2460" fg:w="2"/><text x="69.3123%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="69.0623%" y="725" width="0.0561%" height="15" fill="rgb(229,162,46)" fg:x="2460" fg:w="2"/><text x="69.3123%" y="735.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="69.0904%" y="709" width="0.0281%" height="15" fill="rgb(214,111,36)" fg:x="2461" fg:w="1"/><text x="69.3404%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="71.2240%" y="645" width="0.0281%" height="15" fill="rgb(207,6,21)" fg:x="2537" fg:w="1"/><text x="71.4740%" y="655.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="71.2240%" y="677" width="0.0561%" height="15" fill="rgb(213,127,38)" fg:x="2537" fg:w="2"/><text x="71.4740%" y="687.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="71.2240%" y="661" width="0.0561%" height="15" fill="rgb(238,118,32)" fg:x="2537" fg:w="2"/><text x="71.4740%" y="671.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="71.2521%" y="645" width="0.0281%" height="15" fill="rgb(240,139,39)" fg:x="2538" fg:w="1"/><text x="71.5021%" y="655.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.20%)</title><rect x="71.1679%" y="741" width="0.1965%" height="15" fill="rgb(235,10,37)" fg:x="2535" fg:w="7"/><text x="71.4179%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (7 samples, 0.20%)</title><rect x="71.1679%" y="725" width="0.1965%" height="15" fill="rgb(249,171,38)" fg:x="2535" fg:w="7"/><text x="71.4179%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (5 samples, 0.14%)</title><rect x="71.2240%" y="709" width="0.1404%" height="15" fill="rgb(242,144,32)" fg:x="2537" fg:w="5"/><text x="71.4740%" y="719.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (5 samples, 0.14%)</title><rect x="71.2240%" y="693" width="0.1404%" height="15" fill="rgb(217,117,21)" fg:x="2537" fg:w="5"/><text x="71.4740%" y="703.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.08%)</title><rect x="71.2802%" y="677" width="0.0842%" height="15" fill="rgb(249,87,1)" fg:x="2539" fg:w="3"/><text x="71.5302%" y="687.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="71.3083%" y="661" width="0.0561%" height="15" fill="rgb(248,196,48)" fg:x="2540" fg:w="2"/><text x="71.5583%" y="671.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="71.3363%" y="645" width="0.0281%" height="15" fill="rgb(251,206,33)" fg:x="2541" fg:w="1"/><text x="71.5863%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::write (1 samples, 0.03%)</title><rect x="71.4206%" y="725" width="0.0281%" height="15" fill="rgb(232,141,28)" fg:x="2544" fg:w="1"/><text x="71.6706%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="71.3644%" y="741" width="0.1684%" height="15" fill="rgb(209,167,14)" fg:x="2542" fg:w="6"/><text x="71.6144%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (3 samples, 0.08%)</title><rect x="71.4486%" y="725" width="0.0842%" height="15" fill="rgb(225,11,50)" fg:x="2545" fg:w="3"/><text x="71.6986%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (3 samples, 0.08%)</title><rect x="71.4486%" y="709" width="0.0842%" height="15" fill="rgb(209,50,20)" fg:x="2545" fg:w="3"/><text x="71.6986%" y="719.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="71.4767%" y="693" width="0.0561%" height="15" fill="rgb(212,17,46)" fg:x="2546" fg:w="2"/><text x="71.7267%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (2 samples, 0.06%)</title><rect x="71.4767%" y="677" width="0.0561%" height="15" fill="rgb(216,101,39)" fg:x="2546" fg:w="2"/><text x="71.7267%" y="687.50"></text></g><g><title>rust-sokoban`core::convert::num::_&lt;impl core::convert::From&lt;u8&gt; for i16&gt;::from (1 samples, 0.03%)</title><rect x="71.5328%" y="741" width="0.0281%" height="15" fill="rgb(212,228,48)" fg:x="2548" fg:w="1"/><text x="71.7828%" y="751.50"></text></g><g><title>rust-sokoban`core::mem::replace (45 samples, 1.26%)</title><rect x="73.1331%" y="709" width="1.2633%" height="15" fill="rgb(250,6,50)" fg:x="2605" fg:w="45"/><text x="73.3831%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::read (55 samples, 1.54%)</title><rect x="74.3964%" y="709" width="1.5441%" height="15" fill="rgb(250,160,48)" fg:x="2650" fg:w="55"/><text x="74.6464%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (153 samples, 4.30%)</title><rect x="71.7855%" y="725" width="4.2953%" height="15" fill="rgb(244,216,33)" fg:x="2557" fg:w="153"/><text x="72.0355%" y="735.50">rust-..</text></g><g><title>rust-sokoban`core::ptr::write (5 samples, 0.14%)</title><rect x="75.9405%" y="709" width="0.1404%" height="15" fill="rgb(207,157,5)" fg:x="2705" fg:w="5"/><text x="76.1905%" y="719.50"></text></g><g><title>rust-sokoban`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (20 samples, 0.56%)</title><rect x="76.0809%" y="725" width="0.5615%" height="15" fill="rgb(228,199,8)" fg:x="2710" fg:w="20"/><text x="76.3309%" y="735.50"></text></g><g><title>rust-sokoban`core::clone::impls::_&lt;impl core::clone::Clone for usize&gt;::clone (7 samples, 0.20%)</title><rect x="76.6423%" y="725" width="0.1965%" height="15" fill="rgb(227,80,20)" fg:x="2730" fg:w="7"/><text x="76.8923%" y="735.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (200 samples, 5.61%)</title><rect x="71.5609%" y="741" width="5.6148%" height="15" fill="rgb(222,9,33)" fg:x="2549" fg:w="200"/><text x="71.8109%" y="751.50">rust-so..</text></g><g><title>rust-sokoban`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (12 samples, 0.34%)</title><rect x="76.8389%" y="725" width="0.3369%" height="15" fill="rgb(239,44,28)" fg:x="2737" fg:w="12"/><text x="77.0889%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.08%)</title><rect x="77.1757%" y="741" width="0.0842%" height="15" fill="rgb(249,187,43)" fg:x="2749" fg:w="3"/><text x="77.4257%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.08%)</title><rect x="77.1757%" y="725" width="0.0842%" height="15" fill="rgb(216,141,28)" fg:x="2749" fg:w="3"/><text x="77.4257%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="77.2038%" y="709" width="0.0561%" height="15" fill="rgb(230,154,53)" fg:x="2750" fg:w="2"/><text x="77.4538%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.06%)</title><rect x="77.2038%" y="693" width="0.0561%" height="15" fill="rgb(227,82,4)" fg:x="2750" fg:w="2"/><text x="77.4538%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="77.2319%" y="677" width="0.0281%" height="15" fill="rgb(220,107,16)" fg:x="2751" fg:w="1"/><text x="77.4819%" y="687.50"></text></g><g><title>rust-sokoban`png::filter::filter_paeth (9 samples, 0.25%)</title><rect x="77.2600%" y="741" width="0.2527%" height="15" fill="rgb(207,187,2)" fg:x="2752" fg:w="9"/><text x="77.5100%" y="751.50"></text></g><g><title>rust-sokoban`core::num::_&lt;impl i16&gt;::abs (1 samples, 0.03%)</title><rect x="77.4846%" y="725" width="0.0281%" height="15" fill="rgb(210,162,52)" fg:x="2760" fg:w="1"/><text x="77.7346%" y="735.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (1,568 samples, 44.02%)</title><rect x="33.5486%" y="773" width="44.0202%" height="15" fill="rgb(217,216,49)" fg:x="1195" fg:w="1568"/><text x="33.7986%" y="783.50">rust-sokoban`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row</text></g><g><title>rust-sokoban`png::filter::unfilter (301 samples, 8.45%)</title><rect x="69.1185%" y="757" width="8.4503%" height="15" fill="rgb(218,146,49)" fg:x="2462" fg:w="301"/><text x="69.3685%" y="767.50">rust-sokoban..</text></g><g><title>rust-sokoban`png::filter::unfilter::require_length (2 samples, 0.06%)</title><rect x="77.5126%" y="741" width="0.0561%" height="15" fill="rgb(216,55,40)" fg:x="2761" fg:w="2"/><text x="77.7626%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get (2 samples, 0.06%)</title><rect x="77.5126%" y="725" width="0.0561%" height="15" fill="rgb(208,196,21)" fg:x="2761" fg:w="2"/><text x="77.7626%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.06%)</title><rect x="77.5126%" y="709" width="0.0561%" height="15" fill="rgb(242,117,42)" fg:x="2761" fg:w="2"/><text x="77.7626%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.06%)</title><rect x="77.5126%" y="693" width="0.0561%" height="15" fill="rgb(210,11,23)" fg:x="2761" fg:w="2"/><text x="77.7626%" y="703.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="77.5407%" y="677" width="0.0281%" height="15" fill="rgb(217,110,2)" fg:x="2762" fg:w="1"/><text x="77.7907%" y="687.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="77.5407%" y="661" width="0.0281%" height="15" fill="rgb(229,77,54)" fg:x="2762" fg:w="1"/><text x="77.7907%" y="671.50"></text></g><g><title>rust-sokoban`core::cmp::min (4 samples, 0.11%)</title><rect x="77.5969%" y="741" width="0.1123%" height="15" fill="rgb(218,53,16)" fg:x="2764" fg:w="4"/><text x="77.8469%" y="751.50"></text></g><g><title>rust-sokoban`core::cmp::Ord::min (3 samples, 0.08%)</title><rect x="77.6249%" y="725" width="0.0842%" height="15" fill="rgb(215,38,13)" fg:x="2765" fg:w="3"/><text x="77.8749%" y="735.50"></text></g><g><title>rust-sokoban`core::cmp::min_by (2 samples, 0.06%)</title><rect x="77.6530%" y="709" width="0.0561%" height="15" fill="rgb(235,42,18)" fg:x="2766" fg:w="2"/><text x="77.9030%" y="719.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="77.7092%" y="741" width="0.0281%" height="15" fill="rgb(219,66,54)" fg:x="2768" fg:w="1"/><text x="77.9592%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="77.7372%" y="741" width="0.0281%" height="15" fill="rgb(222,205,4)" fg:x="2769" fg:w="1"/><text x="77.9872%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="77.7653%" y="741" width="0.0281%" height="15" fill="rgb(227,213,46)" fg:x="2770" fg:w="1"/><text x="78.0153%" y="751.50"></text></g><g><title>rust-sokoban`core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="77.7653%" y="725" width="0.0281%" height="15" fill="rgb(250,145,42)" fg:x="2770" fg:w="1"/><text x="78.0153%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (1 samples, 0.03%)</title><rect x="77.7934%" y="741" width="0.0281%" height="15" fill="rgb(219,15,2)" fg:x="2771" fg:w="1"/><text x="78.0434%" y="751.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.03%)</title><rect x="77.7934%" y="725" width="0.0281%" height="15" fill="rgb(231,181,52)" fg:x="2771" fg:w="1"/><text x="78.0434%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="77.7934%" y="709" width="0.0281%" height="15" fill="rgb(235,1,42)" fg:x="2771" fg:w="1"/><text x="78.0434%" y="719.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="77.8495%" y="693" width="0.0561%" height="15" fill="rgb(249,88,27)" fg:x="2773" fg:w="2"/><text x="78.0995%" y="703.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="77.8776%" y="677" width="0.0281%" height="15" fill="rgb(235,145,16)" fg:x="2774" fg:w="1"/><text x="78.1276%" y="687.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_row (1,607 samples, 45.12%)</title><rect x="32.8186%" y="821" width="45.1151%" height="15" fill="rgb(237,114,19)" fg:x="1169" fg:w="1607"/><text x="33.0686%" y="831.50">rust-sokoban`png::decoder::Reader&lt;R&gt;::next_row</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_interlaced_row (1,605 samples, 45.06%)</title><rect x="32.8748%" y="805" width="45.0590%" height="15" fill="rgb(238,51,50)" fg:x="1171" fg:w="1605"/><text x="33.1248%" y="815.50">rust-sokoban`png::decoder::Reader&lt;R&gt;::next_interlaced_row</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (1,605 samples, 45.06%)</title><rect x="32.8748%" y="789" width="45.0590%" height="15" fill="rgb(205,194,25)" fg:x="1171" fg:w="1605"/><text x="33.1248%" y="799.50">rust-sokoban`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl</text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (13 samples, 0.36%)</title><rect x="77.5688%" y="773" width="0.3650%" height="15" fill="rgb(215,203,17)" fg:x="2763" fg:w="13"/><text x="77.8188%" y="783.50"></text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (13 samples, 0.36%)</title><rect x="77.5688%" y="757" width="0.3650%" height="15" fill="rgb(233,112,49)" fg:x="2763" fg:w="13"/><text x="77.8188%" y="767.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.11%)</title><rect x="77.8214%" y="741" width="0.1123%" height="15" fill="rgb(241,130,26)" fg:x="2772" fg:w="4"/><text x="78.0714%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.11%)</title><rect x="77.8214%" y="725" width="0.1123%" height="15" fill="rgb(252,223,19)" fg:x="2772" fg:w="4"/><text x="78.0714%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.08%)</title><rect x="77.8495%" y="709" width="0.0842%" height="15" fill="rgb(211,95,25)" fg:x="2773" fg:w="3"/><text x="78.0995%" y="719.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="77.9057%" y="693" width="0.0281%" height="15" fill="rgb(251,182,27)" fg:x="2775" fg:w="1"/><text x="78.1557%" y="703.50"></text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::reset_current (1 samples, 0.03%)</title><rect x="77.9337%" y="821" width="0.0281%" height="15" fill="rgb(238,24,4)" fg:x="2776" fg:w="1"/><text x="78.1837%" y="831.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.03%)</title><rect x="77.9337%" y="805" width="0.0281%" height="15" fill="rgb(224,220,25)" fg:x="2776" fg:w="1"/><text x="78.1837%" y="815.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.03%)</title><rect x="77.9337%" y="789" width="0.0281%" height="15" fill="rgb(239,133,26)" fg:x="2776" fg:w="1"/><text x="78.1837%" y="799.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="77.9337%" y="773" width="0.0281%" height="15" fill="rgb(211,94,48)" fg:x="2776" fg:w="1"/><text x="78.1837%" y="783.50"></text></g><g><title>rust-sokoban`core::cmp::min (2 samples, 0.06%)</title><rect x="77.9618%" y="805" width="0.0561%" height="15" fill="rgb(239,87,6)" fg:x="2777" fg:w="2"/><text x="78.2118%" y="815.50"></text></g><g><title>rust-sokoban`core::cmp::Ord::min (2 samples, 0.06%)</title><rect x="77.9618%" y="789" width="0.0561%" height="15" fill="rgb(227,62,0)" fg:x="2777" fg:w="2"/><text x="78.2118%" y="799.50"></text></g><g><title>rust-sokoban`core::cmp::min_by (2 samples, 0.06%)</title><rect x="77.9618%" y="773" width="0.0561%" height="15" fill="rgb(211,226,4)" fg:x="2777" fg:w="2"/><text x="78.2118%" y="783.50"></text></g><g><title>rust-sokoban`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="77.9899%" y="757" width="0.0281%" height="15" fill="rgb(253,38,52)" fg:x="2778" fg:w="1"/><text x="78.2399%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::read (3 samples, 0.08%)</title><rect x="78.0180%" y="805" width="0.0842%" height="15" fill="rgb(229,126,40)" fg:x="2779" fg:w="3"/><text x="78.2680%" y="815.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="78.1022%" y="805" width="0.0281%" height="15" fill="rgb(229,165,44)" fg:x="2782" fg:w="1"/><text x="78.3522%" y="815.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut (4 samples, 0.11%)</title><rect x="78.1303%" y="805" width="0.1123%" height="15" fill="rgb(247,95,47)" fg:x="2783" fg:w="4"/><text x="78.3803%" y="815.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (4 samples, 0.11%)</title><rect x="78.1303%" y="789" width="0.1123%" height="15" fill="rgb(216,140,30)" fg:x="2783" fg:w="4"/><text x="78.3803%" y="799.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (3 samples, 0.08%)</title><rect x="78.1583%" y="773" width="0.0842%" height="15" fill="rgb(246,214,8)" fg:x="2784" fg:w="3"/><text x="78.4083%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (2 samples, 0.06%)</title><rect x="78.1864%" y="757" width="0.0561%" height="15" fill="rgb(227,224,15)" fg:x="2785" fg:w="2"/><text x="78.4364%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="78.2987%" y="741" width="0.0281%" height="15" fill="rgb(233,175,4)" fg:x="2789" fg:w="1"/><text x="78.5487%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.14%)</title><rect x="78.2706%" y="757" width="0.1404%" height="15" fill="rgb(221,66,45)" fg:x="2788" fg:w="5"/><text x="78.5206%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (3 samples, 0.08%)</title><rect x="78.3268%" y="741" width="0.0842%" height="15" fill="rgb(221,178,18)" fg:x="2790" fg:w="3"/><text x="78.5768%" y="751.50"></text></g><g><title>rust-sokoban`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (1,635 samples, 45.90%)</title><rect x="32.5379%" y="853" width="45.9012%" height="15" fill="rgb(213,81,29)" fg:x="1159" fg:w="1635"/><text x="32.7879%" y="863.50">rust-sokoban`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecod..</text></g><g><title>rust-sokoban`png::decoder::Reader&lt;R&gt;::next_frame (1,634 samples, 45.87%)</title><rect x="32.5660%" y="837" width="45.8731%" height="15" fill="rgb(220,89,49)" fg:x="1160" fg:w="1634"/><text x="32.8160%" y="847.50">rust-sokoban`png::decoder::Reader&lt;R&gt;::next_frame</text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (17 samples, 0.48%)</title><rect x="77.9618%" y="821" width="0.4773%" height="15" fill="rgb(227,60,33)" fg:x="2777" fg:w="17"/><text x="78.2118%" y="831.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.20%)</title><rect x="78.2426%" y="805" width="0.1965%" height="15" fill="rgb(205,113,12)" fg:x="2787" fg:w="7"/><text x="78.4926%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.20%)</title><rect x="78.2426%" y="789" width="0.1965%" height="15" fill="rgb(211,32,1)" fg:x="2787" fg:w="7"/><text x="78.4926%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.20%)</title><rect x="78.2426%" y="773" width="0.1965%" height="15" fill="rgb(246,2,12)" fg:x="2787" fg:w="7"/><text x="78.4926%" y="783.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="78.4110%" y="757" width="0.0281%" height="15" fill="rgb(243,37,27)" fg:x="2793" fg:w="1"/><text x="78.6610%" y="767.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="78.4391%" y="853" width="0.0281%" height="15" fill="rgb(248,211,31)" fg:x="2794" fg:w="1"/><text x="78.6891%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="78.4391%" y="837" width="0.0281%" height="15" fill="rgb(242,146,47)" fg:x="2794" fg:w="1"/><text x="78.6891%" y="847.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="78.4391%" y="821" width="0.0281%" height="15" fill="rgb(206,70,20)" fg:x="2794" fg:w="1"/><text x="78.6891%" y="831.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="78.4391%" y="805" width="0.0281%" height="15" fill="rgb(215,10,51)" fg:x="2794" fg:w="1"/><text x="78.6891%" y="815.50"></text></g><g><title>rust-sokoban`alloc::vec::from_elem (1 samples, 0.03%)</title><rect x="78.4672%" y="853" width="0.0281%" height="15" fill="rgb(243,178,53)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="863.50"></text></g><g><title>rust-sokoban`&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.03%)</title><rect x="78.4672%" y="837" width="0.0281%" height="15" fill="rgb(233,221,20)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="847.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.03%)</title><rect x="78.4672%" y="821" width="0.0281%" height="15" fill="rgb(218,95,35)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="831.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="78.4672%" y="805" width="0.0281%" height="15" fill="rgb(229,13,5)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="815.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="78.4672%" y="789" width="0.0281%" height="15" fill="rgb(252,164,30)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="799.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="78.4672%" y="773" width="0.0281%" height="15" fill="rgb(232,68,36)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="783.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::from_size_align (1 samples, 0.03%)</title><rect x="78.4672%" y="757" width="0.0281%" height="15" fill="rgb(219,59,54)" fg:x="2795" fg:w="1"/><text x="78.7172%" y="767.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_bytes_with_format (2,446 samples, 68.67%)</title><rect x="9.8540%" y="933" width="68.6693%" height="15" fill="rgb(250,92,33)" fg:x="351" fg:w="2446"/><text x="10.1040%" y="943.50">rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_bytes_with_format</text></g><g><title>rust-sokoban`image::io::free_functions::load (1,742 samples, 48.91%)</title><rect x="29.6182%" y="917" width="48.9051%" height="15" fill="rgb(229,162,54)" fg:x="1055" fg:w="1742"/><text x="29.8682%" y="927.50">rust-sokoban`image::io::free_functions::load</text></g><g><title>rust-sokoban`image::dynimage::DynamicImage::from_decoder (1,638 samples, 45.99%)</title><rect x="32.5379%" y="901" width="45.9854%" height="15" fill="rgb(244,114,52)" fg:x="1159" fg:w="1638"/><text x="32.7879%" y="911.50">rust-sokoban`image::dynimage::DynamicImage::from_decoder</text></g><g><title>rust-sokoban`image::dynimage::decoder_to_image (1,638 samples, 45.99%)</title><rect x="32.5379%" y="885" width="45.9854%" height="15" fill="rgb(212,211,43)" fg:x="1159" fg:w="1638"/><text x="32.7879%" y="895.50">rust-sokoban`image::dynimage::decoder_to_image</text></g><g><title>rust-sokoban`image::image::decoder_to_vec (1,638 samples, 45.99%)</title><rect x="32.5379%" y="869" width="45.9854%" height="15" fill="rgb(226,147,8)" fg:x="1159" fg:w="1638"/><text x="32.7879%" y="879.50">rust-sokoban`image::image::decoder_to_vec</text></g><g><title>rust-sokoban`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="78.4952%" y="853" width="0.0281%" height="15" fill="rgb(226,23,13)" fg:x="2796" fg:w="1"/><text x="78.7452%" y="863.50"></text></g><g><title>rust-sokoban`&lt;ggez::filesystem::File as std::io::Read&gt;::read (14 samples, 0.39%)</title><rect x="78.5233%" y="901" width="0.3930%" height="15" fill="rgb(240,63,4)" fg:x="2797" fg:w="14"/><text x="78.7733%" y="911.50"></text></g><g><title>rust-sokoban`std::io::impls::_&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (14 samples, 0.39%)</title><rect x="78.5233%" y="885" width="0.3930%" height="15" fill="rgb(221,1,32)" fg:x="2797" fg:w="14"/><text x="78.7733%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`read (14 samples, 0.39%)</title><rect x="78.5233%" y="869" width="0.3930%" height="15" fill="rgb(242,117,10)" fg:x="2797" fg:w="14"/><text x="78.7733%" y="879.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="78.9163%" y="837" width="0.0561%" height="15" fill="rgb(249,172,44)" fg:x="2811" fg:w="2"/><text x="79.1663%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.06%)</title><rect x="78.9163%" y="821" width="0.0561%" height="15" fill="rgb(244,46,45)" fg:x="2811" fg:w="2"/><text x="79.1663%" y="831.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::grow_impl (2 samples, 0.06%)</title><rect x="78.9163%" y="805" width="0.0561%" height="15" fill="rgb(206,43,17)" fg:x="2811" fg:w="2"/><text x="79.1663%" y="815.50"></text></g><g><title>rust-sokoban`alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="78.9444%" y="789" width="0.0281%" height="15" fill="rgb(239,218,39)" fg:x="2812" fg:w="1"/><text x="79.1944%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="78.9444%" y="773" width="0.0281%" height="15" fill="rgb(208,169,54)" fg:x="2812" fg:w="1"/><text x="79.1944%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="78.9444%" y="757" width="0.0281%" height="15" fill="rgb(247,25,42)" fg:x="2812" fg:w="1"/><text x="79.1944%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="78.9444%" y="741" width="0.0281%" height="15" fill="rgb(226,23,31)" fg:x="2812" fg:w="1"/><text x="79.1944%" y="751.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::new (2 samples, 0.06%)</title><rect x="78.9725%" y="821" width="0.0561%" height="15" fill="rgb(247,16,28)" fg:x="2813" fg:w="2"/><text x="79.2225%" y="831.50"></text></g><g><title>rust-sokoban`std::io::Read::read_to_end (19 samples, 0.53%)</title><rect x="78.5233%" y="933" width="0.5334%" height="15" fill="rgb(231,147,38)" fg:x="2797" fg:w="19"/><text x="78.7733%" y="943.50"></text></g><g><title>rust-sokoban`std::io::default_read_to_end (19 samples, 0.53%)</title><rect x="78.5233%" y="917" width="0.5334%" height="15" fill="rgb(253,81,48)" fg:x="2797" fg:w="19"/><text x="78.7733%" y="927.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.14%)</title><rect x="78.9163%" y="901" width="0.1404%" height="15" fill="rgb(249,222,43)" fg:x="2811" fg:w="5"/><text x="79.1663%" y="911.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.14%)</title><rect x="78.9163%" y="885" width="0.1404%" height="15" fill="rgb(221,3,27)" fg:x="2811" fg:w="5"/><text x="79.1663%" y="895.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.14%)</title><rect x="78.9163%" y="869" width="0.1404%" height="15" fill="rgb(228,180,5)" fg:x="2811" fg:w="5"/><text x="79.1663%" y="879.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.14%)</title><rect x="78.9163%" y="853" width="0.1404%" height="15" fill="rgb(227,131,42)" fg:x="2811" fg:w="5"/><text x="79.1663%" y="863.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (3 samples, 0.08%)</title><rect x="78.9725%" y="837" width="0.0842%" height="15" fill="rgb(212,3,39)" fg:x="2813" fg:w="3"/><text x="79.2225%" y="847.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="79.0286%" y="821" width="0.0281%" height="15" fill="rgb(226,45,5)" fg:x="2815" fg:w="1"/><text x="79.2786%" y="831.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.03%)</title><rect x="79.0286%" y="805" width="0.0281%" height="15" fill="rgb(215,167,45)" fg:x="2815" fg:w="1"/><text x="79.2786%" y="815.50"></text></g><g><title>rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::new (2,555 samples, 71.73%)</title><rect x="7.3554%" y="949" width="71.7294%" height="15" fill="rgb(250,218,53)" fg:x="262" fg:w="2555"/><text x="7.6054%" y="959.50">rust-sokoban`ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::new</text></g><g><title>rust-sokoban`std::path::_&lt;impl core::convert::AsRef&lt;std::path::Path&gt; for alloc::string::String&gt;::as_ref (1 samples, 0.03%)</title><rect x="79.0567%" y="933" width="0.0281%" height="15" fill="rgb(207,140,0)" fg:x="2816" fg:w="1"/><text x="79.3067%" y="943.50"></text></g><g><title>rust-sokoban`std::path::Path::new (1 samples, 0.03%)</title><rect x="79.0567%" y="917" width="0.0281%" height="15" fill="rgb(238,133,51)" fg:x="2816" fg:w="1"/><text x="79.3067%" y="927.50"></text></g><g><title>rust-sokoban`std::ffi::os_str::_&lt;impl core::convert::AsRef&lt;std::ffi::os_str::OsStr&gt; for alloc::string::String&gt;::as_ref (1 samples, 0.03%)</title><rect x="79.0567%" y="901" width="0.0281%" height="15" fill="rgb(218,203,53)" fg:x="2816" fg:w="1"/><text x="79.3067%" y="911.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d99a00 (1 samples, 0.03%)</title><rect x="79.1971%" y="661" width="0.0281%" height="15" fill="rgb(226,184,25)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (1 samples, 0.03%)</title><rect x="79.1971%" y="645" width="0.0281%" height="15" fill="rgb(231,121,21)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (1 samples, 0.03%)</title><rect x="79.1971%" y="629" width="0.0281%" height="15" fill="rgb(251,14,34)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="639.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.03%)</title><rect x="79.1971%" y="613" width="0.0281%" height="15" fill="rgb(249,193,11)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="623.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (1 samples, 0.03%)</title><rect x="79.1971%" y="597" width="0.0281%" height="15" fill="rgb(220,172,37)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="607.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.03%)</title><rect x="79.1971%" y="581" width="0.0281%" height="15" fill="rgb(231,229,43)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="591.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.03%)</title><rect x="79.1971%" y="565" width="0.0281%" height="15" fill="rgb(250,161,5)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="79.1971%" y="549" width="0.0281%" height="15" fill="rgb(218,225,18)" fg:x="2821" fg:w="1"/><text x="79.4471%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (2 samples, 0.06%)</title><rect x="79.1971%" y="693" width="0.0561%" height="15" fill="rgb(245,45,42)" fg:x="2821" fg:w="2"/><text x="79.4471%" y="703.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (2 samples, 0.06%)</title><rect x="79.1971%" y="677" width="0.0561%" height="15" fill="rgb(211,115,1)" fg:x="2821" fg:w="2"/><text x="79.4471%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="79.2252%" y="661" width="0.0281%" height="15" fill="rgb(248,133,52)" fg:x="2822" fg:w="1"/><text x="79.4752%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="79.2252%" y="645" width="0.0281%" height="15" fill="rgb(238,100,21)" fg:x="2822" fg:w="1"/><text x="79.4752%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="79.2252%" y="629" width="0.0281%" height="15" fill="rgb(247,144,11)" fg:x="2822" fg:w="1"/><text x="79.4752%" y="639.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRTextureResource::dealloc (9 samples, 0.25%)</title><rect x="79.1690%" y="757" width="0.2527%" height="15" fill="rgb(206,164,16)" fg:x="2820" fg:w="9"/><text x="79.4190%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d4064320 (9 samples, 0.25%)</title><rect x="79.1690%" y="741" width="0.2527%" height="15" fill="rgb(222,34,3)" fg:x="2820" fg:w="9"/><text x="79.4190%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d4071c58 (8 samples, 0.22%)</title><rect x="79.1971%" y="725" width="0.2246%" height="15" fill="rgb(248,82,4)" fg:x="2821" fg:w="8"/><text x="79.4471%" y="735.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (8 samples, 0.22%)</title><rect x="79.1971%" y="709" width="0.2246%" height="15" fill="rgb(228,81,46)" fg:x="2821" fg:w="8"/><text x="79.4471%" y="719.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (6 samples, 0.17%)</title><rect x="79.2532%" y="693" width="0.1684%" height="15" fill="rgb(227,67,47)" fg:x="2823" fg:w="6"/><text x="79.5032%" y="703.50"></text></g><g><title>CoreFoundation`_CFRelease (6 samples, 0.17%)</title><rect x="79.2532%" y="677" width="0.1684%" height="15" fill="rgb(215,93,53)" fg:x="2823" fg:w="6"/><text x="79.5032%" y="687.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (6 samples, 0.17%)</title><rect x="79.2532%" y="661" width="0.1684%" height="15" fill="rgb(248,194,39)" fg:x="2823" fg:w="6"/><text x="79.5032%" y="671.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.17%)</title><rect x="79.2532%" y="645" width="0.1684%" height="15" fill="rgb(215,5,19)" fg:x="2823" fg:w="6"/><text x="79.5032%" y="655.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.17%)</title><rect x="79.2532%" y="629" width="0.1684%" height="15" fill="rgb(226,215,51)" fg:x="2823" fg:w="6"/><text x="79.5032%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.17%)</title><rect x="79.2532%" y="613" width="0.1684%" height="15" fill="rgb(225,56,26)" fg:x="2823" fg:w="6"/><text x="79.5032%" y="623.50"></text></g><g><title>GLEngine`gleFreeTextureObject (10 samples, 0.28%)</title><rect x="79.1690%" y="821" width="0.2807%" height="15" fill="rgb(222,75,29)" fg:x="2820" fg:w="10"/><text x="79.4190%" y="831.50"></text></g><g><title>libGFXShared.dylib`gfxDestroyPluginTexture (10 samples, 0.28%)</title><rect x="79.1690%" y="805" width="0.2807%" height="15" fill="rgb(236,139,6)" fg:x="2820" fg:w="10"/><text x="79.4190%" y="815.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldDestroyTexture (10 samples, 0.28%)</title><rect x="79.1690%" y="789" width="0.2807%" height="15" fill="rgb(223,137,36)" fg:x="2820" fg:w="10"/><text x="79.4190%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::dealloc (10 samples, 0.28%)</title><rect x="79.1690%" y="773" width="0.2807%" height="15" fill="rgb(226,99,2)" fg:x="2820" fg:w="10"/><text x="79.4190%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="79.4217%" y="757" width="0.0281%" height="15" fill="rgb(206,133,23)" fg:x="2829" fg:w="1"/><text x="79.6717%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="79.4217%" y="741" width="0.0281%" height="15" fill="rgb(243,173,15)" fg:x="2829" fg:w="1"/><text x="79.6717%" y="751.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::cleanup::_{{closure}} (14 samples, 0.39%)</title><rect x="79.0848%" y="885" width="0.3930%" height="15" fill="rgb(228,69,28)" fg:x="2817" fg:w="14"/><text x="79.3348%" y="895.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::DeleteTextures (14 samples, 0.39%)</title><rect x="79.0848%" y="869" width="0.3930%" height="15" fill="rgb(212,51,22)" fg:x="2817" fg:w="14"/><text x="79.3348%" y="879.50"></text></g><g><title>GLEngine`glDeleteTextures_Exec (14 samples, 0.39%)</title><rect x="79.0848%" y="853" width="0.3930%" height="15" fill="rgb(227,113,0)" fg:x="2817" fg:w="14"/><text x="79.3348%" y="863.50"></text></g><g><title>GLEngine`gleUnbindDeleteHashNamesAndObjects (11 samples, 0.31%)</title><rect x="79.1690%" y="837" width="0.3088%" height="15" fill="rgb(252,84,27)" fg:x="2820" fg:w="11"/><text x="79.4190%" y="847.50"></text></g><g><title>GLRendererFloat`gldUnbindTexture (1 samples, 0.03%)</title><rect x="79.4497%" y="821" width="0.0281%" height="15" fill="rgb(223,145,39)" fg:x="2830" fg:w="1"/><text x="79.6997%" y="831.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="79.4778%" y="885" width="0.0281%" height="15" fill="rgb(239,219,30)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="895.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="79.4778%" y="869" width="0.0281%" height="15" fill="rgb(224,196,39)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="879.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="79.4778%" y="853" width="0.0281%" height="15" fill="rgb(205,35,43)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="863.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="79.4778%" y="837" width="0.0281%" height="15" fill="rgb(228,201,21)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="847.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="79.4778%" y="821" width="0.0281%" height="15" fill="rgb(237,118,16)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="831.50"></text></g><g><title>rust-sokoban`core::cmp::max (1 samples, 0.03%)</title><rect x="79.4778%" y="805" width="0.0281%" height="15" fill="rgb(241,17,19)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="815.50"></text></g><g><title>rust-sokoban`core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="79.4778%" y="789" width="0.0281%" height="15" fill="rgb(214,10,25)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="799.50"></text></g><g><title>rust-sokoban`core::cmp::max_by (1 samples, 0.03%)</title><rect x="79.4778%" y="773" width="0.0281%" height="15" fill="rgb(238,37,29)" fg:x="2831" fg:w="1"/><text x="79.7278%" y="783.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.03%)</title><rect x="79.5059%" y="885" width="0.0281%" height="15" fill="rgb(253,83,25)" fg:x="2832" fg:w="1"/><text x="79.7559%" y="895.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;gfx_device_gl::ResourceView&gt;&gt; (1 samples, 0.03%)</title><rect x="79.5340%" y="885" width="0.0281%" height="15" fill="rgb(234,192,12)" fg:x="2833" fg:w="1"/><text x="79.7840%" y="895.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="79.5340%" y="869" width="0.0281%" height="15" fill="rgb(241,216,45)" fg:x="2833" fg:w="1"/><text x="79.7840%" y="879.50"></text></g><g><title>rust-sokoban`alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="79.5340%" y="853" width="0.0281%" height="15" fill="rgb(242,22,33)" fg:x="2833" fg:w="1"/><text x="79.7840%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="79.5340%" y="837" width="0.0281%" height="15" fill="rgb(231,105,49)" fg:x="2833" fg:w="1"/><text x="79.7840%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::cleanup (18 samples, 0.51%)</title><rect x="79.0848%" y="933" width="0.5053%" height="15" fill="rgb(218,204,15)" fg:x="2817" fg:w="18"/><text x="79.3348%" y="943.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Manager&lt;R&gt; as gfx_core::handle::Producer&lt;R&gt;&gt;::clean_with (18 samples, 0.51%)</title><rect x="79.0848%" y="917" width="0.5053%" height="15" fill="rgb(235,138,41)" fg:x="2817" fg:w="18"/><text x="79.3348%" y="927.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::handle::Manager&lt;R&gt; as gfx_core::handle::Producer&lt;R&gt;&gt;::clean_with::clean_vec (18 samples, 0.51%)</title><rect x="79.0848%" y="901" width="0.5053%" height="15" fill="rgb(246,0,9)" fg:x="2817" fg:w="18"/><text x="79.3348%" y="911.50"></text></g><g><title>rust-sokoban`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="79.5620%" y="885" width="0.0281%" height="15" fill="rgb(210,74,4)" fg:x="2834" fg:w="1"/><text x="79.8120%" y="895.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::pin_submitted_resources (1 samples, 0.03%)</title><rect x="79.5901%" y="901" width="0.0281%" height="15" fill="rgb(250,60,41)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="911.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::extend (1 samples, 0.03%)</title><rect x="79.5901%" y="885" width="0.0281%" height="15" fill="rgb(220,115,12)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="895.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="79.5901%" y="869" width="0.0281%" height="15" fill="rgb(237,100,13)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="879.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="79.5901%" y="853" width="0.0281%" height="15" fill="rgb(213,55,26)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="863.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="79.5901%" y="837" width="0.0281%" height="15" fill="rgb(216,17,4)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="847.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="79.5901%" y="821" width="0.0281%" height="15" fill="rgb(220,153,47)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="831.50"></text></g><g><title>rust-sokoban`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="79.5901%" y="805" width="0.0281%" height="15" fill="rgb(215,131,9)" fg:x="2835" fg:w="1"/><text x="79.8401%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.6182%" y="869" width="0.0281%" height="15" fill="rgb(233,46,42)" fg:x="2836" fg:w="1"/><text x="79.8682%" y="879.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="79.6182%" y="853" width="0.0281%" height="15" fill="rgb(226,86,7)" fg:x="2836" fg:w="1"/><text x="79.8682%" y="863.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Share::check (1 samples, 0.03%)</title><rect x="79.7024%" y="853" width="0.0281%" height="15" fill="rgb(239,226,21)" fg:x="2839" fg:w="1"/><text x="79.9524%" y="863.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::GetError (1 samples, 0.03%)</title><rect x="79.7024%" y="837" width="0.0281%" height="15" fill="rgb(244,137,22)" fg:x="2839" fg:w="1"/><text x="79.9524%" y="847.50"></text></g><g><title>GLEngine`glGetError_Exec (1 samples, 0.03%)</title><rect x="79.7024%" y="821" width="0.0281%" height="15" fill="rgb(211,139,35)" fg:x="2839" fg:w="1"/><text x="79.9524%" y="831.50"></text></g><g><title>rust-sokoban`gfx_device_gl::command::DataBuffer::get (1 samples, 0.03%)</title><rect x="79.7305%" y="853" width="0.0281%" height="15" fill="rgb(214,62,50)" fg:x="2840" fg:w="1"/><text x="79.9805%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="79.7305%" y="837" width="0.0281%" height="15" fill="rgb(212,113,44)" fg:x="2840" fg:w="1"/><text x="79.9805%" y="847.50"></text></g><g><title>rust-sokoban`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="79.7305%" y="821" width="0.0281%" height="15" fill="rgb(226,150,43)" fg:x="2840" fg:w="1"/><text x="79.9805%" y="831.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="79.7305%" y="805" width="0.0281%" height="15" fill="rgb(250,71,37)" fg:x="2840" fg:w="1"/><text x="79.9805%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="79.7305%" y="789" width="0.0281%" height="15" fill="rgb(219,76,19)" fg:x="2840" fg:w="1"/><text x="79.9805%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d94588 (1 samples, 0.03%)</title><rect x="79.7586%" y="757" width="0.0281%" height="15" fill="rgb(250,39,11)" fg:x="2841" fg:w="1"/><text x="80.0086%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8fe60 (1 samples, 0.03%)</title><rect x="79.7586%" y="741" width="0.0281%" height="15" fill="rgb(230,64,31)" fg:x="2841" fg:w="1"/><text x="80.0086%" y="751.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (1 samples, 0.03%)</title><rect x="79.7586%" y="725" width="0.0281%" height="15" fill="rgb(208,222,23)" fg:x="2841" fg:w="1"/><text x="80.0086%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d94d70 (2 samples, 0.06%)</title><rect x="79.7586%" y="773" width="0.0561%" height="15" fill="rgb(227,125,18)" fg:x="2841" fg:w="2"/><text x="80.0086%" y="783.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d947e8 (1 samples, 0.03%)</title><rect x="79.7866%" y="757" width="0.0281%" height="15" fill="rgb(234,210,9)" fg:x="2842" fg:w="1"/><text x="80.0366%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (1 samples, 0.03%)</title><rect x="79.7866%" y="741" width="0.0281%" height="15" fill="rgb(217,127,24)" fg:x="2842" fg:w="1"/><text x="80.0366%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8dba4 (3 samples, 0.08%)</title><rect x="79.7586%" y="789" width="0.0842%" height="15" fill="rgb(239,141,48)" fg:x="2841" fg:w="3"/><text x="80.0086%" y="799.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (1 samples, 0.03%)</title><rect x="79.8147%" y="773" width="0.0281%" height="15" fill="rgb(227,109,8)" fg:x="2843" fg:w="1"/><text x="80.0647%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::endRenderPass (1 samples, 0.03%)</title><rect x="79.8428%" y="757" width="0.0281%" height="15" fill="rgb(235,184,23)" fg:x="2844" fg:w="1"/><text x="80.0928%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5c6e8 (1 samples, 0.03%)</title><rect x="79.8428%" y="741" width="0.0281%" height="15" fill="rgb(227,226,48)" fg:x="2844" fg:w="1"/><text x="80.0928%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.03%)</title><rect x="79.8428%" y="725" width="0.0281%" height="15" fill="rgb(206,150,11)" fg:x="2844" fg:w="1"/><text x="80.0928%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9ba20 (3 samples, 0.08%)</title><rect x="79.8709%" y="725" width="0.0842%" height="15" fill="rgb(254,2,33)" fg:x="2845" fg:w="3"/><text x="80.1209%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8df24 (3 samples, 0.08%)</title><rect x="79.8709%" y="709" width="0.0842%" height="15" fill="rgb(243,160,20)" fg:x="2845" fg:w="3"/><text x="80.1209%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.08%)</title><rect x="79.8709%" y="693" width="0.0842%" height="15" fill="rgb(218,208,30)" fg:x="2845" fg:w="3"/><text x="80.1209%" y="703.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9e6c4 (4 samples, 0.11%)</title><rect x="79.8709%" y="741" width="0.1123%" height="15" fill="rgb(224,120,49)" fg:x="2845" fg:w="4"/><text x="80.1209%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (1 samples, 0.03%)</title><rect x="79.9551%" y="725" width="0.0281%" height="15" fill="rgb(246,12,2)" fg:x="2848" fg:w="1"/><text x="80.2051%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9f974 (1 samples, 0.03%)</title><rect x="79.9832%" y="725" width="0.0281%" height="15" fill="rgb(236,117,3)" fg:x="2849" fg:w="1"/><text x="80.2332%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="79.9832%" y="709" width="0.0281%" height="15" fill="rgb(216,128,52)" fg:x="2849" fg:w="1"/><text x="80.2332%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::getCommandBuffer (2 samples, 0.06%)</title><rect x="79.9832%" y="741" width="0.0561%" height="15" fill="rgb(246,145,19)" fg:x="2849" fg:w="2"/><text x="80.2332%" y="751.50"></text></g><g><title>AGXMetalG13X`DYLD-STUB$$objc_alloc (1 samples, 0.03%)</title><rect x="80.0112%" y="725" width="0.0281%" height="15" fill="rgb(222,11,46)" fg:x="2850" fg:w="1"/><text x="80.2612%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushPreprocessingCommandEncoders (7 samples, 0.20%)</title><rect x="79.8709%" y="757" width="0.1965%" height="15" fill="rgb(245,82,36)" fg:x="2845" fg:w="7"/><text x="80.1209%" y="767.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResourceList::makeResourcesBusy (1 samples, 0.03%)</title><rect x="80.0393%" y="741" width="0.0281%" height="15" fill="rgb(250,73,51)" fg:x="2851" fg:w="1"/><text x="80.2893%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`std::__1::function&lt;void (GLRResource*)&gt;::operator() (1 samples, 0.03%)</title><rect x="80.0393%" y="725" width="0.0281%" height="15" fill="rgb(221,189,23)" fg:x="2851" fg:w="1"/><text x="80.2893%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResourceList::makeResourcesBusy (1 samples, 0.03%)</title><rect x="80.0674%" y="757" width="0.0281%" height="15" fill="rgb(210,33,7)" fg:x="2852" fg:w="1"/><text x="80.3174%" y="767.50"></text></g><g><title>AppleMetalOpenGLRenderer`std::__1::__function::__func&lt;GLRResourceList::makeResourcesBusy()::$_2, std::__1::allocator&lt;GLRResourceList::makeResourcesBusy()::$_2&gt;, void (GLRResource*)&gt;::operator() (1 samples, 0.03%)</title><rect x="80.0674%" y="741" width="0.0281%" height="15" fill="rgb(210,107,22)" fg:x="2852" fg:w="1"/><text x="80.3174%" y="751.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (9 samples, 0.25%)</title><rect x="80.0955%" y="757" width="0.2527%" height="15" fill="rgb(222,116,37)" fg:x="2853" fg:w="9"/><text x="80.3455%" y="767.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.25%)</title><rect x="80.0955%" y="741" width="0.2527%" height="15" fill="rgb(254,17,48)" fg:x="2853" fg:w="9"/><text x="80.3455%" y="751.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.25%)</title><rect x="80.0955%" y="725" width="0.2527%" height="15" fill="rgb(224,36,32)" fg:x="2853" fg:w="9"/><text x="80.3455%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (9 samples, 0.25%)</title><rect x="80.0955%" y="709" width="0.2527%" height="15" fill="rgb(232,90,46)" fg:x="2853" fg:w="9"/><text x="80.3455%" y="719.50"></text></g><g><title>IOSurface`IOSurfaceClientIncrementUseCount (13 samples, 0.36%)</title><rect x="80.3481%" y="757" width="0.3650%" height="15" fill="rgb(241,66,40)" fg:x="2862" fg:w="13"/><text x="80.5981%" y="767.50"></text></g><g><title>IOKit`IOConnectCallMethod (13 samples, 0.36%)</title><rect x="80.3481%" y="741" width="0.3650%" height="15" fill="rgb(249,184,29)" fg:x="2862" fg:w="13"/><text x="80.5981%" y="751.50"></text></g><g><title>IOKit`io_connect_method (13 samples, 0.36%)</title><rect x="80.3481%" y="725" width="0.3650%" height="15" fill="rgb(231,181,1)" fg:x="2862" fg:w="13"/><text x="80.5981%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (13 samples, 0.36%)</title><rect x="80.3481%" y="709" width="0.3650%" height="15" fill="rgb(224,94,2)" fg:x="2862" fg:w="13"/><text x="80.5981%" y="719.50"></text></g><g><title>Metal`-[_MTLCommandBuffer addCompletedHandler:] (1 samples, 0.03%)</title><rect x="80.7131%" y="757" width="0.0281%" height="15" fill="rgb(229,170,15)" fg:x="2875" fg:w="1"/><text x="80.9631%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9ba20 (1 samples, 0.03%)</title><rect x="80.7412%" y="741" width="0.0281%" height="15" fill="rgb(240,127,35)" fg:x="2876" fg:w="1"/><text x="80.9912%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3dcf920 (1 samples, 0.03%)</title><rect x="80.8535%" y="677" width="0.0281%" height="15" fill="rgb(248,196,34)" fg:x="2880" fg:w="1"/><text x="81.1035%" y="687.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer setCurrentKernelCommandBufferPointer:] (1 samples, 0.03%)</title><rect x="80.8815%" y="677" width="0.0281%" height="15" fill="rgb(236,137,7)" fg:x="2881" fg:w="1"/><text x="81.1315%" y="687.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e48bc4 (4 samples, 0.11%)</title><rect x="80.8254%" y="693" width="0.1123%" height="15" fill="rgb(235,127,16)" fg:x="2879" fg:w="4"/><text x="81.0754%" y="703.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.03%)</title><rect x="80.9096%" y="677" width="0.0281%" height="15" fill="rgb(250,192,54)" fg:x="2882" fg:w="1"/><text x="81.1596%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commitAndWaitUntilSubmitted] (8 samples, 0.22%)</title><rect x="80.7412%" y="757" width="0.2246%" height="15" fill="rgb(218,98,20)" fg:x="2876" fg:w="8"/><text x="80.9912%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9e6c4 (7 samples, 0.20%)</title><rect x="80.7692%" y="741" width="0.1965%" height="15" fill="rgb(230,176,47)" fg:x="2877" fg:w="7"/><text x="81.0192%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9ba20 (7 samples, 0.20%)</title><rect x="80.7692%" y="725" width="0.1965%" height="15" fill="rgb(244,2,33)" fg:x="2877" fg:w="7"/><text x="81.0192%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5be44 (7 samples, 0.20%)</title><rect x="80.7692%" y="709" width="0.1965%" height="15" fill="rgb(231,100,17)" fg:x="2877" fg:w="7"/><text x="81.0192%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="80.9377%" y="693" width="0.0281%" height="15" fill="rgb(245,23,12)" fg:x="2883" fg:w="1"/><text x="81.1877%" y="703.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (1 samples, 0.03%)</title><rect x="80.9657%" y="693" width="0.0281%" height="15" fill="rgb(249,55,22)" fg:x="2884" fg:w="1"/><text x="81.2157%" y="703.50"></text></g><g><title>IOGPU`DYLD-STUB$$dispatch_semaphore_wait (1 samples, 0.03%)</title><rect x="81.0500%" y="629" width="0.0281%" height="15" fill="rgb(207,134,9)" fg:x="2887" fg:w="1"/><text x="81.3000%" y="639.50"></text></g><g><title>IOKit`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="81.0780%" y="613" width="0.0281%" height="15" fill="rgb(218,134,0)" fg:x="2888" fg:w="1"/><text x="81.3280%" y="623.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (178 samples, 5.00%)</title><rect x="81.0500%" y="645" width="4.9972%" height="15" fill="rgb(213,212,33)" fg:x="2887" fg:w="178"/><text x="81.3000%" y="655.50">IOGPU`..</text></g><g><title>IOKit`IOConnectCallMethod (177 samples, 4.97%)</title><rect x="81.0780%" y="629" width="4.9691%" height="15" fill="rgb(252,106,18)" fg:x="2888" fg:w="177"/><text x="81.3280%" y="639.50">IOKit`..</text></g><g><title>IOKit`io_connect_method (176 samples, 4.94%)</title><rect x="81.1061%" y="613" width="4.9410%" height="15" fill="rgb(208,126,42)" fg:x="2889" fg:w="176"/><text x="81.3561%" y="623.50">IOKit`..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (176 samples, 4.94%)</title><rect x="81.1061%" y="597" width="4.9410%" height="15" fill="rgb(246,175,29)" fg:x="2889" fg:w="176"/><text x="81.3561%" y="607.50">libsys..</text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.03%)</title><rect x="86.0472%" y="645" width="0.0281%" height="15" fill="rgb(215,13,50)" fg:x="3065" fg:w="1"/><text x="86.2972%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="86.0472%" y="629" width="0.0281%" height="15" fill="rgb(216,172,15)" fg:x="3065" fg:w="1"/><text x="86.2972%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="86.0472%" y="613" width="0.0281%" height="15" fill="rgb(212,103,13)" fg:x="3065" fg:w="1"/><text x="86.2972%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.03%)</title><rect x="86.0472%" y="597" width="0.0281%" height="15" fill="rgb(231,171,36)" fg:x="3065" fg:w="1"/><text x="86.2972%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.03%)</title><rect x="86.0472%" y="581" width="0.0281%" height="15" fill="rgb(250,123,20)" fg:x="3065" fg:w="1"/><text x="86.2972%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (182 samples, 5.11%)</title><rect x="80.9938%" y="661" width="5.1095%" height="15" fill="rgb(212,53,50)" fg:x="2885" fg:w="182"/><text x="81.2438%" y="671.50">IOGPU`..</text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (1 samples, 0.03%)</title><rect x="86.0752%" y="645" width="0.0281%" height="15" fill="rgb(243,54,12)" fg:x="3066" fg:w="1"/><text x="86.3252%" y="655.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (183 samples, 5.14%)</title><rect x="80.9938%" y="693" width="5.1376%" height="15" fill="rgb(234,101,34)" fg:x="2885" fg:w="183"/><text x="81.2438%" y="703.50">Metal`..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (183 samples, 5.14%)</title><rect x="80.9938%" y="677" width="5.1376%" height="15" fill="rgb(254,67,22)" fg:x="2885" fg:w="183"/><text x="81.2438%" y="687.50">IOGPU`..</text></g><g><title>IOGPU`DYLD-STUB$$_Block_copy (1 samples, 0.03%)</title><rect x="86.1033%" y="661" width="0.0281%" height="15" fill="rgb(250,35,47)" fg:x="3067" fg:w="1"/><text x="86.3533%" y="671.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (185 samples, 5.19%)</title><rect x="80.9657%" y="757" width="5.1937%" height="15" fill="rgb(226,126,38)" fg:x="2884" fg:w="185"/><text x="81.2157%" y="767.50">Metal`..</text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (185 samples, 5.19%)</title><rect x="80.9657%" y="741" width="5.1937%" height="15" fill="rgb(216,138,53)" fg:x="2884" fg:w="185"/><text x="81.2157%" y="751.50">libdis..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (185 samples, 5.19%)</title><rect x="80.9657%" y="725" width="5.1937%" height="15" fill="rgb(246,199,43)" fg:x="2884" fg:w="185"/><text x="81.2157%" y="735.50">libdis..</text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (185 samples, 5.19%)</title><rect x="80.9657%" y="709" width="5.1937%" height="15" fill="rgb(232,125,11)" fg:x="2884" fg:w="185"/><text x="81.2157%" y="719.50">Metal`..</text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="86.1314%" y="693" width="0.0281%" height="15" fill="rgb(218,219,45)" fg:x="3068" fg:w="1"/><text x="86.3814%" y="703.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (234 samples, 6.57%)</title><rect x="79.8428%" y="773" width="6.5693%" height="15" fill="rgb(216,102,54)" fg:x="2844" fg:w="234"/><text x="80.0928%" y="783.50">AppleMeta..</text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (9 samples, 0.25%)</title><rect x="86.1595%" y="757" width="0.2527%" height="15" fill="rgb(250,228,7)" fg:x="3069" fg:w="9"/><text x="86.4095%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (9 samples, 0.25%)</title><rect x="86.1595%" y="741" width="0.2527%" height="15" fill="rgb(226,125,25)" fg:x="3069" fg:w="9"/><text x="86.4095%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushResource (235 samples, 6.60%)</title><rect x="79.8428%" y="789" width="6.5974%" height="15" fill="rgb(224,165,27)" fg:x="2844" fg:w="235"/><text x="80.0928%" y="799.50">AppleMeta..</text></g><g><title>AppleMetalOpenGLRenderer`GLRDataBufferManager::reset (1 samples, 0.03%)</title><rect x="86.4121%" y="773" width="0.0281%" height="15" fill="rgb(233,86,3)" fg:x="3078" fg:w="1"/><text x="86.6621%" y="783.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (1 samples, 0.03%)</title><rect x="86.4402%" y="741" width="0.0281%" height="15" fill="rgb(228,116,20)" fg:x="3079" fg:w="1"/><text x="86.6902%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9d5a0 (2 samples, 0.06%)</title><rect x="86.4402%" y="757" width="0.0561%" height="15" fill="rgb(209,192,17)" fg:x="3079" fg:w="2"/><text x="86.6902%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (1 samples, 0.03%)</title><rect x="86.4683%" y="741" width="0.0281%" height="15" fill="rgb(224,88,34)" fg:x="3080" fg:w="1"/><text x="86.7183%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::getPreprocessingCommandBuffer (5 samples, 0.14%)</title><rect x="86.4402%" y="789" width="0.1404%" height="15" fill="rgb(233,38,6)" fg:x="3079" fg:w="5"/><text x="86.6902%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9f974 (5 samples, 0.14%)</title><rect x="86.4402%" y="773" width="0.1404%" height="15" fill="rgb(212,59,30)" fg:x="3079" fg:w="5"/><text x="86.6902%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.08%)</title><rect x="86.4964%" y="757" width="0.0842%" height="15" fill="rgb(213,80,3)" fg:x="3081" fg:w="3"/><text x="86.7464%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9d298 (1 samples, 0.03%)</title><rect x="86.5806%" y="773" width="0.0281%" height="15" fill="rgb(251,178,7)" fg:x="3084" fg:w="1"/><text x="86.8306%" y="783.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8e30c (1 samples, 0.03%)</title><rect x="86.5806%" y="757" width="0.0281%" height="15" fill="rgb(213,154,26)" fg:x="3084" fg:w="1"/><text x="86.8306%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="86.5806%" y="741" width="0.0281%" height="15" fill="rgb(238,165,49)" fg:x="3084" fg:w="1"/><text x="86.8306%" y="751.50"></text></g><g><title>rust-sokoban`gfx_device_gl::factory::update_sub_buffer (245 samples, 6.88%)</title><rect x="79.7586%" y="853" width="6.8782%" height="15" fill="rgb(248,91,46)" fg:x="2841" fg:w="245"/><text x="80.0086%" y="863.50">rust-soko..</text></g><g><title>rust-sokoban`gfx_gl::Gl::BufferSubData (245 samples, 6.88%)</title><rect x="79.7586%" y="837" width="6.8782%" height="15" fill="rgb(244,21,52)" fg:x="2841" fg:w="245"/><text x="80.0086%" y="847.50">rust-soko..</text></g><g><title>GLEngine`glBufferSubData_Exec (245 samples, 6.88%)</title><rect x="79.7586%" y="821" width="6.8782%" height="15" fill="rgb(247,122,20)" fg:x="2841" fg:w="245"/><text x="80.0086%" y="831.50">GLEngine`..</text></g><g><title>AppleMetalOpenGLRenderer`gldBufferSubData (245 samples, 6.88%)</title><rect x="79.7586%" y="805" width="6.8782%" height="15" fill="rgb(218,27,9)" fg:x="2841" fg:w="245"/><text x="80.0086%" y="815.50">AppleMeta..</text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::startPreprocessingBlitEncoderIfNeeded (2 samples, 0.06%)</title><rect x="86.5806%" y="789" width="0.0561%" height="15" fill="rgb(246,7,6)" fg:x="3084" fg:w="2"/><text x="86.8306%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e7bcf8 (1 samples, 0.03%)</title><rect x="86.6086%" y="773" width="0.0281%" height="15" fill="rgb(227,135,54)" fg:x="3085" fg:w="1"/><text x="86.8586%" y="783.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::update_texture (1 samples, 0.03%)</title><rect x="86.6367%" y="853" width="0.0281%" height="15" fill="rgb(247,14,11)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="863.50"></text></g><g><title>rust-sokoban`gfx_device_gl::tex::tex_sub_image (1 samples, 0.03%)</title><rect x="86.6367%" y="837" width="0.0281%" height="15" fill="rgb(206,149,34)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="847.50"></text></g><g><title>rust-sokoban`gfx_gl::Gl::TexSubImage2D (1 samples, 0.03%)</title><rect x="86.6367%" y="821" width="0.0281%" height="15" fill="rgb(227,228,4)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="831.50"></text></g><g><title>libGL.dylib`glTexSubImage2D (1 samples, 0.03%)</title><rect x="86.6367%" y="805" width="0.0281%" height="15" fill="rgb(238,218,28)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="815.50"></text></g><g><title>GLEngine`glTexSubImage2D_Exec (1 samples, 0.03%)</title><rect x="86.6367%" y="789" width="0.0281%" height="15" fill="rgb(252,86,40)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldModifyTexSubImage (1 samples, 0.03%)</title><rect x="86.6367%" y="773" width="0.0281%" height="15" fill="rgb(251,225,11)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (1 samples, 0.03%)</title><rect x="86.6367%" y="757" width="0.0281%" height="15" fill="rgb(206,46,49)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="767.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (1 samples, 0.03%)</title><rect x="86.6367%" y="741" width="0.0281%" height="15" fill="rgb(245,128,24)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="751.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (1 samples, 0.03%)</title><rect x="86.6367%" y="725" width="0.0281%" height="15" fill="rgb(219,177,34)" fg:x="3086" fg:w="1"/><text x="86.8867%" y="735.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5230c (2 samples, 0.06%)</title><rect x="86.6929%" y="805" width="0.0561%" height="15" fill="rgb(218,60,48)" fg:x="3088" fg:w="2"/><text x="86.9429%" y="815.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e4d4e8 (1 samples, 0.03%)</title><rect x="86.7209%" y="789" width="0.0281%" height="15" fill="rgb(221,11,5)" fg:x="3089" fg:w="1"/><text x="86.9709%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3dc85dc (2 samples, 0.06%)</title><rect x="86.8332%" y="757" width="0.0561%" height="15" fill="rgb(220,148,13)" fg:x="3093" fg:w="2"/><text x="87.0832%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3ea2ed8 (1 samples, 0.03%)</title><rect x="86.8613%" y="741" width="0.0281%" height="15" fill="rgb(210,16,3)" fg:x="3094" fg:w="1"/><text x="87.1113%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8fe60 (1 samples, 0.03%)</title><rect x="86.8894%" y="741" width="0.0281%" height="15" fill="rgb(236,80,2)" fg:x="3095" fg:w="1"/><text x="87.1394%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3db9744 (2 samples, 0.06%)</title><rect x="86.9175%" y="741" width="0.0561%" height="15" fill="rgb(239,129,19)" fg:x="3096" fg:w="2"/><text x="87.1675%" y="751.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (1 samples, 0.03%)</title><rect x="86.9455%" y="725" width="0.0281%" height="15" fill="rgb(220,106,35)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="735.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (1 samples, 0.03%)</title><rect x="86.9455%" y="709" width="0.0281%" height="15" fill="rgb(252,139,45)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="719.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.03%)</title><rect x="86.9455%" y="693" width="0.0281%" height="15" fill="rgb(229,8,36)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="703.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (1 samples, 0.03%)</title><rect x="86.9455%" y="677" width="0.0281%" height="15" fill="rgb(230,126,33)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="687.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.03%)</title><rect x="86.9455%" y="661" width="0.0281%" height="15" fill="rgb(239,140,21)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="671.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.03%)</title><rect x="86.9455%" y="645" width="0.0281%" height="15" fill="rgb(254,104,9)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="86.9455%" y="629" width="0.0281%" height="15" fill="rgb(239,52,14)" fg:x="3097" fg:w="1"/><text x="87.1955%" y="639.50"></text></g><g><title>AGXMetalG13X`0x00000001d3db9918 (1 samples, 0.03%)</title><rect x="86.9736%" y="741" width="0.0281%" height="15" fill="rgb(208,227,44)" fg:x="3098" fg:w="1"/><text x="87.2236%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e49658 (5 samples, 0.14%)</title><rect x="86.8894%" y="757" width="0.1404%" height="15" fill="rgb(246,18,19)" fg:x="3095" fg:w="5"/><text x="87.1394%" y="767.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (1 samples, 0.03%)</title><rect x="87.0017%" y="741" width="0.0281%" height="15" fill="rgb(235,228,25)" fg:x="3099" fg:w="1"/><text x="87.2517%" y="751.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5cd3c (10 samples, 0.28%)</title><rect x="86.7771%" y="773" width="0.2807%" height="15" fill="rgb(240,156,20)" fg:x="3091" fg:w="10"/><text x="87.0271%" y="783.50"></text></g><g><title>Metal`-[_MTLDevice supportsLayeredRendering] (1 samples, 0.03%)</title><rect x="87.0298%" y="757" width="0.0281%" height="15" fill="rgb(224,8,20)" fg:x="3100" fg:w="1"/><text x="87.2798%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9cc30 (15 samples, 0.42%)</title><rect x="86.7771%" y="789" width="0.4211%" height="15" fill="rgb(214,12,52)" fg:x="3091" fg:w="15"/><text x="87.0271%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.14%)</title><rect x="87.0578%" y="773" width="0.1404%" height="15" fill="rgb(211,220,47)" fg:x="3101" fg:w="5"/><text x="87.3078%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::addRenderPassResources (1 samples, 0.03%)</title><rect x="87.1982%" y="789" width="0.0281%" height="15" fill="rgb(250,173,5)" fg:x="3106" fg:w="1"/><text x="87.4482%" y="799.50"></text></g><g><title>Metal`-[MTLTextureDescriptorInternal sampleCount] (1 samples, 0.03%)</title><rect x="87.1982%" y="773" width="0.0281%" height="15" fill="rgb(250,125,52)" fg:x="3106" fg:w="1"/><text x="87.4482%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::buildRenderPassDescriptor (1 samples, 0.03%)</title><rect x="87.2263%" y="789" width="0.0281%" height="15" fill="rgb(209,133,18)" fg:x="3107" fg:w="1"/><text x="87.4763%" y="799.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.03%)</title><rect x="87.2263%" y="773" width="0.0281%" height="15" fill="rgb(216,173,22)" fg:x="3107" fg:w="1"/><text x="87.4763%" y="783.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9d5a0 (1 samples, 0.03%)</title><rect x="87.2544%" y="757" width="0.0281%" height="15" fill="rgb(205,3,22)" fg:x="3108" fg:w="1"/><text x="87.5044%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.03%)</title><rect x="87.2544%" y="741" width="0.0281%" height="15" fill="rgb(248,22,20)" fg:x="3108" fg:w="1"/><text x="87.5044%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="87.2544%" y="725" width="0.0281%" height="15" fill="rgb(233,6,29)" fg:x="3108" fg:w="1"/><text x="87.5044%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="87.2544%" y="709" width="0.0281%" height="15" fill="rgb(240,22,54)" fg:x="3108" fg:w="1"/><text x="87.5044%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="87.2544%" y="693" width="0.0281%" height="15" fill="rgb(231,133,32)" fg:x="3108" fg:w="1"/><text x="87.5044%" y="703.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (21 samples, 0.59%)</title><rect x="86.7490%" y="805" width="0.5896%" height="15" fill="rgb(248,193,4)" fg:x="3090" fg:w="21"/><text x="86.9990%" y="815.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::getCommandBuffer (3 samples, 0.08%)</title><rect x="87.2544%" y="789" width="0.0842%" height="15" fill="rgb(211,178,46)" fg:x="3108" fg:w="3"/><text x="87.5044%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9f974 (3 samples, 0.08%)</title><rect x="87.2544%" y="773" width="0.0842%" height="15" fill="rgb(224,5,42)" fg:x="3108" fg:w="3"/><text x="87.5044%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.06%)</title><rect x="87.2824%" y="757" width="0.0561%" height="15" fill="rgb(239,176,25)" fg:x="3109" fg:w="2"/><text x="87.5324%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9a538 (1 samples, 0.03%)</title><rect x="87.3386%" y="789" width="0.0281%" height="15" fill="rgb(245,187,50)" fg:x="3111" fg:w="1"/><text x="87.5886%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e4d120 (3 samples, 0.08%)</title><rect x="87.3666%" y="789" width="0.0842%" height="15" fill="rgb(248,24,15)" fg:x="3112" fg:w="3"/><text x="87.6166%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5aa48 (1 samples, 0.03%)</title><rect x="87.4509%" y="789" width="0.0281%" height="15" fill="rgb(205,166,13)" fg:x="3115" fg:w="1"/><text x="87.7009%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e6cba4 (1 samples, 0.03%)</title><rect x="87.4509%" y="773" width="0.0281%" height="15" fill="rgb(208,114,23)" fg:x="3115" fg:w="1"/><text x="87.7009%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderSamplersAndTextures (2 samples, 0.06%)</title><rect x="87.4789%" y="789" width="0.0561%" height="15" fill="rgb(239,127,18)" fg:x="3116" fg:w="2"/><text x="87.7289%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setTexturesAndSamplersInternal(PipelineType, unsigned int, SetSamplerStateIMPCache*, SetTextureIMPCache*)::&apos;lambda&apos;(unsigned int, unsigned int)::operator() (2 samples, 0.06%)</title><rect x="87.4789%" y="773" width="0.0561%" height="15" fill="rgb(219,154,28)" fg:x="3116" fg:w="2"/><text x="87.7289%" y="783.50"></text></g><g><title>libsystem_m.dylib`exp2f (1 samples, 0.03%)</title><rect x="87.5070%" y="757" width="0.0281%" height="15" fill="rgb(225,157,23)" fg:x="3117" fg:w="1"/><text x="87.7570%" y="767.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderUniformBuffers (1 samples, 0.03%)</title><rect x="87.5351%" y="789" width="0.0281%" height="15" fill="rgb(219,8,6)" fg:x="3118" fg:w="1"/><text x="87.7851%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e4d120 (1 samples, 0.03%)</title><rect x="87.5351%" y="773" width="0.0281%" height="15" fill="rgb(212,47,6)" fg:x="3118" fg:w="1"/><text x="87.7851%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderVertexBuffers (1 samples, 0.03%)</title><rect x="87.5632%" y="789" width="0.0281%" height="15" fill="rgb(224,190,4)" fg:x="3119" fg:w="1"/><text x="87.8132%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::prepareResourceForGPUAccess (1 samples, 0.03%)</title><rect x="87.5632%" y="773" width="0.0281%" height="15" fill="rgb(239,183,29)" fg:x="3119" fg:w="1"/><text x="87.8132%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResourceList::addResource (1 samples, 0.03%)</title><rect x="87.5632%" y="757" width="0.0281%" height="15" fill="rgb(213,57,7)" fg:x="3119" fg:w="1"/><text x="87.8132%" y="767.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (34 samples, 0.95%)</title><rect x="86.6648%" y="821" width="0.9545%" height="15" fill="rgb(216,148,1)" fg:x="3087" fg:w="34"/><text x="86.9148%" y="831.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderState (10 samples, 0.28%)</title><rect x="87.3386%" y="805" width="0.2807%" height="15" fill="rgb(236,182,29)" fg:x="3111" fg:w="10"/><text x="87.5886%" y="815.50"></text></g><g><title>AppleMetalOpenGLRenderer`std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, GLRBufferArgumentInfo&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, GLRBufferArgumentInfo&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, GLRBufferArgumentInfo&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, GLRBufferArgumentInfo&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, GLRBufferArgumentInfo&gt; &gt; &gt;::find&lt;unsigned int&gt; (1 samples, 0.03%)</title><rect x="87.5912%" y="789" width="0.0281%" height="15" fill="rgb(244,120,48)" fg:x="3120" fg:w="1"/><text x="87.8412%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::updateTextureState (1 samples, 0.03%)</title><rect x="87.6193%" y="805" width="0.0281%" height="15" fill="rgb(206,71,34)" fg:x="3121" fg:w="1"/><text x="87.8693%" y="815.50"></text></g><g><title>GLEngine`glDrawElementsInstanced_ACC_GL3Exec (36 samples, 1.01%)</title><rect x="86.6648%" y="837" width="1.0107%" height="15" fill="rgb(242,32,6)" fg:x="3087" fg:w="36"/><text x="86.9148%" y="847.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (2 samples, 0.06%)</title><rect x="87.6193%" y="821" width="0.0561%" height="15" fill="rgb(241,35,3)" fg:x="3121" fg:w="2"/><text x="87.8693%" y="831.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (1 samples, 0.03%)</title><rect x="87.6474%" y="805" width="0.0281%" height="15" fill="rgb(222,62,19)" fg:x="3122" fg:w="1"/><text x="87.8974%" y="815.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::updateTextureState (1 samples, 0.03%)</title><rect x="87.6474%" y="789" width="0.0281%" height="15" fill="rgb(223,110,41)" fg:x="3122" fg:w="1"/><text x="87.8974%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::updateTextureState(unsigned int, unsigned long long const*, unsigned int)::$_0::operator() (1 samples, 0.03%)</title><rect x="87.6474%" y="773" width="0.0281%" height="15" fill="rgb(208,224,4)" fg:x="3122" fg:w="1"/><text x="87.8974%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::isValidTexture (1 samples, 0.03%)</title><rect x="87.6474%" y="757" width="0.0281%" height="15" fill="rgb(241,137,19)" fg:x="3122" fg:w="1"/><text x="87.8974%" y="767.50"></text></g><g><title>Metal`MTLPixelFormatGetInfoForDevice (1 samples, 0.03%)</title><rect x="87.6474%" y="741" width="0.0281%" height="15" fill="rgb(244,24,17)" fg:x="3122" fg:w="1"/><text x="87.8974%" y="751.50"></text></g><g><title>Metal`-[_MTLDevice supportsFamily:] (1 samples, 0.03%)</title><rect x="87.6474%" y="725" width="0.0281%" height="15" fill="rgb(245,178,49)" fg:x="3122" fg:w="1"/><text x="87.8974%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (1 samples, 0.03%)</title><rect x="87.6755%" y="821" width="0.0281%" height="15" fill="rgb(219,160,38)" fg:x="3123" fg:w="1"/><text x="87.9255%" y="831.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (1 samples, 0.03%)</title><rect x="87.6755%" y="805" width="0.0281%" height="15" fill="rgb(228,137,14)" fg:x="3123" fg:w="1"/><text x="87.9255%" y="815.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9cc30 (1 samples, 0.03%)</title><rect x="87.6755%" y="789" width="0.0281%" height="15" fill="rgb(237,134,11)" fg:x="3123" fg:w="1"/><text x="87.9255%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e5cd3c (1 samples, 0.03%)</title><rect x="87.6755%" y="773" width="0.0281%" height="15" fill="rgb(211,126,44)" fg:x="3123" fg:w="1"/><text x="87.9255%" y="783.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e49658 (1 samples, 0.03%)</title><rect x="87.6755%" y="757" width="0.0281%" height="15" fill="rgb(226,171,33)" fg:x="3123" fg:w="1"/><text x="87.9255%" y="767.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d8fe60 (1 samples, 0.03%)</title><rect x="87.6755%" y="741" width="0.0281%" height="15" fill="rgb(253,99,13)" fg:x="3123" fg:w="1"/><text x="87.9255%" y="751.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Device::process (288 samples, 8.09%)</title><rect x="79.6463%" y="869" width="8.0853%" height="15" fill="rgb(244,48,7)" fg:x="2837" fg:w="288"/><text x="79.8963%" y="879.50">rust-sokoba..</text></g><g><title>rust-sokoban`gfx_gl::Gl::DrawElementsInstanced (38 samples, 1.07%)</title><rect x="86.6648%" y="853" width="1.0668%" height="15" fill="rgb(244,217,54)" fg:x="3087" fg:w="38"/><text x="86.9148%" y="863.50"></text></g><g><title>GLEngine`glDrawElementsInstanced_GL3Exec (2 samples, 0.06%)</title><rect x="87.6755%" y="837" width="0.0561%" height="15" fill="rgb(224,15,18)" fg:x="3123" fg:w="2"/><text x="87.9255%" y="847.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (1 samples, 0.03%)</title><rect x="87.7035%" y="821" width="0.0281%" height="15" fill="rgb(244,99,12)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="831.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (1 samples, 0.03%)</title><rect x="87.7035%" y="805" width="0.0281%" height="15" fill="rgb(233,226,8)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="815.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (1 samples, 0.03%)</title><rect x="87.7035%" y="789" width="0.0281%" height="15" fill="rgb(229,211,3)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="799.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::buildPipelineState (1 samples, 0.03%)</title><rect x="87.7035%" y="773" width="0.0281%" height="15" fill="rgb(216,140,21)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="783.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDDeviceRec::getRenderPipelineStateFromKey (1 samples, 0.03%)</title><rect x="87.7035%" y="757" width="0.0281%" height="15" fill="rgb(234,122,30)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.03%)</title><rect x="87.7035%" y="741" width="0.0281%" height="15" fill="rgb(236,25,46)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="87.7035%" y="725" width="0.0281%" height="15" fill="rgb(217,52,54)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDDeviceRec::getRenderPipelineStateFromKey (1 samples, 0.03%)</title><rect x="87.7035%" y="709" width="0.0281%" height="15" fill="rgb(222,29,26)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`processReflection(GLRRenderPipelineState*, PipelineType, unsigned int, NSArray&lt;MTLArgument*&gt;*, MTLRenderPipelineFlags, NSDictionary*) (1 samples, 0.03%)</title><rect x="87.7035%" y="693" width="0.0281%" height="15" fill="rgb(216,177,29)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="703.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.03%)</title><rect x="87.7035%" y="677" width="0.0281%" height="15" fill="rgb(247,136,51)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="687.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.03%)</title><rect x="87.7035%" y="661" width="0.0281%" height="15" fill="rgb(231,47,47)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="671.50"></text></g><g><title>libobjc.A.dylib`cache_t::insert(objc_selector*, void (*) (1 samples, 0.03%)</title><rect x="87.7035%" y="645" width="0.0281%" height="15" fill="rgb(211,192,36)" fg:x="3124" fg:w="1"/><text x="87.9535%" y="655.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Device::reset_state (2 samples, 0.06%)</title><rect x="87.7316%" y="869" width="0.0561%" height="15" fill="rgb(229,156,32)" fg:x="3125" fg:w="2"/><text x="87.9816%" y="879.50"></text></g><g><title>rust-sokoban`gfx_device_gl::Device::process (2 samples, 0.06%)</title><rect x="87.7316%" y="853" width="0.0561%" height="15" fill="rgb(248,213,20)" fg:x="3125" fg:w="2"/><text x="87.9816%" y="863.50"></text></g><g><title>rust-sokoban`gfx_device_gl::state::bind_rasterizer (1 samples, 0.03%)</title><rect x="87.7597%" y="837" width="0.0281%" height="15" fill="rgb(217,64,7)" fg:x="3126" fg:w="1"/><text x="88.0097%" y="847.50"></text></g><g><title>GLEngine`glEnable_Exec (1 samples, 0.03%)</title><rect x="87.7597%" y="821" width="0.0281%" height="15" fill="rgb(232,142,8)" fg:x="3126" fg:w="1"/><text x="88.0097%" y="831.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::flush (293 samples, 8.23%)</title><rect x="79.5901%" y="933" width="8.2257%" height="15" fill="rgb(224,92,44)" fg:x="2835" fg:w="293"/><text x="79.8401%" y="943.50">rust-sokoba..</text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::flush_no_reset (293 samples, 8.23%)</title><rect x="79.5901%" y="917" width="8.2257%" height="15" fill="rgb(214,169,17)" fg:x="2835" fg:w="293"/><text x="79.8401%" y="927.50">rust-sokoba..</text></g><g><title>rust-sokoban`&lt;gfx_device_gl::Device as gfx_core::Device&gt;::submit (292 samples, 8.20%)</title><rect x="79.6182%" y="901" width="8.1976%" height="15" fill="rgb(210,59,37)" fg:x="2836" fg:w="292"/><text x="79.8682%" y="911.50">rust-sokoba..</text></g><g><title>rust-sokoban`gfx_device_gl::Device::no_fence_submit (292 samples, 8.20%)</title><rect x="79.6182%" y="885" width="8.1976%" height="15" fill="rgb(214,116,48)" fg:x="2836" fg:w="292"/><text x="79.8682%" y="895.50">rust-sokoba..</text></g><g><title>rust-sokoban`gfx_device_gl::state::set_output_masks (1 samples, 0.03%)</title><rect x="87.7878%" y="869" width="0.0281%" height="15" fill="rgb(244,191,6)" fg:x="3127" fg:w="1"/><text x="88.0378%" y="879.50"></text></g><g><title>AppKit`-[NSIOSurfacePool nextUnusedSurface] (1 samples, 0.03%)</title><rect x="87.8158%" y="757" width="0.0281%" height="15" fill="rgb(241,50,52)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="767.50"></text></g><g><title>IOSurface`-[IOSurface initWithProperties:] (1 samples, 0.03%)</title><rect x="87.8158%" y="741" width="0.0281%" height="15" fill="rgb(236,75,39)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="751.50"></text></g><g><title>IOSurface`IOSurfaceClientCreateChild (1 samples, 0.03%)</title><rect x="87.8158%" y="725" width="0.0281%" height="15" fill="rgb(236,99,0)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="735.50"></text></g><g><title>IOKit`IOCFSerialize (1 samples, 0.03%)</title><rect x="87.8158%" y="709" width="0.0281%" height="15" fill="rgb(207,202,15)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="719.50"></text></g><g><title>IOKit`DoCFSerializeBinary (1 samples, 0.03%)</title><rect x="87.8158%" y="693" width="0.0281%" height="15" fill="rgb(233,207,14)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="703.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI __apply:context:] (1 samples, 0.03%)</title><rect x="87.8158%" y="677" width="0.0281%" height="15" fill="rgb(226,27,51)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="687.50"></text></g><g><title>IOKit`IOCFSerializeBinaryCFDictionaryFunction (1 samples, 0.03%)</title><rect x="87.8158%" y="661" width="0.0281%" height="15" fill="rgb(206,104,42)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="671.50"></text></g><g><title>IOKit`DoCFSerializeBinary (1 samples, 0.03%)</title><rect x="87.8158%" y="645" width="0.0281%" height="15" fill="rgb(212,225,4)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="655.50"></text></g><g><title>IOKit`IOCFSerializeBinaryAddObject (1 samples, 0.03%)</title><rect x="87.8158%" y="629" width="0.0281%" height="15" fill="rgb(233,96,42)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="639.50"></text></g><g><title>CoreFoundation`CFDictionarySetValue (1 samples, 0.03%)</title><rect x="87.8158%" y="613" width="0.0281%" height="15" fill="rgb(229,21,32)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="623.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (1 samples, 0.03%)</title><rect x="87.8158%" y="597" width="0.0281%" height="15" fill="rgb(226,216,24)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="607.50"></text></g><g><title>CoreFoundation`__CFBasicHashRehash (1 samples, 0.03%)</title><rect x="87.8158%" y="581" width="0.0281%" height="15" fill="rgb(221,163,17)" fg:x="3128" fg:w="1"/><text x="88.0658%" y="591.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderPrimitiveCurrents (1 samples, 0.03%)</title><rect x="87.8439%" y="725" width="0.0281%" height="15" fill="rgb(216,216,42)" fg:x="3129" fg:w="1"/><text x="88.0939%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="87.8439%" y="709" width="0.0281%" height="15" fill="rgb(240,118,7)" fg:x="3129" fg:w="1"/><text x="88.0939%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldEndPrimitiveBuffer(GLDContextRec*, unsigned int, unsigned int, int) (2 samples, 0.06%)</title><rect x="87.8439%" y="741" width="0.0561%" height="15" fill="rgb(221,67,37)" fg:x="3129" fg:w="2"/><text x="88.0939%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderState (1 samples, 0.03%)</title><rect x="87.8720%" y="725" width="0.0281%" height="15" fill="rgb(241,32,44)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setRenderSamplersAndTextures (1 samples, 0.03%)</title><rect x="87.8720%" y="709" width="0.0281%" height="15" fill="rgb(235,204,43)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::setTexturesAndSamplersInternal(PipelineType, unsigned int, SetSamplerStateIMPCache*, SetTextureIMPCache*)::&apos;lambda&apos;(unsigned int, unsigned int)::operator() (1 samples, 0.03%)</title><rect x="87.8720%" y="693" width="0.0281%" height="15" fill="rgb(213,116,10)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="703.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRTextureResource::getGLViewResource (1 samples, 0.03%)</title><rect x="87.8720%" y="677" width="0.0281%" height="15" fill="rgb(239,15,48)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="687.50"></text></g><g><title>AppleMetalOpenGLRenderer`makeTextureViewRscIfNeeded(GLRTextureResource*, MTLPixelFormat, MTLTextureType, _NSRange, _NSRange, unsigned int) (1 samples, 0.03%)</title><rect x="87.8720%" y="661" width="0.0281%" height="15" fill="rgb(207,123,36)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="671.50"></text></g><g><title>AGXMetalG13X`0x00000001d407099c (1 samples, 0.03%)</title><rect x="87.8720%" y="645" width="0.0281%" height="15" fill="rgb(209,103,30)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="655.50"></text></g><g><title>AGXMetalG13X`0x00000001d4070d8c (1 samples, 0.03%)</title><rect x="87.8720%" y="629" width="0.0281%" height="15" fill="rgb(238,100,19)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="639.50"></text></g><g><title>AGXMetalG13X`0x00000001d4070af8 (1 samples, 0.03%)</title><rect x="87.8720%" y="613" width="0.0281%" height="15" fill="rgb(244,30,14)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="623.50"></text></g><g><title>AGXMetalG13X`0x00000001d405f394 (1 samples, 0.03%)</title><rect x="87.8720%" y="597" width="0.0281%" height="15" fill="rgb(249,174,6)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="607.50"></text></g><g><title>IOSurface`IOSurfaceClientGetAddressFormatOfPlane (1 samples, 0.03%)</title><rect x="87.8720%" y="581" width="0.0281%" height="15" fill="rgb(235,213,41)" fg:x="3130" fg:w="1"/><text x="88.1220%" y="591.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (4 samples, 0.11%)</title><rect x="87.8158%" y="773" width="0.1123%" height="15" fill="rgb(213,118,6)" fg:x="3128" fg:w="4"/><text x="88.0658%" y="783.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (3 samples, 0.08%)</title><rect x="87.8439%" y="757" width="0.0842%" height="15" fill="rgb(235,44,51)" fg:x="3129" fg:w="3"/><text x="88.0939%" y="767.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (1 samples, 0.03%)</title><rect x="87.9001%" y="741" width="0.0281%" height="15" fill="rgb(217,9,53)" fg:x="3131" fg:w="1"/><text x="88.1501%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (1 samples, 0.03%)</title><rect x="87.9001%" y="725" width="0.0281%" height="15" fill="rgb(237,172,34)" fg:x="3131" fg:w="1"/><text x="88.1501%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::loadCurrentTextures (1 samples, 0.03%)</title><rect x="87.9001%" y="709" width="0.0281%" height="15" fill="rgb(206,206,11)" fg:x="3131" fg:w="1"/><text x="88.1501%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="87.9001%" y="693" width="0.0281%" height="15" fill="rgb(214,149,29)" fg:x="3131" fg:w="1"/><text x="88.1501%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="87.9001%" y="677" width="0.0281%" height="15" fill="rgb(208,123,3)" fg:x="3131" fg:w="1"/><text x="88.1501%" y="687.50"></text></g><g><title>AppKit`-[NSIOAccelSurface initWithGPURegistryID:surfaceID:] (1 samples, 0.03%)</title><rect x="87.9281%" y="773" width="0.0281%" height="15" fill="rgb(229,126,4)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="783.50"></text></g><g><title>OpenGL`CGLCreateContext (1 samples, 0.03%)</title><rect x="87.9281%" y="757" width="0.0281%" height="15" fill="rgb(222,92,36)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="767.50"></text></g><g><title>GLEngine`gliCreateContextWithShared (1 samples, 0.03%)</title><rect x="87.9281%" y="741" width="0.0281%" height="15" fill="rgb(216,39,41)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="751.50"></text></g><g><title>libGFXShared.dylib`gfxCreateSharedState (1 samples, 0.03%)</title><rect x="87.9281%" y="725" width="0.0281%" height="15" fill="rgb(253,127,28)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldCreateShareGroup (1 samples, 0.03%)</title><rect x="87.9281%" y="709" width="0.0281%" height="15" fill="rgb(249,152,51)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="719.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDShareGroupRec::initWithDevice (1 samples, 0.03%)</title><rect x="87.9281%" y="693" width="0.0281%" height="15" fill="rgb(209,123,42)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="703.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e8e414 (1 samples, 0.03%)</title><rect x="87.9281%" y="677" width="0.0281%" height="15" fill="rgb(241,118,22)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="687.50"></text></g><g><title>libdispatch.dylib`dispatch_once_f (1 samples, 0.03%)</title><rect x="87.9281%" y="661" width="0.0281%" height="15" fill="rgb(208,25,7)" fg:x="3132" fg:w="1"/><text x="88.1781%" y="671.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (8 samples, 0.22%)</title><rect x="87.8158%" y="805" width="0.2246%" height="15" fill="rgb(243,144,39)" fg:x="3128" fg:w="8"/><text x="88.0658%" y="815.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (8 samples, 0.22%)</title><rect x="87.8158%" y="789" width="0.2246%" height="15" fill="rgb(250,50,5)" fg:x="3128" fg:w="8"/><text x="88.0658%" y="799.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (3 samples, 0.08%)</title><rect x="87.9562%" y="773" width="0.0842%" height="15" fill="rgb(207,67,11)" fg:x="3133" fg:w="3"/><text x="88.2062%" y="783.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (3 samples, 0.08%)</title><rect x="87.9562%" y="757" width="0.0842%" height="15" fill="rgb(245,204,40)" fg:x="3133" fg:w="3"/><text x="88.2062%" y="767.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (3 samples, 0.08%)</title><rect x="87.9562%" y="741" width="0.0842%" height="15" fill="rgb(238,228,24)" fg:x="3133" fg:w="3"/><text x="88.2062%" y="751.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.08%)</title><rect x="87.9562%" y="725" width="0.0842%" height="15" fill="rgb(217,116,22)" fg:x="3133" fg:w="3"/><text x="88.2062%" y="735.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.08%)</title><rect x="87.9562%" y="709" width="0.0842%" height="15" fill="rgb(234,98,12)" fg:x="3133" fg:w="3"/><text x="88.2062%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.08%)</title><rect x="87.9562%" y="693" width="0.0842%" height="15" fill="rgb(242,170,50)" fg:x="3133" fg:w="3"/><text x="88.2062%" y="703.50"></text></g><g><title>GLEngine`glSwap_Exec (9 samples, 0.25%)</title><rect x="87.8158%" y="821" width="0.2527%" height="15" fill="rgb(235,7,5)" fg:x="3128" fg:w="9"/><text x="88.0658%" y="831.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldPresentFramebufferData (1 samples, 0.03%)</title><rect x="88.0404%" y="805" width="0.0281%" height="15" fill="rgb(241,114,28)" fg:x="3136" fg:w="1"/><text x="88.2904%" y="815.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (1 samples, 0.03%)</title><rect x="88.0404%" y="789" width="0.0281%" height="15" fill="rgb(246,112,42)" fg:x="3136" fg:w="1"/><text x="88.2904%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="88.0404%" y="773" width="0.0281%" height="15" fill="rgb(248,228,14)" fg:x="3136" fg:w="1"/><text x="88.2904%" y="783.50"></text></g><g><title>rust-sokoban`ggez::graphics::present (321 samples, 9.01%)</title><rect x="79.0848%" y="949" width="9.0118%" height="15" fill="rgb(208,133,18)" fg:x="2817" fg:w="321"/><text x="79.3348%" y="959.50">rust-sokoban`..</text></g><g><title>rust-sokoban`glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::swap_buffers (10 samples, 0.28%)</title><rect x="87.8158%" y="933" width="0.2807%" height="15" fill="rgb(207,35,49)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="943.50"></text></g><g><title>rust-sokoban`glutin::platform_impl::platform_impl::Context::swap_buffers (10 samples, 0.28%)</title><rect x="87.8158%" y="917" width="0.2807%" height="15" fill="rgb(205,68,36)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="927.50"></text></g><g><title>rust-sokoban`&lt;*mut objc::runtime::Object as cocoa::appkit::NSOpenGLContext&gt;::flushBuffer (10 samples, 0.28%)</title><rect x="87.8158%" y="901" width="0.2807%" height="15" fill="rgb(245,62,40)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="911.50"></text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (10 samples, 0.28%)</title><rect x="87.8158%" y="885" width="0.2807%" height="15" fill="rgb(228,27,24)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="895.50"></text></g><g><title>rust-sokoban`&lt;() as objc::message::MessageArguments&gt;::invoke (10 samples, 0.28%)</title><rect x="87.8158%" y="869" width="0.2807%" height="15" fill="rgb(253,19,12)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="879.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (10 samples, 0.28%)</title><rect x="87.8158%" y="853" width="0.2807%" height="15" fill="rgb(232,28,20)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="863.50"></text></g><g><title>OpenGL`CGLFlushDrawable (10 samples, 0.28%)</title><rect x="87.8158%" y="837" width="0.2807%" height="15" fill="rgb(218,35,51)" fg:x="3128" fg:w="10"/><text x="88.0658%" y="847.50"></text></g><g><title>OpenGL`0x00000001ef9845a4 (1 samples, 0.03%)</title><rect x="88.0685%" y="821" width="0.0281%" height="15" fill="rgb(212,90,40)" fg:x="3137" fg:w="1"/><text x="88.3185%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.03%)</title><rect x="88.0685%" y="805" width="0.0281%" height="15" fill="rgb(220,172,12)" fg:x="3137" fg:w="1"/><text x="88.3185%" y="815.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;ggez::filesystem::File&gt; (2 samples, 0.06%)</title><rect x="88.0966%" y="917" width="0.0561%" height="15" fill="rgb(226,159,20)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="927.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn ggez::vfs::VFile&gt;&gt; (2 samples, 0.06%)</title><rect x="88.0966%" y="901" width="0.0561%" height="15" fill="rgb(234,205,16)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="911.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::fs::File&gt; (2 samples, 0.06%)</title><rect x="88.0966%" y="885" width="0.0561%" height="15" fill="rgb(207,9,39)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="895.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (2 samples, 0.06%)</title><rect x="88.0966%" y="869" width="0.0561%" height="15" fill="rgb(249,143,15)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="879.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (2 samples, 0.06%)</title><rect x="88.0966%" y="853" width="0.0561%" height="15" fill="rgb(253,133,29)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (2 samples, 0.06%)</title><rect x="88.0966%" y="837" width="0.0561%" height="15" fill="rgb(221,187,0)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`close (2 samples, 0.06%)</title><rect x="88.0966%" y="821" width="0.0561%" height="15" fill="rgb(205,204,26)" fg:x="3138" fg:w="2"/><text x="88.3466%" y="831.50"></text></g><g><title>rust-sokoban`ggez::filesystem::open (1 samples, 0.03%)</title><rect x="88.1527%" y="917" width="0.0281%" height="15" fill="rgb(224,68,54)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="927.50"></text></g><g><title>rust-sokoban`ggez::filesystem::Filesystem::open (1 samples, 0.03%)</title><rect x="88.1527%" y="901" width="0.0281%" height="15" fill="rgb(209,67,4)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="911.50"></text></g><g><title>rust-sokoban`ggez::vfs::VFS::open (1 samples, 0.03%)</title><rect x="88.1527%" y="885" width="0.0281%" height="15" fill="rgb(228,229,18)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="895.50"></text></g><g><title>rust-sokoban`&lt;ggez::vfs::OverlayFS as ggez::vfs::VFS&gt;::open_options (1 samples, 0.03%)</title><rect x="88.1527%" y="869" width="0.0281%" height="15" fill="rgb(231,89,13)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="879.50"></text></g><g><title>rust-sokoban`&lt;ggez::vfs::PhysicalFS as ggez::vfs::VFS&gt;::open_options (1 samples, 0.03%)</title><rect x="88.1527%" y="853" width="0.0281%" height="15" fill="rgb(210,182,18)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="863.50"></text></g><g><title>rust-sokoban`ggez::vfs::PhysicalFS::to_absolute (1 samples, 0.03%)</title><rect x="88.1527%" y="837" width="0.0281%" height="15" fill="rgb(240,105,2)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="847.50"></text></g><g><title>rust-sokoban`std::path::PathBuf::push (1 samples, 0.03%)</title><rect x="88.1527%" y="821" width="0.0281%" height="15" fill="rgb(207,170,50)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="88.1527%" y="805" width="0.0281%" height="15" fill="rgb(232,133,24)" fg:x="3140" fg:w="1"/><text x="88.4027%" y="815.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::Font::new_glyph_font_bytes (1 samples, 0.03%)</title><rect x="88.1808%" y="917" width="0.0281%" height="15" fill="rgb(235,166,27)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="927.50"></text></g><g><title>rust-sokoban`ab_glyph::font_arc::FontArc::try_from_vec (1 samples, 0.03%)</title><rect x="88.1808%" y="901" width="0.0281%" height="15" fill="rgb(209,19,13)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="911.50"></text></g><g><title>rust-sokoban`ab_glyph::ttfp::FontVec::try_from_vec (1 samples, 0.03%)</title><rect x="88.1808%" y="885" width="0.0281%" height="15" fill="rgb(226,79,39)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="895.50"></text></g><g><title>rust-sokoban`ab_glyph::ttfp::FontVec::try_from_vec_and_index (1 samples, 0.03%)</title><rect x="88.1808%" y="869" width="0.0281%" height="15" fill="rgb(222,163,10)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="879.50"></text></g><g><title>rust-sokoban`owned_ttf_parser::owned::OwnedFace::from_vec (1 samples, 0.03%)</title><rect x="88.1808%" y="853" width="0.0281%" height="15" fill="rgb(214,44,19)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="863.50"></text></g><g><title>rust-sokoban`owned_ttf_parser::owned::SelfRefVecFace::try_from_vec (1 samples, 0.03%)</title><rect x="88.1808%" y="837" width="0.0281%" height="15" fill="rgb(210,217,13)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="847.50"></text></g><g><title>rust-sokoban`ttf_parser::parser::Stream::new (1 samples, 0.03%)</title><rect x="88.1808%" y="821" width="0.0281%" height="15" fill="rgb(237,61,54)" fg:x="3141" fg:w="1"/><text x="88.4308%" y="831.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::Font::new (5 samples, 0.14%)</title><rect x="88.0966%" y="933" width="0.1404%" height="15" fill="rgb(226,184,24)" fg:x="3138" fg:w="5"/><text x="88.3466%" y="943.50"></text></g><g><title>rust-sokoban`std::io::Read::read_to_end (1 samples, 0.03%)</title><rect x="88.2089%" y="917" width="0.0281%" height="15" fill="rgb(223,226,4)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="927.50"></text></g><g><title>rust-sokoban`std::io::default_read_to_end (1 samples, 0.03%)</title><rect x="88.2089%" y="901" width="0.0281%" height="15" fill="rgb(210,26,41)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="911.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="88.2089%" y="885" width="0.0281%" height="15" fill="rgb(220,221,6)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="895.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="88.2089%" y="869" width="0.0281%" height="15" fill="rgb(225,89,49)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="879.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="88.2089%" y="853" width="0.0281%" height="15" fill="rgb(218,70,45)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="863.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="88.2089%" y="837" width="0.0281%" height="15" fill="rgb(238,166,21)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="847.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="88.2089%" y="821" width="0.0281%" height="15" fill="rgb(224,141,44)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="831.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="88.2089%" y="805" width="0.0281%" height="15" fill="rgb(230,12,49)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="815.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="88.2089%" y="789" width="0.0281%" height="15" fill="rgb(212,174,12)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="799.50"></text></g><g><title>rust-sokoban`DYLD-STUB$$realloc (1 samples, 0.03%)</title><rect x="88.2089%" y="773" width="0.0281%" height="15" fill="rgb(246,67,9)" fg:x="3142" fg:w="1"/><text x="88.4589%" y="783.50"></text></g><g><title>rust-sokoban`ggez::graphics::SamplerCache&lt;B&gt;::get_or_insert (1 samples, 0.03%)</title><rect x="88.2369%" y="885" width="0.0281%" height="15" fill="rgb(239,35,23)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="895.50"></text></g><g><title>rust-sokoban`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.03%)</title><rect x="88.2369%" y="869" width="0.0281%" height="15" fill="rgb(211,167,0)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="879.50"></text></g><g><title>rust-sokoban`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.03%)</title><rect x="88.2369%" y="853" width="0.0281%" height="15" fill="rgb(225,119,45)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="863.50"></text></g><g><title>rust-sokoban`hashbrown::map::make_insert_hash (1 samples, 0.03%)</title><rect x="88.2369%" y="837" width="0.0281%" height="15" fill="rgb(210,162,6)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="847.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::texture::SamplerInfo as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="88.2369%" y="821" width="0.0281%" height="15" fill="rgb(208,118,35)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::texture::FilterMethod as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="88.2369%" y="805" width="0.0281%" height="15" fill="rgb(239,4,53)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="815.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="88.2369%" y="789" width="0.0281%" height="15" fill="rgb(213,130,21)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="799.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="88.2369%" y="773" width="0.0281%" height="15" fill="rgb(235,148,0)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="783.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="88.2369%" y="757" width="0.0281%" height="15" fill="rgb(244,224,18)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="767.50"></text></g><g><title>rust-sokoban`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="88.2369%" y="741" width="0.0281%" height="15" fill="rgb(211,214,4)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="88.2369%" y="725" width="0.0281%" height="15" fill="rgb(206,119,25)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="735.50"></text></g><g><title>rust-sokoban`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="88.2369%" y="709" width="0.0281%" height="15" fill="rgb(243,93,47)" fg:x="3143" fg:w="1"/><text x="88.4869%" y="719.50"></text></g><g><title>rust-sokoban`&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::bind_vertex_buffers (1 samples, 0.03%)</title><rect x="88.2650%" y="837" width="0.0281%" height="15" fill="rgb(224,194,6)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="847.50"></text></g><g><title>rust-sokoban`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="88.2650%" y="821" width="0.0281%" height="15" fill="rgb(243,229,6)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx_core::pso::VertexBufferSet&lt;R&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="88.2650%" y="805" width="0.0281%" height="15" fill="rgb(207,23,50)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="815.50"></text></g><g><title>rust-sokoban`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (1 samples, 0.03%)</title><rect x="88.2650%" y="789" width="0.0281%" height="15" fill="rgb(253,192,32)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="799.50"></text></g><g><title> N]&gt; for [A (1 samples, 0.03%)</title><rect x="88.2650%" y="773" width="0.0281%" height="15" fill="rgb(213,21,6)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="783.50"></text></g><g><title> N]&gt;::eq (1 samples, 0.03%)</title><rect x="88.2650%" y="757" width="0.0281%" height="15" fill="rgb(243,151,13)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="767.50"></text></g><g><title>rust-sokoban`&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (1 samples, 0.03%)</title><rect x="88.2650%" y="741" width="0.0281%" height="15" fill="rgb(233,165,41)" fg:x="3144" fg:w="1"/><text x="88.5150%" y="751.50"></text></g><g><title>rust-sokoban`ggez::graphics::context::GraphicsContextGeneric&lt;B&gt;::draw (2 samples, 0.06%)</title><rect x="88.2650%" y="885" width="0.0561%" height="15" fill="rgb(246,176,45)" fg:x="3144" fg:w="2"/><text x="88.5150%" y="895.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::shader::ShaderProgram&lt;Spec,C&gt; as ggez::graphics::shader::ShaderHandle&lt;Spec&gt;&gt;::draw (2 samples, 0.06%)</title><rect x="88.2650%" y="869" width="0.0561%" height="15" fill="rgb(217,170,52)" fg:x="3144" fg:w="2"/><text x="88.5150%" y="879.50"></text></g><g><title>rust-sokoban`gfx::encoder::Encoder&lt;R,C&gt;::draw (2 samples, 0.06%)</title><rect x="88.2650%" y="853" width="0.0561%" height="15" fill="rgb(214,203,54)" fg:x="3144" fg:w="2"/><text x="88.5150%" y="863.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::shader::ConstData&lt;R,C&gt; as gfx::pso::PipelineData&lt;R&gt;&gt;::bake_to (1 samples, 0.03%)</title><rect x="88.2931%" y="837" width="0.0281%" height="15" fill="rgb(248,215,49)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="847.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::pipe::Data&lt;R&gt; as gfx::pso::PipelineData&lt;R&gt;&gt;::bake_to (1 samples, 0.03%)</title><rect x="88.2931%" y="821" width="0.0281%" height="15" fill="rgb(208,46,10)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="831.50"></text></g><g><title>rust-sokoban`&lt;gfx::pso::buffer::VertexBufferCommon&lt;T,I&gt; as gfx::pso::DataBind&lt;R&gt;&gt;::bind_to (1 samples, 0.03%)</title><rect x="88.2931%" y="805" width="0.0281%" height="15" fill="rgb(254,5,31)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="815.50"></text></g><g><title>rust-sokoban`&lt;gfx::pso::buffer::RawVertexBuffer as gfx::pso::DataBind&lt;R&gt;&gt;::bind_to (1 samples, 0.03%)</title><rect x="88.2931%" y="789" width="0.0281%" height="15" fill="rgb(222,104,33)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="799.50"></text></g><g><title>rust-sokoban`gfx_core::handle::Manager&lt;R&gt;::ref_buffer (1 samples, 0.03%)</title><rect x="88.2931%" y="773" width="0.0281%" height="15" fill="rgb(248,49,16)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="783.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="88.2931%" y="757" width="0.0281%" height="15" fill="rgb(232,198,41)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="767.50"></text></g><g><title>rust-sokoban`core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="88.2931%" y="741" width="0.0281%" height="15" fill="rgb(214,125,3)" fg:x="3145" fg:w="1"/><text x="88.5431%" y="751.50"></text></g><g><title>rust-sokoban`ggez::graphics::draw (4 samples, 0.11%)</title><rect x="88.2369%" y="917" width="0.1123%" height="15" fill="rgb(229,220,28)" fg:x="3143" fg:w="4"/><text x="88.4869%" y="927.50"></text></g><g><title>rust-sokoban`&lt;ggez::graphics::spritebatch::SpriteBatch as ggez::graphics::Drawable&gt;::draw (4 samples, 0.11%)</title><rect x="88.2369%" y="901" width="0.1123%" height="15" fill="rgb(222,64,37)" fg:x="3143" fg:w="4"/><text x="88.4869%" y="911.50"></text></g><g><title>rust-sokoban`ggez::graphics::spritebatch::SpriteBatch::flush (1 samples, 0.03%)</title><rect x="88.3212%" y="885" width="0.0281%" height="15" fill="rgb(249,184,13)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="895.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="88.3212%" y="869" width="0.0281%" height="15" fill="rgb(252,176,6)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="879.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="88.3212%" y="853" width="0.0281%" height="15" fill="rgb(228,153,7)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="88.3212%" y="837" width="0.0281%" height="15" fill="rgb(242,193,5)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="88.3212%" y="821" width="0.0281%" height="15" fill="rgb(232,140,9)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="831.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="88.3212%" y="805" width="0.0281%" height="15" fill="rgb(213,222,16)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="88.3212%" y="789" width="0.0281%" height="15" fill="rgb(222,75,50)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="88.3212%" y="773" width="0.0281%" height="15" fill="rgb(205,180,2)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="783.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="88.3212%" y="757" width="0.0281%" height="15" fill="rgb(216,34,7)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="767.50"></text></g><g><title>rust-sokoban`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="88.3212%" y="741" width="0.0281%" height="15" fill="rgb(253,16,32)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="751.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.03%)</title><rect x="88.3212%" y="725" width="0.0281%" height="15" fill="rgb(208,97,28)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="735.50"></text></g><g><title>rust-sokoban`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="88.3212%" y="709" width="0.0281%" height="15" fill="rgb(225,92,11)" fg:x="3146" fg:w="1"/><text x="88.5712%" y="719.50"></text></g><g><title>rust-sokoban`&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="88.3492%" y="901" width="0.0281%" height="15" fill="rgb(243,38,12)" fg:x="3147" fg:w="1"/><text x="88.5992%" y="911.50"></text></g><g><title>rust-sokoban`&lt;ttf_parser::tables::glyf::GlyphPointsIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="88.4054%" y="597" width="0.0561%" height="15" fill="rgb(208,139,16)" fg:x="3149" fg:w="2"/><text x="88.6554%" y="607.50"></text></g><g><title>rust-sokoban`&lt;ttf_parser::tables::glyf::FlagsIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="88.4054%" y="581" width="0.0561%" height="15" fill="rgb(227,24,9)" fg:x="3149" fg:w="2"/><text x="88.6554%" y="591.50"></text></g><g><title>rust-sokoban`ttf_parser::parser::Stream::read (1 samples, 0.03%)</title><rect x="88.4335%" y="565" width="0.0281%" height="15" fill="rgb(206,62,11)" fg:x="3150" fg:w="1"/><text x="88.6835%" y="575.50"></text></g><g><title>rust-sokoban`ttf_parser::parser::Stream::read_bytes (1 samples, 0.03%)</title><rect x="88.4335%" y="549" width="0.0281%" height="15" fill="rgb(228,134,27)" fg:x="3150" fg:w="1"/><text x="88.6835%" y="559.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.03%)</title><rect x="88.4335%" y="533" width="0.0281%" height="15" fill="rgb(205,55,33)" fg:x="3150" fg:w="1"/><text x="88.6835%" y="543.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="88.4335%" y="517" width="0.0281%" height="15" fill="rgb(243,75,43)" fg:x="3150" fg:w="1"/><text x="88.6835%" y="527.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="88.4335%" y="501" width="0.0281%" height="15" fill="rgb(223,27,42)" fg:x="3150" fg:w="1"/><text x="88.6835%" y="511.50"></text></g><g><title>rust-sokoban`core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="88.4335%" y="485" width="0.0281%" height="15" fill="rgb(232,189,33)" fg:x="3150" fg:w="1"/><text x="88.6835%" y="495.50"></text></g><g><title>rust-sokoban`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="88.4615%" y="485" width="0.0281%" height="15" fill="rgb(210,9,39)" fg:x="3151" fg:w="1"/><text x="88.7115%" y="495.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="88.4896%" y="469" width="0.0281%" height="15" fill="rgb(242,85,26)" fg:x="3152" fg:w="1"/><text x="88.7396%" y="479.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="88.4896%" y="453" width="0.0281%" height="15" fill="rgb(248,44,4)" fg:x="3152" fg:w="1"/><text x="88.7396%" y="463.50"></text></g><g><title>rust-sokoban`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="88.4896%" y="437" width="0.0281%" height="15" fill="rgb(250,96,46)" fg:x="3152" fg:w="1"/><text x="88.7396%" y="447.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="88.4896%" y="421" width="0.0281%" height="15" fill="rgb(229,116,26)" fg:x="3152" fg:w="1"/><text x="88.7396%" y="431.50"></text></g><g><title>rust-sokoban`&lt;ab_glyph::ttfp::outliner::OutlineCurveBuilder as ttf_parser::OutlineBuilder&gt;::line_to (3 samples, 0.08%)</title><rect x="88.4615%" y="565" width="0.0842%" height="15" fill="rgb(246,94,34)" fg:x="3151" fg:w="3"/><text x="88.7115%" y="575.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.08%)</title><rect x="88.4615%" y="549" width="0.0842%" height="15" fill="rgb(251,73,21)" fg:x="3151" fg:w="3"/><text x="88.7115%" y="559.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="88.4615%" y="533" width="0.0842%" height="15" fill="rgb(254,121,25)" fg:x="3151" fg:w="3"/><text x="88.7115%" y="543.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="88.4615%" y="517" width="0.0842%" height="15" fill="rgb(215,161,49)" fg:x="3151" fg:w="3"/><text x="88.7115%" y="527.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.08%)</title><rect x="88.4615%" y="501" width="0.0842%" height="15" fill="rgb(221,43,13)" fg:x="3151" fg:w="3"/><text x="88.7115%" y="511.50"></text></g><g><title>rust-sokoban`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="88.4896%" y="485" width="0.0561%" height="15" fill="rgb(249,5,37)" fg:x="3152" fg:w="2"/><text x="88.7396%" y="495.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="88.5177%" y="469" width="0.0281%" height="15" fill="rgb(226,25,44)" fg:x="3153" fg:w="1"/><text x="88.7677%" y="479.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="88.5177%" y="453" width="0.0281%" height="15" fill="rgb(238,189,16)" fg:x="3153" fg:w="1"/><text x="88.7677%" y="463.50"></text></g><g><title>rust-sokoban`core::alloc::layout::Layout::from_size_align (1 samples, 0.03%)</title><rect x="88.5177%" y="437" width="0.0281%" height="15" fill="rgb(251,186,8)" fg:x="3153" fg:w="1"/><text x="88.7677%" y="447.50"></text></g><g><title>rust-sokoban`core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.03%)</title><rect x="88.5177%" y="421" width="0.0281%" height="15" fill="rgb(254,34,31)" fg:x="3153" fg:w="1"/><text x="88.7677%" y="431.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::collect (7 samples, 0.20%)</title><rect x="88.3773%" y="885" width="0.1965%" height="15" fill="rgb(225,215,27)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="895.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.20%)</title><rect x="88.3773%" y="869" width="0.1965%" height="15" fill="rgb(221,192,48)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="879.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.20%)</title><rect x="88.3773%" y="853" width="0.1965%" height="15" fill="rgb(219,137,20)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="863.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.20%)</title><rect x="88.3773%" y="837" width="0.1965%" height="15" fill="rgb(219,84,11)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="847.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.20%)</title><rect x="88.3773%" y="821" width="0.1965%" height="15" fill="rgb(224,10,23)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="831.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.20%)</title><rect x="88.3773%" y="805" width="0.1965%" height="15" fill="rgb(248,22,39)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="815.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.20%)</title><rect x="88.3773%" y="789" width="0.1965%" height="15" fill="rgb(212,154,20)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="799.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::find_map (7 samples, 0.20%)</title><rect x="88.3773%" y="773" width="0.1965%" height="15" fill="rgb(236,199,50)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="783.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.20%)</title><rect x="88.3773%" y="757" width="0.1965%" height="15" fill="rgb(211,9,17)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="767.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (7 samples, 0.20%)</title><rect x="88.3773%" y="741" width="0.1965%" height="15" fill="rgb(243,216,36)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="751.50"></text></g><g><title>rust-sokoban`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.20%)</title><rect x="88.3773%" y="725" width="0.1965%" height="15" fill="rgb(250,2,10)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="735.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::cache_queued::_{{closure}} (7 samples, 0.20%)</title><rect x="88.3773%" y="709" width="0.1965%" height="15" fill="rgb(226,50,48)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="719.50"></text></g><g><title>rust-sokoban`ab_glyph::font::Font::outline_glyph (7 samples, 0.20%)</title><rect x="88.3773%" y="693" width="0.1965%" height="15" fill="rgb(243,81,16)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="703.50"></text></g><g><title>rust-sokoban`&lt;ab_glyph::font_arc::FontArc as ab_glyph::font::Font&gt;::outline (7 samples, 0.20%)</title><rect x="88.3773%" y="677" width="0.1965%" height="15" fill="rgb(250,14,2)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="687.50"></text></g><g><title>rust-sokoban`&lt;ab_glyph::ttfp::FontVec as ab_glyph::font::Font&gt;::outline (7 samples, 0.20%)</title><rect x="88.3773%" y="661" width="0.1965%" height="15" fill="rgb(233,135,29)" fg:x="3148" fg:w="7"/><text x="88.6273%" y="671.50"></text></g><g><title>rust-sokoban`ttf_parser::Face::outline_glyph (6 samples, 0.17%)</title><rect x="88.4054%" y="645" width="0.1684%" height="15" fill="rgb(224,64,43)" fg:x="3149" fg:w="6"/><text x="88.6554%" y="655.50"></text></g><g><title>rust-sokoban`ttf_parser::tables::glyf::Table::outline (6 samples, 0.17%)</title><rect x="88.4054%" y="629" width="0.1684%" height="15" fill="rgb(238,84,13)" fg:x="3149" fg:w="6"/><text x="88.6554%" y="639.50"></text></g><g><title>rust-sokoban`ttf_parser::tables::glyf::outline_impl (6 samples, 0.17%)</title><rect x="88.4054%" y="613" width="0.1684%" height="15" fill="rgb(253,48,26)" fg:x="3149" fg:w="6"/><text x="88.6554%" y="623.50"></text></g><g><title>rust-sokoban`ttf_parser::tables::glyf::Builder::push_point (4 samples, 0.11%)</title><rect x="88.4615%" y="597" width="0.1123%" height="15" fill="rgb(205,223,31)" fg:x="3151" fg:w="4"/><text x="88.7115%" y="607.50"></text></g><g><title>rust-sokoban`ttf_parser::tables::glyf::Builder::line_to (4 samples, 0.11%)</title><rect x="88.4615%" y="581" width="0.1123%" height="15" fill="rgb(221,41,32)" fg:x="3151" fg:w="4"/><text x="88.7115%" y="591.50"></text></g><g><title>rust-sokoban`core::f32::_&lt;impl f32&gt;::min (1 samples, 0.03%)</title><rect x="88.5458%" y="565" width="0.0281%" height="15" fill="rgb(213,158,31)" fg:x="3154" fg:w="1"/><text x="88.7958%" y="575.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;glyph_brush_draw_cache::ByteArray2d&gt; (1 samples, 0.03%)</title><rect x="88.5738%" y="853" width="0.0281%" height="15" fill="rgb(245,126,43)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="863.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="88.5738%" y="837" width="0.0281%" height="15" fill="rgb(227,7,22)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="847.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="88.5738%" y="821" width="0.0281%" height="15" fill="rgb(252,90,44)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="831.50"></text></g><g><title>rust-sokoban`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="88.5738%" y="805" width="0.0281%" height="15" fill="rgb(253,91,0)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="815.50"></text></g><g><title>rust-sokoban`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="88.5738%" y="789" width="0.0281%" height="15" fill="rgb(252,175,49)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="799.50"></text></g><g><title>rust-sokoban`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="88.5738%" y="773" width="0.0281%" height="15" fill="rgb(246,150,1)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.03%)</title><rect x="88.5738%" y="757" width="0.0281%" height="15" fill="rgb(241,192,25)" fg:x="3155" fg:w="1"/><text x="88.8238%" y="767.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::draw_queued_text::_{{closure}} (2 samples, 0.06%)</title><rect x="88.6019%" y="853" width="0.0561%" height="15" fill="rgb(239,187,11)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="863.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::update_texture (2 samples, 0.06%)</title><rect x="88.6019%" y="837" width="0.0561%" height="15" fill="rgb(218,202,51)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="847.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="88.6019%" y="821" width="0.0561%" height="15" fill="rgb(225,176,8)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="831.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="88.6019%" y="805" width="0.0561%" height="15" fill="rgb(219,122,41)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="815.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="88.6019%" y="789" width="0.0561%" height="15" fill="rgb(248,140,20)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="88.6019%" y="773" width="0.0561%" height="15" fill="rgb(245,41,37)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="783.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="88.6019%" y="757" width="0.0561%" height="15" fill="rgb(235,82,39)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="767.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="88.6019%" y="741" width="0.0561%" height="15" fill="rgb(230,108,42)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="88.6019%" y="725" width="0.0561%" height="15" fill="rgb(215,150,50)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="735.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="88.6019%" y="709" width="0.0561%" height="15" fill="rgb(233,212,5)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="719.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::update_texture::_{{closure}} (2 samples, 0.06%)</title><rect x="88.6019%" y="693" width="0.0561%" height="15" fill="rgb(245,80,22)" fg:x="3156" fg:w="2"/><text x="88.8519%" y="703.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.03%)</title><rect x="88.6581%" y="741" width="0.0281%" height="15" fill="rgb(238,129,16)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="751.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.03%)</title><rect x="88.6581%" y="725" width="0.0281%" height="15" fill="rgb(240,19,0)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="735.50"></text></g><g><title>rust-sokoban`ab_glyph_rasterizer::raster::Rasterizer::for_each_pixel::_{{closure}} (1 samples, 0.03%)</title><rect x="88.6581%" y="709" width="0.0281%" height="15" fill="rgb(232,42,35)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="719.50"></text></g><g><title>rust-sokoban`ab_glyph_rasterizer::raster::Rasterizer::for_each_pixel_2d::_{{closure}} (1 samples, 0.03%)</title><rect x="88.6581%" y="693" width="0.0281%" height="15" fill="rgb(223,130,24)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="703.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::draw_glyph::_{{closure}} (1 samples, 0.03%)</title><rect x="88.6581%" y="677" width="0.0281%" height="15" fill="rgb(237,16,22)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="687.50"></text></g><g><title>rust-sokoban`&lt;glyph_brush_draw_cache::ByteArray2d as core::ops::index::IndexMut&lt;(usize,usize)&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="88.6581%" y="661" width="0.0281%" height="15" fill="rgb(248,192,20)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="671.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="88.6581%" y="645" width="0.0281%" height="15" fill="rgb(233,167,2)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="655.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="88.6581%" y="629" width="0.0281%" height="15" fill="rgb(252,71,44)" fg:x="3158" fg:w="1"/><text x="88.9081%" y="639.50"></text></g><g><title>rust-sokoban`ab_glyph_rasterizer::raster::Rasterizer::for_each_pixel_2d (2 samples, 0.06%)</title><rect x="88.6581%" y="821" width="0.0561%" height="15" fill="rgb(238,37,47)" fg:x="3158" fg:w="2"/><text x="88.9081%" y="831.50"></text></g><g><title>rust-sokoban`ab_glyph_rasterizer::raster::Rasterizer::for_each_pixel (2 samples, 0.06%)</title><rect x="88.6581%" y="805" width="0.0561%" height="15" fill="rgb(214,202,54)" fg:x="3158" fg:w="2"/><text x="88.9081%" y="815.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="88.6581%" y="789" width="0.0561%" height="15" fill="rgb(254,165,40)" fg:x="3158" fg:w="2"/><text x="88.9081%" y="799.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="88.6581%" y="773" width="0.0561%" height="15" fill="rgb(246,173,38)" fg:x="3158" fg:w="2"/><text x="88.9081%" y="783.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="88.6581%" y="757" width="0.0561%" height="15" fill="rgb(215,3,27)" fg:x="3158" fg:w="2"/><text x="88.9081%" y="767.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="88.6861%" y="741" width="0.0281%" height="15" fill="rgb(239,169,51)" fg:x="3159" fg:w="1"/><text x="88.9361%" y="751.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="88.7142%" y="805" width="0.0281%" height="15" fill="rgb(212,5,25)" fg:x="3160" fg:w="1"/><text x="88.9642%" y="815.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::draw_and_upload (8 samples, 0.22%)</title><rect x="88.5738%" y="885" width="0.2246%" height="15" fill="rgb(243,45,17)" fg:x="3155" fg:w="8"/><text x="88.8238%" y="895.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::draw_and_upload_1_thread (8 samples, 0.22%)</title><rect x="88.5738%" y="869" width="0.2246%" height="15" fill="rgb(242,97,9)" fg:x="3155" fg:w="8"/><text x="88.8238%" y="879.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::draw_glyph (5 samples, 0.14%)</title><rect x="88.6581%" y="853" width="0.1404%" height="15" fill="rgb(228,71,31)" fg:x="3158" fg:w="5"/><text x="88.9081%" y="863.50"></text></g><g><title>rust-sokoban`ab_glyph::outlined::OutlinedGlyph::draw (5 samples, 0.14%)</title><rect x="88.6581%" y="837" width="0.1404%" height="15" fill="rgb(252,184,16)" fg:x="3158" fg:w="5"/><text x="88.9081%" y="847.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::fold (3 samples, 0.08%)</title><rect x="88.7142%" y="821" width="0.0842%" height="15" fill="rgb(236,169,46)" fg:x="3160" fg:w="3"/><text x="88.9642%" y="831.50"></text></g><g><title>rust-sokoban`ab_glyph::outlined::OutlinedGlyph::draw::_{{closure}} (2 samples, 0.06%)</title><rect x="88.7423%" y="805" width="0.0561%" height="15" fill="rgb(207,17,47)" fg:x="3161" fg:w="2"/><text x="88.9923%" y="815.50"></text></g><g><title>rust-sokoban`ab_glyph_rasterizer::raster::Rasterizer::draw_line (2 samples, 0.06%)</title><rect x="88.7423%" y="789" width="0.0561%" height="15" fill="rgb(206,201,28)" fg:x="3161" fg:w="2"/><text x="88.9923%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="88.7704%" y="773" width="0.0281%" height="15" fill="rgb(224,184,23)" fg:x="3162" fg:w="1"/><text x="89.0204%" y="783.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="88.7704%" y="757" width="0.0281%" height="15" fill="rgb(208,139,48)" fg:x="3162" fg:w="1"/><text x="89.0204%" y="767.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="88.7704%" y="741" width="0.0281%" height="15" fill="rgb(208,130,10)" fg:x="3162" fg:w="1"/><text x="89.0204%" y="751.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="88.7704%" y="725" width="0.0281%" height="15" fill="rgb(211,213,45)" fg:x="3162" fg:w="1"/><text x="89.0204%" y="735.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::draw_queued_text (21 samples, 0.59%)</title><rect x="88.2369%" y="933" width="0.5896%" height="15" fill="rgb(235,100,30)" fg:x="3143" fg:w="21"/><text x="88.4869%" y="943.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::process_queued (17 samples, 0.48%)</title><rect x="88.3492%" y="917" width="0.4773%" height="15" fill="rgb(206,144,31)" fg:x="3147" fg:w="17"/><text x="88.5992%" y="927.50"></text></g><g><title>rust-sokoban`glyph_brush_draw_cache::DrawCache::cache_queued (16 samples, 0.45%)</title><rect x="88.3773%" y="901" width="0.4492%" height="15" fill="rgb(224,200,26)" fg:x="3148" fg:w="16"/><text x="88.6273%" y="911.50"></text></g><g><title>rust-sokoban`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="88.7984%" y="885" width="0.0281%" height="15" fill="rgb(247,104,53)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="895.50"></text></g><g><title>rust-sokoban`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.03%)</title><rect x="88.7984%" y="869" width="0.0281%" height="15" fill="rgb(220,14,17)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="879.50"></text></g><g><title>rust-sokoban`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="88.7984%" y="853" width="0.0281%" height="15" fill="rgb(230,140,40)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="863.50"></text></g><g><title>rust-sokoban`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="88.7984%" y="837" width="0.0281%" height="15" fill="rgb(229,2,41)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="847.50"></text></g><g><title>rust-sokoban`&lt;glyph_brush_draw_cache::LossyGlyphInfo as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="88.7984%" y="821" width="0.0281%" height="15" fill="rgb(232,89,16)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="831.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.03%)</title><rect x="88.7984%" y="805" width="0.0281%" height="15" fill="rgb(247,59,52)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="815.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.03%)</title><rect x="88.7984%" y="789" width="0.0281%" height="15" fill="rgb(226,110,21)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="799.50"></text></g><g><title>rust-sokoban`&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.03%)</title><rect x="88.7984%" y="773" width="0.0281%" height="15" fill="rgb(224,176,43)" fg:x="3163" fg:w="1"/><text x="89.0484%" y="783.50"></text></g><g><title>rust-sokoban`&lt;rust_sokoban::Game as ggez::event::EventHandler&gt;::draw (2,936 samples, 82.43%)</title><rect x="6.4290%" y="997" width="82.4256%" height="15" fill="rgb(221,73,6)" fg:x="229" fg:w="2936"/><text x="6.6790%" y="1007.50">rust-sokoban`&lt;rust_sokoban::Game as ggez::event::EventHandler&gt;::draw</text></g><g><title>rust-sokoban`&lt;T as shred::system::RunNow&gt;::run_now (2,936 samples, 82.43%)</title><rect x="6.4290%" y="981" width="82.4256%" height="15" fill="rgb(232,78,19)" fg:x="229" fg:w="2936"/><text x="6.6790%" y="991.50">rust-sokoban`&lt;T as shred::system::RunNow&gt;::run_now</text></g><g><title>rust-sokoban`&lt;rust_sokoban::systems::rendering_system::RenderingSystem as shred::system::System&gt;::run (2,936 samples, 82.43%)</title><rect x="6.4290%" y="965" width="82.4256%" height="15" fill="rgb(233,112,48)" fg:x="229" fg:w="2936"/><text x="6.6790%" y="975.50">rust-sokoban`&lt;rust_sokoban::systems::rendering_system::RenderingSystem as shred::system::System&gt;::run</text></g><g><title>rust-sokoban`rust_sokoban::systems::rendering_system::RenderingSystem::draw_text (27 samples, 0.76%)</title><rect x="88.0966%" y="949" width="0.7580%" height="15" fill="rgb(243,131,47)" fg:x="3138" fg:w="27"/><text x="88.3466%" y="959.50"></text></g><g><title>rust-sokoban`ggez::graphics::text::queue_text (1 samples, 0.03%)</title><rect x="88.8265%" y="933" width="0.0281%" height="15" fill="rgb(226,51,1)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="943.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::queue (1 samples, 0.03%)</title><rect x="88.8265%" y="917" width="0.0281%" height="15" fill="rgb(247,58,7)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="927.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::queue_custom_layout (1 samples, 0.03%)</title><rect x="88.8265%" y="901" width="0.0281%" height="15" fill="rgb(209,7,32)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="911.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::cache_glyphs (1 samples, 0.03%)</title><rect x="88.8265%" y="885" width="0.0281%" height="15" fill="rgb(209,39,41)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="895.50"></text></g><g><title>rust-sokoban`glyph_brush::glyph_brush::SectionHashDetail::new (1 samples, 0.03%)</title><rect x="88.8265%" y="869" width="0.0281%" height="15" fill="rgb(226,182,46)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="879.50"></text></g><g><title>rust-sokoban`&lt;glyph_brush_layout::builtin::Layout&lt;L&gt; as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="88.8265%" y="853" width="0.0281%" height="15" fill="rgb(230,219,10)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="863.50"></text></g><g><title>rust-sokoban`&lt;glyph_brush_layout::builtin::VerticalAlign as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="88.8265%" y="837" width="0.0281%" height="15" fill="rgb(227,175,30)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="847.50"></text></g><g><title>rust-sokoban`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.03%)</title><rect x="88.8265%" y="821" width="0.0281%" height="15" fill="rgb(217,2,50)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="831.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_isize (1 samples, 0.03%)</title><rect x="88.8265%" y="805" width="0.0281%" height="15" fill="rgb(229,160,0)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="815.50"></text></g><g><title>rust-sokoban`core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="88.8265%" y="789" width="0.0281%" height="15" fill="rgb(207,78,37)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="799.50"></text></g><g><title>rust-sokoban`&lt;twox_hash::sixty_four::XxHash64 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="88.8265%" y="773" width="0.0281%" height="15" fill="rgb(225,57,0)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="783.50"></text></g><g><title>rust-sokoban`twox_hash::sixty_four::XxHash64::write (1 samples, 0.03%)</title><rect x="88.8265%" y="757" width="0.0281%" height="15" fill="rgb(232,154,2)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="767.50"></text></g><g><title>rust-sokoban`twox_hash::sixty_four::XxHash64::maybe_consume_bytes (1 samples, 0.03%)</title><rect x="88.8265%" y="741" width="0.0281%" height="15" fill="rgb(241,212,25)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="751.50"></text></g><g><title>rust-sokoban`twox_hash::sixty_four::Buffer::consume (1 samples, 0.03%)</title><rect x="88.8265%" y="725" width="0.0281%" height="15" fill="rgb(226,69,20)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="735.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="88.8265%" y="709" width="0.0281%" height="15" fill="rgb(247,184,54)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="719.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="88.8265%" y="693" width="0.0281%" height="15" fill="rgb(210,145,0)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="703.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="88.8265%" y="677" width="0.0281%" height="15" fill="rgb(253,82,12)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="687.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="88.8265%" y="661" width="0.0281%" height="15" fill="rgb(245,42,11)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="671.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="88.8265%" y="645" width="0.0281%" height="15" fill="rgb(219,147,32)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="655.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="88.8265%" y="629" width="0.0281%" height="15" fill="rgb(246,12,7)" fg:x="3164" fg:w="1"/><text x="89.0765%" y="639.50"></text></g><g><title>rust-sokoban`&lt;rust_sokoban::Game as ggez::event::EventHandler&gt;::key_down_event (1 samples, 0.03%)</title><rect x="88.8546%" y="997" width="0.0281%" height="15" fill="rgb(243,50,9)" fg:x="3165" fg:w="1"/><text x="89.1046%" y="1007.50"></text></g><g><title>rust-sokoban`std::io::stdio::_print (1 samples, 0.03%)</title><rect x="88.8546%" y="981" width="0.0281%" height="15" fill="rgb(219,149,6)" fg:x="3165" fg:w="1"/><text x="89.1046%" y="991.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,951 samples, 82.85%)</title><rect x="6.0640%" y="1269" width="82.8467%" height="15" fill="rgb(241,51,42)" fg:x="216" fg:w="2951"/><text x="6.3140%" y="1279.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,951 samples, 82.85%)</title><rect x="6.0640%" y="1253" width="82.8467%" height="15" fill="rgb(226,128,27)" fg:x="216" fg:w="2951"/><text x="6.3140%" y="1263.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_end_handler (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1237" width="82.5098%" height="15" fill="rgb(244,144,4)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1247.50">rust-sokoban`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1221" width="82.5098%" height="15" fill="rgb(221,4,13)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1231.50">rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler</text></g><g><title>rust-sokoban`winit::platform_impl::platform::event_loop::stop_app_on_panic (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1205" width="82.5098%" height="15" fill="rgb(208,170,28)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1215.50">rust-sokoban`winit::platform_impl::platform::event_loop::stop_app_on_panic</text></g><g><title>rust-sokoban`std::panic::catch_unwind (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1189" width="82.5098%" height="15" fill="rgb(226,131,13)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1199.50">rust-sokoban`std::panic::catch_unwind</text></g><g><title>rust-sokoban`std::panicking::try (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1173" width="82.5098%" height="15" fill="rgb(215,72,41)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1183.50">rust-sokoban`std::panicking::try</text></g><g><title>rust-sokoban`__rust_try (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1157" width="82.5098%" height="15" fill="rgb(243,108,20)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1167.50">rust-sokoban`__rust_try</text></g><g><title>rust-sokoban`std::panicking::try::do_call (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1141" width="82.5098%" height="15" fill="rgb(230,189,17)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1151.50">rust-sokoban`std::panicking::try::do_call</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1125" width="82.5098%" height="15" fill="rgb(220,50,17)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1135.50">rust-sokoban`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}}</text></g><g><title>rust-sokoban`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}} (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1109" width="82.5098%" height="15" fill="rgb(248,152,48)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1119.50">rust-sokoban`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}}</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::AppState::cleared (2,939 samples, 82.51%)</title><rect x="6.4009%" y="1093" width="82.5098%" height="15" fill="rgb(244,91,11)" fg:x="228" fg:w="2939"/><text x="6.6509%" y="1103.50">rust-sokoban`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (2,938 samples, 82.48%)</title><rect x="6.4290%" y="1077" width="82.4818%" height="15" fill="rgb(220,157,5)" fg:x="229" fg:w="2938"/><text x="6.6790%" y="1087.50">rust-sokoban`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>rust-sokoban`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (2,938 samples, 82.48%)</title><rect x="6.4290%" y="1061" width="82.4818%" height="15" fill="rgb(253,137,8)" fg:x="229" fg:w="2938"/><text x="6.6790%" y="1071.50">rust-sokoban`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;:..</text></g><g><title>rust-sokoban`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (2,938 samples, 82.48%)</title><rect x="6.4290%" y="1045" width="82.4818%" height="15" fill="rgb(217,137,51)" fg:x="229" fg:w="2938"/><text x="6.6790%" y="1055.50">rust-sokoban`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback</text></g><g><title>rust-sokoban`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event::_{{closure}} (2,938 samples, 82.48%)</title><rect x="6.4290%" y="1029" width="82.4818%" height="15" fill="rgb(218,209,53)" fg:x="229" fg:w="2938"/><text x="6.6790%" y="1039.50">rust-sokoban`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;:..</text></g><g><title>rust-sokoban`ggez::event::run::_{{closure}} (2,938 samples, 82.48%)</title><rect x="6.4290%" y="1013" width="82.4818%" height="15" fill="rgb(249,137,25)" fg:x="229" fg:w="2938"/><text x="6.6790%" y="1023.50">rust-sokoban`ggez::event::run::_{{closure}}</text></g><g><title>rust-sokoban`&lt;rust_sokoban::Game as ggez::event::EventHandler&gt;::update (1 samples, 0.03%)</title><rect x="88.8827%" y="997" width="0.0281%" height="15" fill="rgb(239,155,26)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="1007.50"></text></g><g><title>rust-sokoban`shred::dispatch::dispatcher::Dispatcher::dispatch (1 samples, 0.03%)</title><rect x="88.8827%" y="981" width="0.0281%" height="15" fill="rgb(227,85,46)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="991.50"></text></g><g><title>rust-sokoban`shred::dispatch::dispatcher::Dispatcher::dispatch_par (1 samples, 0.03%)</title><rect x="88.8827%" y="965" width="0.0281%" height="15" fill="rgb(251,107,43)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="975.50"></text></g><g><title>rust-sokoban`rayon_core::thread_pool::ThreadPool::install (1 samples, 0.03%)</title><rect x="88.8827%" y="949" width="0.0281%" height="15" fill="rgb(234,170,33)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="959.50"></text></g><g><title>rust-sokoban`rayon_core::registry::Registry::in_worker (1 samples, 0.03%)</title><rect x="88.8827%" y="933" width="0.0281%" height="15" fill="rgb(206,29,35)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="943.50"></text></g><g><title>rust-sokoban`rayon_core::registry::Registry::in_worker_cold (1 samples, 0.03%)</title><rect x="88.8827%" y="917" width="0.0281%" height="15" fill="rgb(227,138,25)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="927.50"></text></g><g><title>rust-sokoban`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="88.8827%" y="901" width="0.0281%" height="15" fill="rgb(249,131,35)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="911.50"></text></g><g><title>rust-sokoban`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="88.8827%" y="885" width="0.0281%" height="15" fill="rgb(239,6,40)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="895.50"></text></g><g><title>rust-sokoban`rayon_core::registry::Registry::in_worker_cold::_{{closure}} (1 samples, 0.03%)</title><rect x="88.8827%" y="869" width="0.0281%" height="15" fill="rgb(246,136,47)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="879.50"></text></g><g><title>rust-sokoban`rayon_core::registry::Registry::inject (1 samples, 0.03%)</title><rect x="88.8827%" y="853" width="0.0281%" height="15" fill="rgb(253,58,26)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="863.50"></text></g><g><title>rust-sokoban`rayon_core::sleep::Sleep::new_injected_jobs (1 samples, 0.03%)</title><rect x="88.8827%" y="837" width="0.0281%" height="15" fill="rgb(237,141,10)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="847.50"></text></g><g><title>rust-sokoban`rayon_core::sleep::Sleep::new_jobs (1 samples, 0.03%)</title><rect x="88.8827%" y="821" width="0.0281%" height="15" fill="rgb(234,156,12)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="831.50"></text></g><g><title>rust-sokoban`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.03%)</title><rect x="88.8827%" y="805" width="0.0281%" height="15" fill="rgb(243,224,36)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="815.50"></text></g><g><title>rust-sokoban`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.03%)</title><rect x="88.8827%" y="789" width="0.0281%" height="15" fill="rgb(205,229,51)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="799.50"></text></g><g><title>rust-sokoban`std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="88.8827%" y="773" width="0.0281%" height="15" fill="rgb(223,189,4)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="783.50"></text></g><g><title>rust-sokoban`std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="88.8827%" y="757" width="0.0281%" height="15" fill="rgb(249,167,54)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="767.50"></text></g><g><title>rust-sokoban`std::sync::poison::Flag::borrow (1 samples, 0.03%)</title><rect x="88.8827%" y="741" width="0.0281%" height="15" fill="rgb(218,34,28)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="751.50"></text></g><g><title>rust-sokoban`std::thread::panicking (1 samples, 0.03%)</title><rect x="88.8827%" y="725" width="0.0281%" height="15" fill="rgb(232,109,42)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="735.50"></text></g><g><title>rust-sokoban`std::panicking::panic_count::count_is_zero (1 samples, 0.03%)</title><rect x="88.8827%" y="709" width="0.0281%" height="15" fill="rgb(248,214,46)" fg:x="3166" fg:w="1"/><text x="89.1327%" y="719.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (2,967 samples, 83.30%)</title><rect x="5.9798%" y="1301" width="83.2959%" height="15" fill="rgb(244,216,40)" fg:x="213" fg:w="2967"/><text x="6.2298%" y="1311.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>CoreFoundation`__CFRunLoopRun (2,966 samples, 83.27%)</title><rect x="6.0079%" y="1285" width="83.2678%" height="15" fill="rgb(231,226,31)" fg:x="214" fg:w="2966"/><text x="6.2579%" y="1295.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (13 samples, 0.36%)</title><rect x="88.9107%" y="1269" width="0.3650%" height="15" fill="rgb(238,38,43)" fg:x="3167" fg:w="13"/><text x="89.1607%" y="1279.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (13 samples, 0.36%)</title><rect x="88.9107%" y="1253" width="0.3650%" height="15" fill="rgb(208,88,43)" fg:x="3167" fg:w="13"/><text x="89.1607%" y="1263.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (2,973 samples, 83.46%)</title><rect x="5.8394%" y="1333" width="83.4643%" height="15" fill="rgb(205,136,37)" fg:x="208" fg:w="2973"/><text x="6.0894%" y="1343.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (2,968 samples, 83.32%)</title><rect x="5.9798%" y="1317" width="83.3240%" height="15" fill="rgb(237,34,14)" fg:x="213" fg:w="2968"/><text x="6.2298%" y="1327.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_FirstEventTime (1 samples, 0.03%)</title><rect x="89.2757%" y="1301" width="0.0281%" height="15" fill="rgb(236,193,44)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1311.50"></text></g><g><title>AE`aeInstallRunLoopDispatcher (1 samples, 0.03%)</title><rect x="89.2757%" y="1285" width="0.0281%" height="15" fill="rgb(231,48,10)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1295.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="89.2757%" y="1269" width="0.0281%" height="15" fill="rgb(213,141,34)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1279.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="89.2757%" y="1253" width="0.0281%" height="15" fill="rgb(249,130,34)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1263.50"></text></g><g><title>AE`0x0000000194dd3f34 (1 samples, 0.03%)</title><rect x="89.2757%" y="1237" width="0.0281%" height="15" fill="rgb(219,42,41)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1247.50"></text></g><g><title>AE`0x0000000194dd44c8 (1 samples, 0.03%)</title><rect x="89.2757%" y="1221" width="0.0281%" height="15" fill="rgb(224,100,54)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1231.50"></text></g><g><title>AE`AEGetRegisteredMachPort (1 samples, 0.03%)</title><rect x="89.2757%" y="1205" width="0.0281%" height="15" fill="rgb(229,200,27)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1215.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="89.2757%" y="1189" width="0.0281%" height="15" fill="rgb(217,118,10)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="89.2757%" y="1173" width="0.0281%" height="15" fill="rgb(206,22,3)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1183.50"></text></g><g><title>AE`0x0000000194dd4e80 (1 samples, 0.03%)</title><rect x="89.2757%" y="1157" width="0.0281%" height="15" fill="rgb(232,163,46)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1167.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl (1 samples, 0.03%)</title><rect x="89.2757%" y="1141" width="0.0281%" height="15" fill="rgb(206,95,13)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1151.50"></text></g><g><title>libsystem_trace.dylib`_os_log (1 samples, 0.03%)</title><rect x="89.2757%" y="1125" width="0.0281%" height="15" fill="rgb(253,154,18)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1135.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (1 samples, 0.03%)</title><rect x="89.2757%" y="1109" width="0.0281%" height="15" fill="rgb(219,32,23)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1119.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (1 samples, 0.03%)</title><rect x="89.2757%" y="1093" width="0.0281%" height="15" fill="rgb(230,191,45)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1103.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_tracepoint_reserve_slow (1 samples, 0.03%)</title><rect x="89.2757%" y="1077" width="0.0281%" height="15" fill="rgb(229,64,36)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1087.50"></text></g><g><title>libdispatch.dylib`firehose_drain_notifications_once (1 samples, 0.03%)</title><rect x="89.2757%" y="1061" width="0.0281%" height="15" fill="rgb(205,129,25)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="89.2757%" y="1045" width="0.0281%" height="15" fill="rgb(254,112,7)" fg:x="3180" fg:w="1"/><text x="89.5257%" y="1055.50"></text></g><g><title>rust-sokoban`ggez::event::run::_{{closure}} (3,126 samples, 87.76%)</title><rect x="1.5722%" y="1493" width="87.7597%" height="15" fill="rgb(226,53,48)" fg:x="56" fg:w="3126"/><text x="1.8222%" y="1503.50">rust-sokoban`ggez::event::run::_{{closure}}</text></g><g><title>rust-sokoban`&lt;winit::event_loop::EventLoopWindowTarget&lt;T&gt; as core::fmt::Debug&gt;::fmt (3,126 samples, 87.76%)</title><rect x="1.5722%" y="1477" width="87.7597%" height="15" fill="rgb(214,153,38)" fg:x="56" fg:w="3126"/><text x="1.8222%" y="1487.50">rust-sokoban`&lt;winit::event_loop::EventLoopWindowTarget&lt;T&gt; as core::fmt::Debug&gt;::fmt</text></g><g><title>rust-sokoban`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (3,126 samples, 87.76%)</title><rect x="1.5722%" y="1461" width="87.7597%" height="15" fill="rgb(243,101,7)" fg:x="56" fg:w="3126"/><text x="1.8222%" y="1471.50">rust-sokoban`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>rust-sokoban`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (3,125 samples, 87.73%)</title><rect x="1.6002%" y="1445" width="87.7316%" height="15" fill="rgb(240,140,22)" fg:x="57" fg:w="3125"/><text x="1.8502%" y="1455.50">rust-sokoban`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return</text></g><g><title>rust-sokoban`objc::message::platform::send_unverified (3,125 samples, 87.73%)</title><rect x="1.6002%" y="1429" width="87.7316%" height="15" fill="rgb(235,114,2)" fg:x="57" fg:w="3125"/><text x="1.8502%" y="1439.50">rust-sokoban`objc::message::platform::send_unverified</text></g><g><title>rust-sokoban`&lt;() as objc::message::MessageArguments&gt;::invoke (3,125 samples, 87.73%)</title><rect x="1.6002%" y="1413" width="87.7316%" height="15" fill="rgb(242,59,12)" fg:x="57" fg:w="3125"/><text x="1.8502%" y="1423.50">rust-sokoban`&lt;() as objc::message::MessageArguments&gt;::invoke</text></g><g><title>AppKit`-[NSApplication run] (3,125 samples, 87.73%)</title><rect x="1.6002%" y="1397" width="87.7316%" height="15" fill="rgb(252,134,9)" fg:x="57" fg:w="3125"/><text x="1.8502%" y="1407.50">AppKit`-[NSApplication run]</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (2,982 samples, 83.72%)</title><rect x="5.6148%" y="1381" width="83.7170%" height="15" fill="rgb(236,4,44)" fg:x="200" fg:w="2982"/><text x="5.8648%" y="1391.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`_DPSNextEvent (2,979 samples, 83.63%)</title><rect x="5.6990%" y="1365" width="83.6328%" height="15" fill="rgb(254,172,41)" fg:x="203" fg:w="2979"/><text x="5.9490%" y="1375.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (2,974 samples, 83.49%)</title><rect x="5.8394%" y="1349" width="83.4924%" height="15" fill="rgb(244,63,20)" fg:x="208" fg:w="2974"/><text x="6.0894%" y="1359.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>SkyLight`SLEventGetType (1 samples, 0.03%)</title><rect x="89.3038%" y="1333" width="0.0281%" height="15" fill="rgb(250,73,31)" fg:x="3181" fg:w="1"/><text x="89.5538%" y="1343.50"></text></g><g><title>rust-sokoban`core::str::_&lt;impl str&gt;::trim_matches (1 samples, 0.03%)</title><rect x="89.3318%" y="1461" width="0.0281%" height="15" fill="rgb(241,38,36)" fg:x="3182" fg:w="1"/><text x="89.5818%" y="1471.50"></text></g><g><title>dyld`start (3,184 samples, 89.39%)</title><rect x="0.0000%" y="1621" width="89.3880%" height="15" fill="rgb(245,211,2)" fg:x="0" fg:w="3184"/><text x="0.2500%" y="1631.50">dyld`start</text></g><g><title>rust-sokoban`main (3,184 samples, 89.39%)</title><rect x="0.0000%" y="1605" width="89.3880%" height="15" fill="rgb(206,120,28)" fg:x="0" fg:w="3184"/><text x="0.2500%" y="1615.50">rust-sokoban`main</text></g><g><title>rust-sokoban`std::rt::lang_start (3,184 samples, 89.39%)</title><rect x="0.0000%" y="1589" width="89.3880%" height="15" fill="rgb(211,59,34)" fg:x="0" fg:w="3184"/><text x="0.2500%" y="1599.50">rust-sokoban`std::rt::lang_start</text></g><g><title>rust-sokoban`std::rt::lang_start_internal (3,184 samples, 89.39%)</title><rect x="0.0000%" y="1573" width="89.3880%" height="15" fill="rgb(233,168,5)" fg:x="0" fg:w="3184"/><text x="0.2500%" y="1583.50">rust-sokoban`std::rt::lang_start_internal</text></g><g><title>rust-sokoban`std::rt::lang_start::_{{closure}} (3,183 samples, 89.36%)</title><rect x="0.0281%" y="1557" width="89.3599%" height="15" fill="rgb(234,33,13)" fg:x="1" fg:w="3183"/><text x="0.2781%" y="1567.50">rust-sokoban`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-sokoban`std::sys_common::backtrace::__rust_begin_short_backtrace (3,183 samples, 89.36%)</title><rect x="0.0281%" y="1541" width="89.3599%" height="15" fill="rgb(231,150,26)" fg:x="1" fg:w="3183"/><text x="0.2781%" y="1551.50">rust-sokoban`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-sokoban`core::ops::function::FnOnce::call_once (3,183 samples, 89.36%)</title><rect x="0.0281%" y="1525" width="89.3599%" height="15" fill="rgb(217,191,4)" fg:x="1" fg:w="3183"/><text x="0.2781%" y="1535.50">rust-sokoban`core::ops::function::FnOnce::call_once</text></g><g><title>rust-sokoban`rust_sokoban::main (3,183 samples, 89.36%)</title><rect x="0.0281%" y="1509" width="89.3599%" height="15" fill="rgb(246,198,38)" fg:x="1" fg:w="3183"/><text x="0.2781%" y="1519.50">rust-sokoban`rust_sokoban::main</text></g><g><title>rust-sokoban`rust_sokoban::initialize_level (2 samples, 0.06%)</title><rect x="89.3318%" y="1493" width="0.0561%" height="15" fill="rgb(245,64,37)" fg:x="3182" fg:w="2"/><text x="89.5818%" y="1503.50"></text></g><g><title>rust-sokoban`rust_sokoban::map::load_map (2 samples, 0.06%)</title><rect x="89.3318%" y="1477" width="0.0561%" height="15" fill="rgb(250,30,36)" fg:x="3182" fg:w="2"/><text x="89.5818%" y="1487.50"></text></g><g><title>rust-sokoban`rust_sokoban::entities::create_wall (1 samples, 0.03%)</title><rect x="89.3599%" y="1461" width="0.0281%" height="15" fill="rgb(217,86,53)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1471.50"></text></g><g><title>rust-sokoban`&lt;shred::world::World as specs::world::world_ext::WorldExt&gt;::create_entity (1 samples, 0.03%)</title><rect x="89.3599%" y="1445" width="0.0281%" height="15" fill="rgb(228,157,16)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1455.50"></text></g><g><title>rust-sokoban`&lt;shred::world::World as specs::world::world_ext::WorldExt&gt;::create_entity_unchecked (1 samples, 0.03%)</title><rect x="89.3599%" y="1429" width="0.0281%" height="15" fill="rgb(217,59,31)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1439.50"></text></g><g><title>rust-sokoban`&lt;shred::world::World as specs::world::world_ext::WorldExt&gt;::entities_mut (1 samples, 0.03%)</title><rect x="89.3599%" y="1413" width="0.0281%" height="15" fill="rgb(237,138,41)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1423.50"></text></g><g><title>rust-sokoban`&lt;shred::world::World as specs::world::world_ext::WorldExt&gt;::write_resource (1 samples, 0.03%)</title><rect x="89.3599%" y="1397" width="0.0281%" height="15" fill="rgb(227,91,49)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1407.50"></text></g><g><title>rust-sokoban`shred::world::World::fetch_mut (1 samples, 0.03%)</title><rect x="89.3599%" y="1381" width="0.0281%" height="15" fill="rgb(247,21,44)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1391.50"></text></g><g><title>rust-sokoban`shred::world::World::try_fetch_mut (1 samples, 0.03%)</title><rect x="89.3599%" y="1365" width="0.0281%" height="15" fill="rgb(219,210,51)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1375.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="89.3599%" y="1349" width="0.0281%" height="15" fill="rgb(209,140,6)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1359.50"></text></g><g><title>rust-sokoban`shred::world::World::try_fetch_mut::_{{closure}} (1 samples, 0.03%)</title><rect x="89.3599%" y="1333" width="0.0281%" height="15" fill="rgb(221,188,24)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1343.50"></text></g><g><title>rust-sokoban`shred::cell::TrustCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="89.3599%" y="1317" width="0.0281%" height="15" fill="rgb(232,154,20)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1327.50"></text></g><g><title>rust-sokoban`shred::cell::TrustCell&lt;T&gt;::check_flag_write (1 samples, 0.03%)</title><rect x="89.3599%" y="1301" width="0.0281%" height="15" fill="rgb(244,137,50)" fg:x="3183" fg:w="1"/><text x="89.6099%" y="1311.50"></text></g><g><title>libGLProgrammability.dylib`getAndRemapBuiltinFromScope (1 samples, 0.03%)</title><rect x="89.3880%" y="1621" width="0.0281%" height="15" fill="rgb(225,185,43)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1631.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_GLPNameTableEntry (1 samples, 0.03%)</title><rect x="89.3880%" y="1605" width="0.0281%" height="15" fill="rgb(213,205,38)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1615.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1589" width="0.0281%" height="15" fill="rgb(236,73,12)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1599.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1573" width="0.0281%" height="15" fill="rgb(235,219,13)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1583.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1557" width="0.0281%" height="15" fill="rgb(218,59,36)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1567.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1541" width="0.0281%" height="15" fill="rgb(205,110,39)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1551.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1525" width="0.0281%" height="15" fill="rgb(218,206,42)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1535.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1509" width="0.0281%" height="15" fill="rgb(248,125,24)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1519.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1493" width="0.0281%" height="15" fill="rgb(242,28,27)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1503.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1477" width="0.0281%" height="15" fill="rgb(216,228,15)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1487.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1461" width="0.0281%" height="15" fill="rgb(235,116,46)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1471.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1445" width="0.0281%" height="15" fill="rgb(224,18,32)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1455.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1429" width="0.0281%" height="15" fill="rgb(252,5,12)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1439.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1413" width="0.0281%" height="15" fill="rgb(251,36,5)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1423.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1397" width="0.0281%" height="15" fill="rgb(217,53,14)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1407.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1381" width="0.0281%" height="15" fill="rgb(215,86,45)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1391.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1365" width="0.0281%" height="15" fill="rgb(242,169,11)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1375.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1349" width="0.0281%" height="15" fill="rgb(211,213,45)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1359.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1333" width="0.0281%" height="15" fill="rgb(205,88,11)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1343.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1317" width="0.0281%" height="15" fill="rgb(252,69,26)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1327.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1301" width="0.0281%" height="15" fill="rgb(246,123,37)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1311.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1285" width="0.0281%" height="15" fill="rgb(212,205,5)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1295.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1269" width="0.0281%" height="15" fill="rgb(253,148,0)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1279.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1253" width="0.0281%" height="15" fill="rgb(239,22,4)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1263.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1237" width="0.0281%" height="15" fill="rgb(226,26,53)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1247.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1221" width="0.0281%" height="15" fill="rgb(225,229,45)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1231.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1205" width="0.0281%" height="15" fill="rgb(220,60,37)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1215.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1189" width="0.0281%" height="15" fill="rgb(217,180,35)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1199.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1173" width="0.0281%" height="15" fill="rgb(229,7,53)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1183.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1157" width="0.0281%" height="15" fill="rgb(254,137,3)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1167.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1141" width="0.0281%" height="15" fill="rgb(215,140,41)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1151.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1125" width="0.0281%" height="15" fill="rgb(250,80,15)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1135.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1109" width="0.0281%" height="15" fill="rgb(252,191,6)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1119.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1093" width="0.0281%" height="15" fill="rgb(246,217,18)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1103.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1077" width="0.0281%" height="15" fill="rgb(223,93,7)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1087.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1061" width="0.0281%" height="15" fill="rgb(225,55,52)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1071.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1045" width="0.0281%" height="15" fill="rgb(240,31,24)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1055.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="1029" width="0.0281%" height="15" fill="rgb(205,56,52)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1039.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="1013" width="0.0281%" height="15" fill="rgb(246,146,12)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1023.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="997" width="0.0281%" height="15" fill="rgb(239,84,36)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="1007.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="981" width="0.0281%" height="15" fill="rgb(207,41,40)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="991.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="965" width="0.0281%" height="15" fill="rgb(241,179,25)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="975.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="949" width="0.0281%" height="15" fill="rgb(210,0,34)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="959.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="933" width="0.0281%" height="15" fill="rgb(225,217,29)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="943.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="917" width="0.0281%" height="15" fill="rgb(216,191,38)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="927.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="901" width="0.0281%" height="15" fill="rgb(232,140,52)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="911.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="885" width="0.0281%" height="15" fill="rgb(223,158,51)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="895.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="869" width="0.0281%" height="15" fill="rgb(235,29,51)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="879.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="853" width="0.0281%" height="15" fill="rgb(215,181,18)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="863.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="837" width="0.0281%" height="15" fill="rgb(227,125,34)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="847.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="821" width="0.0281%" height="15" fill="rgb(230,197,49)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="831.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="805" width="0.0281%" height="15" fill="rgb(239,141,16)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="815.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="789" width="0.0281%" height="15" fill="rgb(225,105,43)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="799.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="773" width="0.0281%" height="15" fill="rgb(214,131,14)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="783.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="757" width="0.0281%" height="15" fill="rgb(229,177,11)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="767.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="741" width="0.0281%" height="15" fill="rgb(231,180,14)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="751.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="725" width="0.0281%" height="15" fill="rgb(232,88,2)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="735.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="709" width="0.0281%" height="15" fill="rgb(205,220,8)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="719.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="693" width="0.0281%" height="15" fill="rgb(225,23,53)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="703.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="677" width="0.0281%" height="15" fill="rgb(213,62,29)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="687.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="661" width="0.0281%" height="15" fill="rgb(227,75,7)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="671.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="645" width="0.0281%" height="15" fill="rgb(207,105,14)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="655.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="629" width="0.0281%" height="15" fill="rgb(245,62,29)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="639.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="613" width="0.0281%" height="15" fill="rgb(236,202,4)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="623.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="597" width="0.0281%" height="15" fill="rgb(250,67,1)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="607.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="581" width="0.0281%" height="15" fill="rgb(253,115,44)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="591.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="565" width="0.0281%" height="15" fill="rgb(251,139,18)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="575.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="549" width="0.0281%" height="15" fill="rgb(218,22,32)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="559.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="533" width="0.0281%" height="15" fill="rgb(243,53,5)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="543.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="517" width="0.0281%" height="15" fill="rgb(227,56,16)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="527.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="501" width="0.0281%" height="15" fill="rgb(245,53,0)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="511.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="485" width="0.0281%" height="15" fill="rgb(216,170,35)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="495.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="469" width="0.0281%" height="15" fill="rgb(211,200,8)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="479.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="453" width="0.0281%" height="15" fill="rgb(228,204,44)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="463.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="437" width="0.0281%" height="15" fill="rgb(214,121,17)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="447.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="421" width="0.0281%" height="15" fill="rgb(233,64,38)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="431.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="405" width="0.0281%" height="15" fill="rgb(253,54,19)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="415.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="389" width="0.0281%" height="15" fill="rgb(253,94,18)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="399.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="373" width="0.0281%" height="15" fill="rgb(227,57,52)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="383.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="357" width="0.0281%" height="15" fill="rgb(230,228,50)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="367.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="341" width="0.0281%" height="15" fill="rgb(217,205,27)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="351.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="325" width="0.0281%" height="15" fill="rgb(252,71,50)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="335.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="309" width="0.0281%" height="15" fill="rgb(209,86,4)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="319.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="293" width="0.0281%" height="15" fill="rgb(229,94,0)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="303.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="277" width="0.0281%" height="15" fill="rgb(252,223,21)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="287.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="261" width="0.0281%" height="15" fill="rgb(230,210,4)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="271.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="245" width="0.0281%" height="15" fill="rgb(240,149,38)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="255.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="229" width="0.0281%" height="15" fill="rgb(254,105,20)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="239.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="213" width="0.0281%" height="15" fill="rgb(253,87,46)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="223.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="197" width="0.0281%" height="15" fill="rgb(253,116,33)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="207.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="181" width="0.0281%" height="15" fill="rgb(229,198,5)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="191.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="165" width="0.0281%" height="15" fill="rgb(242,38,37)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="175.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="149" width="0.0281%" height="15" fill="rgb(242,69,53)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="159.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="133" width="0.0281%" height="15" fill="rgb(249,80,16)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="143.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="117" width="0.0281%" height="15" fill="rgb(206,128,11)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="127.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="101" width="0.0281%" height="15" fill="rgb(212,35,20)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="111.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="85" width="0.0281%" height="15" fill="rgb(236,79,13)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="95.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPOverload_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="69" width="0.0281%" height="15" fill="rgb(233,123,3)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="79.50"></text></g><g><title>libGLProgrammability.dylib`deserialize_pointer (1 samples, 0.03%)</title><rect x="89.3880%" y="53" width="0.0281%" height="15" fill="rgb(214,93,52)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="63.50"></text></g><g><title>libGLProgrammability.dylib`__deserialize_GLPType_block_invoke (1 samples, 0.03%)</title><rect x="89.3880%" y="37" width="0.0281%" height="15" fill="rgb(251,37,40)" fg:x="3184" fg:w="1"/><text x="89.6380%" y="47.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.03%)</title><rect x="89.4161%" y="1621" width="0.0281%" height="15" fill="rgb(227,80,54)" fg:x="3185" fg:w="1"/><text x="89.6661%" y="1631.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.03%)</title><rect x="89.4441%" y="1621" width="0.0281%" height="15" fill="rgb(254,48,11)" fg:x="3186" fg:w="1"/><text x="89.6941%" y="1631.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1 samples, 0.03%)</title><rect x="89.7529%" y="1605" width="0.0281%" height="15" fill="rgb(235,193,26)" fg:x="3197" fg:w="1"/><text x="90.0029%" y="1615.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (159 samples, 4.46%)</title><rect x="89.7810%" y="1605" width="4.4638%" height="15" fill="rgb(229,99,21)" fg:x="3198" fg:w="159"/><text x="90.0310%" y="1615.50">libsy..</text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (1 samples, 0.03%)</title><rect x="94.3290%" y="1589" width="0.0281%" height="15" fill="rgb(211,140,41)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1599.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.03%)</title><rect x="94.3290%" y="1573" width="0.0281%" height="15" fill="rgb(240,227,30)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1583.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1 samples, 0.03%)</title><rect x="94.3290%" y="1557" width="0.0281%" height="15" fill="rgb(215,224,45)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1567.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_install (1 samples, 0.03%)</title><rect x="94.3290%" y="1541" width="0.0281%" height="15" fill="rgb(206,123,31)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1551.50"></text></g><g><title>libdispatch.dylib`_dispatch_unote_register_muxed (1 samples, 0.03%)</title><rect x="94.3290%" y="1525" width="0.0281%" height="15" fill="rgb(210,138,16)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1535.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_notify_resume (1 samples, 0.03%)</title><rect x="94.3290%" y="1509" width="0.0281%" height="15" fill="rgb(228,57,28)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1519.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_request_notification_trap (1 samples, 0.03%)</title><rect x="94.3290%" y="1493" width="0.0281%" height="15" fill="rgb(242,170,10)" fg:x="3360" fg:w="1"/><text x="94.5790%" y="1503.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (1 samples, 0.03%)</title><rect x="94.3571%" y="1589" width="0.0281%" height="15" fill="rgb(228,214,39)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1599.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (1 samples, 0.03%)</title><rect x="94.3571%" y="1573" width="0.0281%" height="15" fill="rgb(218,179,33)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1583.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_override_invoke (1 samples, 0.03%)</title><rect x="94.3571%" y="1557" width="0.0281%" height="15" fill="rgb(235,193,39)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1567.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="94.3571%" y="1541" width="0.0281%" height="15" fill="rgb(219,221,36)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1551.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (1 samples, 0.03%)</title><rect x="94.3571%" y="1525" width="0.0281%" height="15" fill="rgb(248,218,19)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1535.50"></text></g><g><title>AppKit`___NSPersistentUIDispatchQueueAsync_block_invoke (1 samples, 0.03%)</title><rect x="94.3571%" y="1509" width="0.0281%" height="15" fill="rgb(205,50,9)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1519.50"></text></g><g><title>AppKit`__105-[NSApplication(NSPersistentUISupport) _disableRelaunchOnLoginIfNotLaunchedByLaunchServicesOrBlacklisted]_block_invoke (1 samples, 0.03%)</title><rect x="94.3571%" y="1493" width="0.0281%" height="15" fill="rgb(238,81,28)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1503.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformationItem (1 samples, 0.03%)</title><rect x="94.3571%" y="1477" width="0.0281%" height="15" fill="rgb(235,110,19)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1487.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformation (1 samples, 0.03%)</title><rect x="94.3571%" y="1461" width="0.0281%" height="15" fill="rgb(214,7,14)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1471.50"></text></g><g><title>LaunchServices`copyApplicationInformationDictionaryGivenASNUsingLocalCache(__LSSharedMemoryPage const*, __LSASN const*) (1 samples, 0.03%)</title><rect x="94.3571%" y="1445" width="0.0281%" height="15" fill="rgb(211,77,3)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1455.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.03%)</title><rect x="94.3571%" y="1429" width="0.0281%" height="15" fill="rgb(229,5,9)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1439.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.03%)</title><rect x="94.3571%" y="1413" width="0.0281%" height="15" fill="rgb(225,90,11)" fg:x="3361" fg:w="1"/><text x="94.6071%" y="1423.50"></text></g><g><title>libdispatch.dylib`DYLD-STUB$$class_createInstance (1 samples, 0.03%)</title><rect x="94.3852%" y="1525" width="0.0281%" height="15" fill="rgb(242,56,8)" fg:x="3362" fg:w="1"/><text x="94.6352%" y="1535.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.03%)</title><rect x="94.4133%" y="1477" width="0.0281%" height="15" fill="rgb(249,212,39)" fg:x="3363" fg:w="1"/><text x="94.6633%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (3 samples, 0.08%)</title><rect x="94.4133%" y="1493" width="0.0842%" height="15" fill="rgb(236,90,9)" fg:x="3363" fg:w="3"/><text x="94.6633%" y="1503.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.06%)</title><rect x="94.4413%" y="1477" width="0.0561%" height="15" fill="rgb(206,88,35)" fg:x="3364" fg:w="2"/><text x="94.6913%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (2 samples, 0.06%)</title><rect x="94.4413%" y="1461" width="0.0561%" height="15" fill="rgb(205,126,30)" fg:x="3364" fg:w="2"/><text x="94.6913%" y="1471.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (5 samples, 0.14%)</title><rect x="94.3852%" y="1557" width="0.1404%" height="15" fill="rgb(230,176,12)" fg:x="3362" fg:w="5"/><text x="94.6352%" y="1567.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (5 samples, 0.14%)</title><rect x="94.3852%" y="1541" width="0.1404%" height="15" fill="rgb(243,19,9)" fg:x="3362" fg:w="5"/><text x="94.6352%" y="1551.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (4 samples, 0.11%)</title><rect x="94.4133%" y="1525" width="0.1123%" height="15" fill="rgb(245,171,17)" fg:x="3363" fg:w="4"/><text x="94.6633%" y="1535.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (4 samples, 0.11%)</title><rect x="94.4133%" y="1509" width="0.1123%" height="15" fill="rgb(227,52,21)" fg:x="3363" fg:w="4"/><text x="94.6633%" y="1519.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.03%)</title><rect x="94.4975%" y="1493" width="0.0281%" height="15" fill="rgb(238,69,14)" fg:x="3366" fg:w="1"/><text x="94.7475%" y="1503.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (1 samples, 0.03%)</title><rect x="94.5255%" y="1557" width="0.0281%" height="15" fill="rgb(241,156,39)" fg:x="3367" fg:w="1"/><text x="94.7755%" y="1567.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (7 samples, 0.20%)</title><rect x="94.3852%" y="1573" width="0.1965%" height="15" fill="rgb(212,227,28)" fg:x="3362" fg:w="7"/><text x="94.6352%" y="1583.50"></text></g><g><title>libdispatch.dylib`voucher_create_with_mach_msg (1 samples, 0.03%)</title><rect x="94.5536%" y="1557" width="0.0281%" height="15" fill="rgb(209,118,27)" fg:x="3368" fg:w="1"/><text x="94.8036%" y="1567.50"></text></g><g><title>AppKit`__35-[NSDockConnection startConnection]_block_invoke.39 (1 samples, 0.03%)</title><rect x="94.6098%" y="1509" width="0.0281%" height="15" fill="rgb(226,102,5)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1519.50"></text></g><g><title>AppKit`-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (1 samples, 0.03%)</title><rect x="94.6098%" y="1493" width="0.0281%" height="15" fill="rgb(223,34,3)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1503.50"></text></g><g><title>SkyLight`SLSessionCopyCurrentDictionary (1 samples, 0.03%)</title><rect x="94.6098%" y="1477" width="0.0281%" height="15" fill="rgb(221,81,38)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1487.50"></text></g><g><title>SkyLight`SLSCopyCurrentSessionPropertiesInternalBridge (1 samples, 0.03%)</title><rect x="94.6098%" y="1461" width="0.0281%" height="15" fill="rgb(236,219,28)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1471.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="94.6098%" y="1445" width="0.0281%" height="15" fill="rgb(213,200,14)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1455.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="94.6098%" y="1429" width="0.0281%" height="15" fill="rgb(240,33,19)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1439.50"></text></g><g><title>SkyLight`__loginframework_vtable_block_invoke (1 samples, 0.03%)</title><rect x="94.6098%" y="1413" width="0.0281%" height="15" fill="rgb(233,113,27)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1423.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.03%)</title><rect x="94.6098%" y="1397" width="0.0281%" height="15" fill="rgb(220,221,18)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1407.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.03%)</title><rect x="94.6098%" y="1381" width="0.0281%" height="15" fill="rgb(238,92,8)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1391.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.03%)</title><rect x="94.6098%" y="1365" width="0.0281%" height="15" fill="rgb(222,164,16)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1375.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.03%)</title><rect x="94.6098%" y="1349" width="0.0281%" height="15" fill="rgb(241,119,3)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1359.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.03%)</title><rect x="94.6098%" y="1333" width="0.0281%" height="15" fill="rgb(241,44,8)" fg:x="3370" fg:w="1"/><text x="94.8598%" y="1343.50"></text></g><g><title>Metal`invocation function for block in MTLCompilerFSCache::addElement (1 samples, 0.03%)</title><rect x="94.6378%" y="1509" width="0.0281%" height="15" fill="rgb(230,36,40)" fg:x="3371" fg:w="1"/><text x="94.8878%" y="1519.50"></text></g><g><title>Metal`MTLCompilerFSCache::flushElement (1 samples, 0.03%)</title><rect x="94.6378%" y="1493" width="0.0281%" height="15" fill="rgb(243,16,36)" fg:x="3371" fg:w="1"/><text x="94.8878%" y="1503.50"></text></g><g><title>libCoreFSCache.dylib`fscache_sync_element (1 samples, 0.03%)</title><rect x="94.6378%" y="1477" width="0.0281%" height="15" fill="rgb(231,4,26)" fg:x="3371" fg:w="1"/><text x="94.8878%" y="1487.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.03%)</title><rect x="94.6378%" y="1461" width="0.0281%" height="15" fill="rgb(240,9,31)" fg:x="3371" fg:w="1"/><text x="94.8878%" y="1471.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.03%)</title><rect x="94.6378%" y="1445" width="0.0281%" height="15" fill="rgb(207,173,15)" fg:x="3371" fg:w="1"/><text x="94.8878%" y="1455.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.08%)</title><rect x="94.6098%" y="1541" width="0.0842%" height="15" fill="rgb(224,192,53)" fg:x="3370" fg:w="3"/><text x="94.8598%" y="1551.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (3 samples, 0.08%)</title><rect x="94.6098%" y="1525" width="0.0842%" height="15" fill="rgb(223,67,28)" fg:x="3370" fg:w="3"/><text x="94.8598%" y="1535.50"></text></g><g><title>libsystem_kernel.dylib`__msync (1 samples, 0.03%)</title><rect x="94.6659%" y="1509" width="0.0281%" height="15" fill="rgb(211,20,47)" fg:x="3372" fg:w="1"/><text x="94.9159%" y="1519.50"></text></g><g><title>IOGPU`DYLD-STUB$$IODataQueueDequeue (1 samples, 0.03%)</title><rect x="94.7221%" y="1445" width="0.0281%" height="15" fill="rgb(240,228,2)" fg:x="3374" fg:w="1"/><text x="94.9721%" y="1455.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (1 samples, 0.03%)</title><rect x="94.7501%" y="1429" width="0.0281%" height="15" fill="rgb(248,151,12)" fg:x="3375" fg:w="1"/><text x="95.0001%" y="1439.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer device] (2 samples, 0.06%)</title><rect x="94.7782%" y="1429" width="0.0561%" height="15" fill="rgb(244,8,39)" fg:x="3376" fg:w="2"/><text x="95.0282%" y="1439.50"></text></g><g><title>IOKit`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="94.8344%" y="1429" width="0.0281%" height="15" fill="rgb(222,26,8)" fg:x="3378" fg:w="1"/><text x="95.0844%" y="1439.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didSchedule:error:] (1 samples, 0.03%)</title><rect x="94.8624%" y="1429" width="0.0281%" height="15" fill="rgb(213,106,44)" fg:x="3379" fg:w="1"/><text x="95.1124%" y="1439.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (1 samples, 0.03%)</title><rect x="94.8905%" y="1429" width="0.0281%" height="15" fill="rgb(214,129,20)" fg:x="3380" fg:w="1"/><text x="95.1405%" y="1439.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="94.8905%" y="1413" width="0.0281%" height="15" fill="rgb(212,32,13)" fg:x="3380" fg:w="1"/><text x="95.1405%" y="1423.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (1 samples, 0.03%)</title><rect x="94.8905%" y="1397" width="0.0281%" height="15" fill="rgb(208,168,33)" fg:x="3380" fg:w="1"/><text x="95.1405%" y="1407.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDContextRec::drawCore(unsigned int, unsigned int, int, unsigned int, unsigned int, unsigned int, id&lt;MTLBuffer&gt;, unsigned int, unsigned long, objc_object&lt;MTLBuffer&gt;, unsigned long, std::__1::vector&lt;GLRBufferResource*, id&lt;MTLBuffer&gt;::allocator (1 samples, 0.03%)</title><rect x="94.9186%" y="1365" width="0.0281%" height="15" fill="rgb(231,207,8)" fg:x="3381" fg:w="1"/><text x="95.1686%" y="1375.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (1 samples, 0.03%)</title><rect x="94.9467%" y="1365" width="0.0281%" height="15" fill="rgb(235,219,23)" fg:x="3382" fg:w="1"/><text x="95.1967%" y="1375.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.03%)</title><rect x="94.9467%" y="1349" width="0.0281%" height="15" fill="rgb(226,216,26)" fg:x="3382" fg:w="1"/><text x="95.1967%" y="1359.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.03%)</title><rect x="94.9467%" y="1333" width="0.0281%" height="15" fill="rgb(239,137,16)" fg:x="3382" fg:w="1"/><text x="95.1967%" y="1343.50"></text></g><g><title>Metal`MTLDispatchListApply (3 samples, 0.08%)</title><rect x="94.9186%" y="1381" width="0.0842%" height="15" fill="rgb(207,12,36)" fg:x="3381" fg:w="3"/><text x="95.1686%" y="1391.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="94.9747%" y="1365" width="0.0281%" height="15" fill="rgb(210,214,24)" fg:x="3383" fg:w="1"/><text x="95.2247%" y="1375.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (4 samples, 0.11%)</title><rect x="94.9186%" y="1397" width="0.1123%" height="15" fill="rgb(206,56,30)" fg:x="3381" fg:w="4"/><text x="95.1686%" y="1407.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="95.0028%" y="1381" width="0.0281%" height="15" fill="rgb(228,143,26)" fg:x="3384" fg:w="1"/><text x="95.2528%" y="1391.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (5 samples, 0.14%)</title><rect x="94.9186%" y="1413" width="0.1404%" height="15" fill="rgb(216,218,46)" fg:x="3381" fg:w="5"/><text x="95.1686%" y="1423.50"></text></g><g><title>Metal`MTLTraceEnabled (1 samples, 0.03%)</title><rect x="95.0309%" y="1397" width="0.0281%" height="15" fill="rgb(206,6,19)" fg:x="3385" fg:w="1"/><text x="95.2809%" y="1407.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (6 samples, 0.17%)</title><rect x="94.9186%" y="1429" width="0.1684%" height="15" fill="rgb(239,177,51)" fg:x="3381" fg:w="6"/><text x="95.1686%" y="1439.50"></text></g><g><title>Metal`MTLFailureTypeGetErrorModeType (1 samples, 0.03%)</title><rect x="95.0590%" y="1413" width="0.0281%" height="15" fill="rgb(216,55,25)" fg:x="3386" fg:w="1"/><text x="95.3090%" y="1423.50"></text></g><g><title>libdispatch.dylib`dispatch_group_leave (1 samples, 0.03%)</title><rect x="95.0870%" y="1429" width="0.0281%" height="15" fill="rgb(231,163,29)" fg:x="3387" fg:w="1"/><text x="95.3370%" y="1439.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e878e8 (1 samples, 0.03%)</title><rect x="95.1151%" y="1397" width="0.0281%" height="15" fill="rgb(232,149,50)" fg:x="3388" fg:w="1"/><text x="95.3651%" y="1407.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (1 samples, 0.03%)</title><rect x="95.1432%" y="1381" width="0.0281%" height="15" fill="rgb(223,142,48)" fg:x="3389" fg:w="1"/><text x="95.3932%" y="1391.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (1 samples, 0.03%)</title><rect x="95.1432%" y="1365" width="0.0281%" height="15" fill="rgb(245,83,23)" fg:x="3389" fg:w="1"/><text x="95.3932%" y="1375.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.03%)</title><rect x="95.1432%" y="1349" width="0.0281%" height="15" fill="rgb(224,63,2)" fg:x="3389" fg:w="1"/><text x="95.3932%" y="1359.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.03%)</title><rect x="95.1432%" y="1333" width="0.0281%" height="15" fill="rgb(218,65,53)" fg:x="3389" fg:w="1"/><text x="95.3932%" y="1343.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.08%)</title><rect x="95.1151%" y="1429" width="0.0842%" height="15" fill="rgb(221,84,29)" fg:x="3388" fg:w="3"/><text x="95.3651%" y="1439.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d9f034 (3 samples, 0.08%)</title><rect x="95.1151%" y="1413" width="0.0842%" height="15" fill="rgb(234,0,32)" fg:x="3388" fg:w="3"/><text x="95.3651%" y="1423.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (2 samples, 0.06%)</title><rect x="95.1432%" y="1397" width="0.0561%" height="15" fill="rgb(206,20,16)" fg:x="3389" fg:w="2"/><text x="95.3932%" y="1407.50"></text></g><g><title>Metal`DYLD-STUB$$objc_release (1 samples, 0.03%)</title><rect x="95.1713%" y="1381" width="0.0281%" height="15" fill="rgb(244,172,18)" fg:x="3390" fg:w="1"/><text x="95.4213%" y="1391.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (17 samples, 0.48%)</title><rect x="94.7501%" y="1445" width="0.4773%" height="15" fill="rgb(254,133,1)" fg:x="3375" fg:w="17"/><text x="95.0001%" y="1455.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.03%)</title><rect x="95.1993%" y="1429" width="0.0281%" height="15" fill="rgb(222,206,41)" fg:x="3391" fg:w="1"/><text x="95.4493%" y="1439.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_get_msg (1 samples, 0.03%)</title><rect x="95.2274%" y="1445" width="0.0281%" height="15" fill="rgb(212,3,42)" fg:x="3392" fg:w="1"/><text x="95.4774%" y="1455.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (20 samples, 0.56%)</title><rect x="94.7221%" y="1477" width="0.5615%" height="15" fill="rgb(241,11,4)" fg:x="3374" fg:w="20"/><text x="94.9721%" y="1487.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (20 samples, 0.56%)</title><rect x="94.7221%" y="1461" width="0.5615%" height="15" fill="rgb(205,19,26)" fg:x="3374" fg:w="20"/><text x="94.9721%" y="1471.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.03%)</title><rect x="95.2555%" y="1445" width="0.0281%" height="15" fill="rgb(210,179,32)" fg:x="3393" fg:w="1"/><text x="95.5055%" y="1455.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (22 samples, 0.62%)</title><rect x="94.6940%" y="1541" width="0.6176%" height="15" fill="rgb(227,116,49)" fg:x="3373" fg:w="22"/><text x="94.9440%" y="1551.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (21 samples, 0.59%)</title><rect x="94.7221%" y="1525" width="0.5896%" height="15" fill="rgb(211,146,6)" fg:x="3374" fg:w="21"/><text x="94.9721%" y="1535.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (21 samples, 0.59%)</title><rect x="94.7221%" y="1509" width="0.5896%" height="15" fill="rgb(219,44,39)" fg:x="3374" fg:w="21"/><text x="94.9721%" y="1519.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (21 samples, 0.59%)</title><rect x="94.7221%" y="1493" width="0.5896%" height="15" fill="rgb(234,128,11)" fg:x="3374" fg:w="21"/><text x="94.9721%" y="1503.50"></text></g><g><title>libdispatch.dylib`dispatch_release (1 samples, 0.03%)</title><rect x="95.2835%" y="1477" width="0.0281%" height="15" fill="rgb(220,183,53)" fg:x="3394" fg:w="1"/><text x="95.5335%" y="1487.50"></text></g><g><title>AppleMetalOpenGLRenderer`iosurfaceUseCountIsZeroCallback(void*, unsigned int, unsigned long long, unsigned long long) (1 samples, 0.03%)</title><rect x="95.3678%" y="1461" width="0.0281%" height="15" fill="rgb(213,219,32)" fg:x="3397" fg:w="1"/><text x="95.6178%" y="1471.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (10 samples, 0.28%)</title><rect x="95.3678%" y="1477" width="0.2807%" height="15" fill="rgb(232,156,16)" fg:x="3397" fg:w="10"/><text x="95.6178%" y="1487.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (9 samples, 0.25%)</title><rect x="95.3958%" y="1461" width="0.2527%" height="15" fill="rgb(246,135,34)" fg:x="3398" fg:w="9"/><text x="95.6458%" y="1471.50"></text></g><g><title>AppleMetalOpenGLRenderer`iosurfaceUseCountIsZeroCallback(void*, unsigned int, unsigned long long, unsigned long long) (9 samples, 0.25%)</title><rect x="95.3958%" y="1445" width="0.2527%" height="15" fill="rgb(241,99,0)" fg:x="3398" fg:w="9"/><text x="95.6458%" y="1455.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (9 samples, 0.25%)</title><rect x="95.3958%" y="1429" width="0.2527%" height="15" fill="rgb(222,103,45)" fg:x="3398" fg:w="9"/><text x="95.6458%" y="1439.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (9 samples, 0.25%)</title><rect x="95.3958%" y="1413" width="0.2527%" height="15" fill="rgb(212,57,4)" fg:x="3398" fg:w="9"/><text x="95.6458%" y="1423.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (58 samples, 1.63%)</title><rect x="94.5817%" y="1573" width="1.6283%" height="15" fill="rgb(215,68,47)" fg:x="3369" fg:w="58"/><text x="94.8317%" y="1583.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (57 samples, 1.60%)</title><rect x="94.6098%" y="1557" width="1.6002%" height="15" fill="rgb(230,84,2)" fg:x="3370" fg:w="57"/><text x="94.8598%" y="1567.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (32 samples, 0.90%)</title><rect x="95.3116%" y="1541" width="0.8984%" height="15" fill="rgb(220,102,14)" fg:x="3395" fg:w="32"/><text x="95.5616%" y="1551.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (32 samples, 0.90%)</title><rect x="95.3116%" y="1525" width="0.8984%" height="15" fill="rgb(240,10,32)" fg:x="3395" fg:w="32"/><text x="95.5616%" y="1535.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (31 samples, 0.87%)</title><rect x="95.3397%" y="1509" width="0.8703%" height="15" fill="rgb(215,47,27)" fg:x="3396" fg:w="31"/><text x="95.5897%" y="1519.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (31 samples, 0.87%)</title><rect x="95.3397%" y="1493" width="0.8703%" height="15" fill="rgb(233,188,43)" fg:x="3396" fg:w="31"/><text x="95.5897%" y="1503.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (20 samples, 0.56%)</title><rect x="95.6485%" y="1477" width="0.5615%" height="15" fill="rgb(253,190,1)" fg:x="3407" fg:w="20"/><text x="95.8985%" y="1487.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (1 samples, 0.03%)</title><rect x="96.2100%" y="1573" width="0.0281%" height="15" fill="rgb(206,114,52)" fg:x="3427" fg:w="1"/><text x="96.4600%" y="1583.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (242 samples, 6.79%)</title><rect x="89.4722%" y="1621" width="6.7939%" height="15" fill="rgb(233,120,37)" fg:x="3187" fg:w="242"/><text x="89.7222%" y="1631.50">libsystem..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (72 samples, 2.02%)</title><rect x="94.2448%" y="1605" width="2.0213%" height="15" fill="rgb(214,52,39)" fg:x="3357" fg:w="72"/><text x="94.4948%" y="1615.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (67 samples, 1.88%)</title><rect x="94.3852%" y="1589" width="1.8810%" height="15" fill="rgb(223,80,29)" fg:x="3362" fg:w="67"/><text x="94.6352%" y="1599.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (1 samples, 0.03%)</title><rect x="96.2381%" y="1573" width="0.0281%" height="15" fill="rgb(230,101,40)" fg:x="3428" fg:w="1"/><text x="96.4881%" y="1583.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (1 samples, 0.03%)</title><rect x="96.2942%" y="1461" width="0.0281%" height="15" fill="rgb(219,211,8)" fg:x="3430" fg:w="1"/><text x="96.5442%" y="1471.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (1 samples, 0.03%)</title><rect x="96.2942%" y="1445" width="0.0281%" height="15" fill="rgb(252,126,28)" fg:x="3430" fg:w="1"/><text x="96.5442%" y="1455.50"></text></g><g><title>CoreFoundation`CFSetGetValue (1 samples, 0.03%)</title><rect x="96.2942%" y="1429" width="0.0281%" height="15" fill="rgb(215,56,38)" fg:x="3430" fg:w="1"/><text x="96.5442%" y="1439.50"></text></g><g><title>CoreFoundation`CFEqual (1 samples, 0.03%)</title><rect x="96.2942%" y="1413" width="0.0281%" height="15" fill="rgb(249,55,44)" fg:x="3430" fg:w="1"/><text x="96.5442%" y="1423.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.03%)</title><rect x="96.3223%" y="1461" width="0.0281%" height="15" fill="rgb(220,221,32)" fg:x="3431" fg:w="1"/><text x="96.5723%" y="1471.50"></text></g><g><title>SkyLight`event_finalize(void const*) (1 samples, 0.03%)</title><rect x="96.3223%" y="1445" width="0.0281%" height="15" fill="rgb(212,216,41)" fg:x="3431" fg:w="1"/><text x="96.5723%" y="1455.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (1 samples, 0.03%)</title><rect x="96.3223%" y="1429" width="0.0281%" height="15" fill="rgb(228,213,43)" fg:x="3431" fg:w="1"/><text x="96.5723%" y="1439.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (1 samples, 0.03%)</title><rect x="96.3223%" y="1413" width="0.0281%" height="15" fill="rgb(211,31,26)" fg:x="3431" fg:w="1"/><text x="96.5723%" y="1423.50"></text></g><g><title>HIToolbox`QuitEventLoop (1 samples, 0.03%)</title><rect x="96.3504%" y="1461" width="0.0281%" height="15" fill="rgb(229,202,19)" fg:x="3432" fg:w="1"/><text x="96.6004%" y="1471.50"></text></g><g><title>CoreFoundation`CFRunLoopStop (1 samples, 0.03%)</title><rect x="96.3504%" y="1445" width="0.0281%" height="15" fill="rgb(229,105,46)" fg:x="3432" fg:w="1"/><text x="96.6004%" y="1455.50"></text></g><g><title>SkyLight`(anonymous namespace)::GestureEventLog::getLogString (1 samples, 0.03%)</title><rect x="96.3784%" y="1413" width="0.0281%" height="15" fill="rgb(235,108,1)" fg:x="3433" fg:w="1"/><text x="96.6284%" y="1423.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (1 samples, 0.03%)</title><rect x="96.3784%" y="1397" width="0.0281%" height="15" fill="rgb(245,111,35)" fg:x="3433" fg:w="1"/><text x="96.6284%" y="1407.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.03%)</title><rect x="96.3784%" y="1381" width="0.0281%" height="15" fill="rgb(219,185,31)" fg:x="3433" fg:w="1"/><text x="96.6284%" y="1391.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.03%)</title><rect x="96.3784%" y="1365" width="0.0281%" height="15" fill="rgb(214,4,43)" fg:x="3433" fg:w="1"/><text x="96.6284%" y="1375.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.03%)</title><rect x="96.3784%" y="1349" width="0.0281%" height="15" fill="rgb(235,227,40)" fg:x="3433" fg:w="1"/><text x="96.6284%" y="1359.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.03%)</title><rect x="96.3784%" y="1333" width="0.0281%" height="15" fill="rgb(230,88,30)" fg:x="3433" fg:w="1"/><text x="96.6284%" y="1343.50"></text></g><g><title>SkyLight`CGSEventLogEvent (2 samples, 0.06%)</title><rect x="96.3784%" y="1429" width="0.0561%" height="15" fill="rgb(216,217,1)" fg:x="3433" fg:w="2"/><text x="96.6284%" y="1439.50"></text></g><g><title>SkyLight`(anonymous namespace)::shared_logger (1 samples, 0.03%)</title><rect x="96.4065%" y="1413" width="0.0281%" height="15" fill="rgb(248,139,50)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1423.50"></text></g><g><title>SkyLight`(anonymous namespace)::get_application_name (1 samples, 0.03%)</title><rect x="96.4065%" y="1397" width="0.0281%" height="15" fill="rgb(233,1,21)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1407.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformationItem (1 samples, 0.03%)</title><rect x="96.4065%" y="1381" width="0.0281%" height="15" fill="rgb(215,183,12)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1391.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformation (1 samples, 0.03%)</title><rect x="96.4065%" y="1365" width="0.0281%" height="15" fill="rgb(229,104,42)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1375.50"></text></g><g><title>LaunchServices`copyApplicationInformationDictionaryGivenASNUsingLocalCache(__LSSharedMemoryPage const*, __LSASN const*) (1 samples, 0.03%)</title><rect x="96.4065%" y="1349" width="0.0281%" height="15" fill="rgb(243,34,48)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1359.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.03%)</title><rect x="96.4065%" y="1333" width="0.0281%" height="15" fill="rgb(239,11,44)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1343.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.03%)</title><rect x="96.4065%" y="1317" width="0.0281%" height="15" fill="rgb(231,98,35)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1327.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetGregorianDate (1 samples, 0.03%)</title><rect x="96.4065%" y="1301" width="0.0281%" height="15" fill="rgb(233,28,25)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1311.50"></text></g><g><title>CoreFoundation`CFTimeZoneGetSecondsFromGMT (1 samples, 0.03%)</title><rect x="96.4065%" y="1285" width="0.0281%" height="15" fill="rgb(234,123,11)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1295.50"></text></g><g><title>CoreFoundation`-[__NSTimeZone secondsFromGMTForDate:] (1 samples, 0.03%)</title><rect x="96.4065%" y="1269" width="0.0281%" height="15" fill="rgb(220,69,3)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1279.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::get (1 samples, 0.03%)</title><rect x="96.4065%" y="1253" width="0.0281%" height="15" fill="rgb(214,64,36)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1263.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::complete (1 samples, 0.03%)</title><rect x="96.4065%" y="1237" width="0.0281%" height="15" fill="rgb(211,138,32)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1247.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::computeFields (1 samples, 0.03%)</title><rect x="96.4065%" y="1221" width="0.0281%" height="15" fill="rgb(213,118,47)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1231.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::getOffset (1 samples, 0.03%)</title><rect x="96.4065%" y="1205" width="0.0281%" height="15" fill="rgb(243,124,49)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1215.50"></text></g><g><title>libicucore.A.dylib`icu::SimpleTimeZone::getOffset (1 samples, 0.03%)</title><rect x="96.4065%" y="1189" width="0.0281%" height="15" fill="rgb(221,30,28)" fg:x="3434" fg:w="1"/><text x="96.6565%" y="1199.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (6 samples, 0.17%)</title><rect x="96.2942%" y="1541" width="0.1684%" height="15" fill="rgb(246,37,13)" fg:x="3430" fg:w="6"/><text x="96.5442%" y="1551.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (6 samples, 0.17%)</title><rect x="96.2942%" y="1525" width="0.1684%" height="15" fill="rgb(249,66,14)" fg:x="3430" fg:w="6"/><text x="96.5442%" y="1535.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (6 samples, 0.17%)</title><rect x="96.2942%" y="1509" width="0.1684%" height="15" fill="rgb(213,166,5)" fg:x="3430" fg:w="6"/><text x="96.5442%" y="1519.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (6 samples, 0.17%)</title><rect x="96.2942%" y="1493" width="0.1684%" height="15" fill="rgb(221,66,24)" fg:x="3430" fg:w="6"/><text x="96.5442%" y="1503.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (6 samples, 0.17%)</title><rect x="96.2942%" y="1477" width="0.1684%" height="15" fill="rgb(210,132,17)" fg:x="3430" fg:w="6"/><text x="96.5442%" y="1487.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (3 samples, 0.08%)</title><rect x="96.3784%" y="1461" width="0.0842%" height="15" fill="rgb(243,202,5)" fg:x="3433" fg:w="3"/><text x="96.6284%" y="1471.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (3 samples, 0.08%)</title><rect x="96.3784%" y="1445" width="0.0842%" height="15" fill="rgb(233,70,48)" fg:x="3433" fg:w="3"/><text x="96.6284%" y="1455.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (1 samples, 0.03%)</title><rect x="96.4346%" y="1429" width="0.0281%" height="15" fill="rgb(238,41,26)" fg:x="3435" fg:w="1"/><text x="96.6846%" y="1439.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (1 samples, 0.03%)</title><rect x="96.4346%" y="1413" width="0.0281%" height="15" fill="rgb(241,19,31)" fg:x="3435" fg:w="1"/><text x="96.6846%" y="1423.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (1 samples, 0.03%)</title><rect x="96.4346%" y="1397" width="0.0281%" height="15" fill="rgb(214,76,10)" fg:x="3435" fg:w="1"/><text x="96.6846%" y="1407.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (1 samples, 0.03%)</title><rect x="96.4346%" y="1381" width="0.0281%" height="15" fill="rgb(254,202,22)" fg:x="3435" fg:w="1"/><text x="96.6846%" y="1391.50"></text></g><g><title>SkyLight`DYLD-STUB$$std::__1::mutex::lock (1 samples, 0.03%)</title><rect x="96.4346%" y="1365" width="0.0281%" height="15" fill="rgb(214,72,24)" fg:x="3435" fg:w="1"/><text x="96.6846%" y="1375.50"></text></g><g><title>AppKit`_NSEventThread (8 samples, 0.22%)</title><rect x="96.2661%" y="1589" width="0.2246%" height="15" fill="rgb(221,92,46)" fg:x="3429" fg:w="8"/><text x="96.5161%" y="1599.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (8 samples, 0.22%)</title><rect x="96.2661%" y="1573" width="0.2246%" height="15" fill="rgb(246,13,50)" fg:x="3429" fg:w="8"/><text x="96.5161%" y="1583.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (8 samples, 0.22%)</title><rect x="96.2661%" y="1557" width="0.2246%" height="15" fill="rgb(240,165,38)" fg:x="3429" fg:w="8"/><text x="96.5161%" y="1567.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (1 samples, 0.03%)</title><rect x="96.4627%" y="1541" width="0.0281%" height="15" fill="rgb(241,24,51)" fg:x="3436" fg:w="1"/><text x="96.7127%" y="1551.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="96.4627%" y="1525" width="0.0281%" height="15" fill="rgb(227,51,44)" fg:x="3436" fg:w="1"/><text x="96.7127%" y="1535.50"></text></g><g><title>rust-sokoban`&lt;mach::mach_time::mach_timebase_info as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="96.5469%" y="1445" width="0.0281%" height="15" fill="rgb(231,121,3)" fg:x="3439" fg:w="1"/><text x="96.7969%" y="1455.50"></text></g><g><title>rust-sokoban`cpal::host::coreaudio::check_os_status (1 samples, 0.03%)</title><rect x="96.5750%" y="1445" width="0.0281%" height="15" fill="rgb(245,3,41)" fg:x="3440" fg:w="1"/><text x="96.8250%" y="1455.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.03%)</title><rect x="97.3610%" y="1381" width="0.0281%" height="15" fill="rgb(214,13,26)" fg:x="3468" fg:w="1"/><text x="97.6110%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.67%)</title><rect x="96.7715%" y="1397" width="0.6738%" height="15" fill="rgb(252,75,11)" fg:x="3447" fg:w="24"/><text x="97.0215%" y="1407.50"></text></g><g><title>rust-sokoban`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.06%)</title><rect x="97.3891%" y="1381" width="0.0561%" height="15" fill="rgb(218,226,17)" fg:x="3469" fg:w="2"/><text x="97.6391%" y="1391.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.31%)</title><rect x="97.6137%" y="1365" width="0.3088%" height="15" fill="rgb(248,89,38)" fg:x="3477" fg:w="11"/><text x="97.8637%" y="1375.50"></text></g><g><title>rust-sokoban`alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.20%)</title><rect x="97.7260%" y="1349" width="0.1965%" height="15" fill="rgb(237,73,46)" fg:x="3481" fg:w="7"/><text x="97.9760%" y="1359.50"></text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.14%)</title><rect x="97.7821%" y="1333" width="0.1404%" height="15" fill="rgb(242,78,33)" fg:x="3483" fg:w="5"/><text x="98.0321%" y="1343.50"></text></g><g><title>rust-sokoban`alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.06%)</title><rect x="97.9225%" y="1365" width="0.0561%" height="15" fill="rgb(235,60,3)" fg:x="3488" fg:w="2"/><text x="98.1725%" y="1375.50"></text></g><g><title>rust-sokoban`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="97.9787%" y="1365" width="0.0281%" height="15" fill="rgb(216,172,19)" fg:x="3490" fg:w="1"/><text x="98.2287%" y="1375.50"></text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::_{{closure}}::_{{closure}} (33 samples, 0.93%)</title><rect x="97.4453%" y="1397" width="0.9264%" height="15" fill="rgb(227,6,42)" fg:x="3471" fg:w="33"/><text x="97.6953%" y="1407.50"></text></g><g><title>rust-sokoban`&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.87%)</title><rect x="97.5014%" y="1381" width="0.8703%" height="15" fill="rgb(223,207,42)" fg:x="3473" fg:w="31"/><text x="97.7514%" y="1391.50"></text></g><g><title>rust-sokoban`core::sync::atomic::AtomicBool::load (13 samples, 0.36%)</title><rect x="98.0067%" y="1365" width="0.3650%" height="15" fill="rgb(246,138,30)" fg:x="3491" fg:w="13"/><text x="98.2567%" y="1375.50"></text></g><g><title>rust-sokoban`core::sync::atomic::atomic_load (13 samples, 0.36%)</title><rect x="98.0067%" y="1349" width="0.3650%" height="15" fill="rgb(251,199,47)" fg:x="3491" fg:w="13"/><text x="98.2567%" y="1359.50"></text></g><g><title>rust-sokoban`&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.3717%" y="1397" width="0.0281%" height="15" fill="rgb(228,218,44)" fg:x="3504" fg:w="1"/><text x="98.6217%" y="1407.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::unwrap_or (2 samples, 0.06%)</title><rect x="98.3998%" y="1397" width="0.0561%" height="15" fill="rgb(220,68,6)" fg:x="3505" fg:w="2"/><text x="98.6498%" y="1407.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (68 samples, 1.91%)</title><rect x="96.6030%" y="1413" width="1.9090%" height="15" fill="rgb(240,60,26)" fg:x="3441" fg:w="68"/><text x="96.8530%" y="1423.50">r..</text></g><g><title>rust-sokoban`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="98.4559%" y="1397" width="0.0561%" height="15" fill="rgb(211,200,19)" fg:x="3507" fg:w="2"/><text x="98.7059%" y="1407.50"></text></g><g><title>CoreAudio`0x0000000103c4ade8 (73 samples, 2.05%)</title><rect x="96.4907%" y="1509" width="2.0494%" height="15" fill="rgb(242,145,30)" fg:x="3437" fg:w="73"/><text x="96.7407%" y="1519.50">C..</text></g><g><title>rust-sokoban`coreaudio::audio_unit::render_callback::input_proc (72 samples, 2.02%)</title><rect x="96.5188%" y="1493" width="2.0213%" height="15" fill="rgb(225,64,13)" fg:x="3438" fg:w="72"/><text x="96.7688%" y="1503.50">r..</text></g><g><title>rust-sokoban`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_render_callback::_{{closure}} (72 samples, 2.02%)</title><rect x="96.5188%" y="1477" width="2.0213%" height="15" fill="rgb(218,103,35)" fg:x="3438" fg:w="72"/><text x="96.7688%" y="1487.50">r..</text></g><g><title>rust-sokoban`cpal::host::coreaudio::macos::Device::build_output_stream_raw::_{{closure}} (72 samples, 2.02%)</title><rect x="96.5188%" y="1461" width="2.0213%" height="15" fill="rgb(216,93,46)" fg:x="3438" fg:w="72"/><text x="96.7688%" y="1471.50">r..</text></g><g><title>rust-sokoban`cpal::traits::DeviceTrait::build_output_stream::_{{closure}} (69 samples, 1.94%)</title><rect x="96.6030%" y="1445" width="1.9371%" height="15" fill="rgb(225,159,27)" fg:x="3441" fg:w="69"/><text x="96.8530%" y="1455.50">r..</text></g><g><title>rust-sokoban`&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::_{{closure}} (69 samples, 1.94%)</title><rect x="96.6030%" y="1429" width="1.9371%" height="15" fill="rgb(225,204,11)" fg:x="3441" fg:w="69"/><text x="96.8530%" y="1439.50">r..</text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.5121%" y="1413" width="0.0281%" height="15" fill="rgb(205,56,4)" fg:x="3509" fg:w="1"/><text x="98.7621%" y="1423.50"></text></g><g><title>CoreAudio`0x0000000103c4ef6c (74 samples, 2.08%)</title><rect x="96.4907%" y="1541" width="2.0775%" height="15" fill="rgb(206,6,35)" fg:x="3437" fg:w="74"/><text x="96.7407%" y="1551.50">C..</text></g><g><title>CoreAudio`0x0000000103d48c0c (74 samples, 2.08%)</title><rect x="96.4907%" y="1525" width="2.0775%" height="15" fill="rgb(247,73,52)" fg:x="3437" fg:w="74"/><text x="96.7407%" y="1535.50">C..</text></g><g><title>CoreAudio`0x0000000103c6ce9c (1 samples, 0.03%)</title><rect x="98.5401%" y="1509" width="0.0281%" height="15" fill="rgb(246,97,4)" fg:x="3510" fg:w="1"/><text x="98.7901%" y="1519.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::IOWorkLoop (78 samples, 2.19%)</title><rect x="96.4907%" y="1557" width="2.1898%" height="15" fill="rgb(212,37,15)" fg:x="3437" fg:w="78"/><text x="96.7407%" y="1567.50">C..</text></g><g><title>CoreAudio`HALB_MachPort::SendSimpleMessageWithSimpleReply (4 samples, 0.11%)</title><rect x="98.5682%" y="1541" width="0.1123%" height="15" fill="rgb(208,130,40)" fg:x="3511" fg:w="4"/><text x="98.8182%" y="1551.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.11%)</title><rect x="98.5682%" y="1525" width="0.1123%" height="15" fill="rgb(236,55,29)" fg:x="3511" fg:w="4"/><text x="98.8182%" y="1535.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (1 samples, 0.03%)</title><rect x="98.6805%" y="1557" width="0.0281%" height="15" fill="rgb(209,156,45)" fg:x="3515" fg:w="1"/><text x="98.9305%" y="1567.50"></text></g><g><title>CoreAudio`HALB_IOThread::Entry (80 samples, 2.25%)</title><rect x="96.4907%" y="1589" width="2.2459%" height="15" fill="rgb(249,107,4)" fg:x="3437" fg:w="80"/><text x="96.7407%" y="1599.50">C..</text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (80 samples, 2.25%)</title><rect x="96.4907%" y="1573" width="2.2459%" height="15" fill="rgb(227,7,13)" fg:x="3437" fg:w="80"/><text x="96.7407%" y="1583.50">C..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.03%)</title><rect x="98.7086%" y="1557" width="0.0281%" height="15" fill="rgb(250,129,14)" fg:x="3516" fg:w="1"/><text x="98.9586%" y="1567.50"></text></g><g><title>rust-sokoban`rayon_core::registry::Registry::pop_injected_job (1 samples, 0.03%)</title><rect x="98.7367%" y="1317" width="0.0281%" height="15" fill="rgb(229,92,13)" fg:x="3517" fg:w="1"/><text x="98.9867%" y="1327.50"></text></g><g><title>rust-sokoban`crossbeam_deque::deque::Injector&lt;T&gt;::steal (1 samples, 0.03%)</title><rect x="98.7367%" y="1301" width="0.0281%" height="15" fill="rgb(245,98,39)" fg:x="3517" fg:w="1"/><text x="98.9867%" y="1311.50"></text></g><g><title>rust-sokoban`&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="98.8209%" y="1173" width="0.0281%" height="15" fill="rgb(234,135,48)" fg:x="3520" fg:w="1"/><text x="99.0709%" y="1183.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (1 samples, 0.03%)</title><rect x="98.8490%" y="1173" width="0.0281%" height="15" fill="rgb(230,98,28)" fg:x="3521" fg:w="1"/><text x="99.0990%" y="1183.50"></text></g><g><title>rust-sokoban`&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.8490%" y="1157" width="0.0281%" height="15" fill="rgb(223,121,0)" fg:x="3521" fg:w="1"/><text x="99.0990%" y="1167.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Local::unpin (1 samples, 0.03%)</title><rect x="98.8490%" y="1141" width="0.0281%" height="15" fill="rgb(234,173,33)" fg:x="3521" fg:w="1"/><text x="99.0990%" y="1151.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="98.8490%" y="1125" width="0.0281%" height="15" fill="rgb(245,47,8)" fg:x="3521" fg:w="1"/><text x="99.0990%" y="1135.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="98.8490%" y="1109" width="0.0281%" height="15" fill="rgb(205,17,20)" fg:x="3521" fg:w="1"/><text x="99.0990%" y="1119.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="98.8490%" y="1093" width="0.0281%" height="15" fill="rgb(232,151,16)" fg:x="3521" fg:w="1"/><text x="99.0990%" y="1103.50"></text></g><g><title>rust-sokoban`core::sync::atomic::AtomicIsize::load (1 samples, 0.03%)</title><rect x="98.8770%" y="1173" width="0.0281%" height="15" fill="rgb(208,30,32)" fg:x="3522" fg:w="1"/><text x="99.1270%" y="1183.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::is_pinned (1 samples, 0.03%)</title><rect x="98.9051%" y="1173" width="0.0281%" height="15" fill="rgb(254,26,3)" fg:x="3523" fg:w="1"/><text x="99.1551%" y="1183.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle (1 samples, 0.03%)</title><rect x="98.9051%" y="1157" width="0.0281%" height="15" fill="rgb(240,177,30)" fg:x="3523" fg:w="1"/><text x="99.1551%" y="1167.50"></text></g><g><title>rust-sokoban`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="98.9051%" y="1141" width="0.0281%" height="15" fill="rgb(248,76,44)" fg:x="3523" fg:w="1"/><text x="99.1551%" y="1151.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle::_{{closure}} (1 samples, 0.03%)</title><rect x="98.9051%" y="1125" width="0.0281%" height="15" fill="rgb(241,186,54)" fg:x="3523" fg:w="1"/><text x="99.1551%" y="1135.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="98.9332%" y="1141" width="0.0281%" height="15" fill="rgb(249,171,29)" fg:x="3524" fg:w="1"/><text x="99.1832%" y="1151.50"></text></g><g><title>rust-sokoban`core::iter::adapters::filter::filter_try_fold::_{{closure}} (9 samples, 0.25%)</title><rect x="98.7647%" y="1237" width="0.2527%" height="15" fill="rgb(237,151,44)" fg:x="3518" fg:w="9"/><text x="99.0147%" y="1247.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (8 samples, 0.22%)</title><rect x="98.7928%" y="1221" width="0.2246%" height="15" fill="rgb(228,174,30)" fg:x="3519" fg:w="8"/><text x="99.0428%" y="1231.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::steal::_{{closure}} (8 samples, 0.22%)</title><rect x="98.7928%" y="1205" width="0.2246%" height="15" fill="rgb(252,14,37)" fg:x="3519" fg:w="8"/><text x="99.0428%" y="1215.50"></text></g><g><title>rust-sokoban`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (7 samples, 0.20%)</title><rect x="98.8209%" y="1189" width="0.1965%" height="15" fill="rgb(207,111,40)" fg:x="3520" fg:w="7"/><text x="99.0709%" y="1199.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::pin (3 samples, 0.08%)</title><rect x="98.9332%" y="1173" width="0.0842%" height="15" fill="rgb(248,171,54)" fg:x="3524" fg:w="3"/><text x="99.1832%" y="1183.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle (3 samples, 0.08%)</title><rect x="98.9332%" y="1157" width="0.0842%" height="15" fill="rgb(211,127,2)" fg:x="3524" fg:w="3"/><text x="99.1832%" y="1167.50"></text></g><g><title>rust-sokoban`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.06%)</title><rect x="98.9613%" y="1141" width="0.0561%" height="15" fill="rgb(236,87,47)" fg:x="3525" fg:w="2"/><text x="99.2113%" y="1151.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle::_{{closure}} (1 samples, 0.03%)</title><rect x="98.9893%" y="1125" width="0.0281%" height="15" fill="rgb(223,190,45)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1135.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::pin::_{{closure}} (1 samples, 0.03%)</title><rect x="98.9893%" y="1109" width="0.0281%" height="15" fill="rgb(215,5,16)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1119.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.03%)</title><rect x="98.9893%" y="1093" width="0.0281%" height="15" fill="rgb(252,82,33)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1103.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Local::pin (1 samples, 0.03%)</title><rect x="98.9893%" y="1077" width="0.0281%" height="15" fill="rgb(247,213,44)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1087.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Global::collect (1 samples, 0.03%)</title><rect x="98.9893%" y="1061" width="0.0281%" height="15" fill="rgb(205,196,44)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1071.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Global::try_advance (1 samples, 0.03%)</title><rect x="98.9893%" y="1045" width="0.0281%" height="15" fill="rgb(237,96,54)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1055.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::epoch::AtomicEpoch::load (1 samples, 0.03%)</title><rect x="98.9893%" y="1029" width="0.0281%" height="15" fill="rgb(230,113,34)" fg:x="3526" fg:w="1"/><text x="99.2393%" y="1039.50"></text></g><g><title>rust-sokoban`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="99.0174%" y="1237" width="0.0561%" height="15" fill="rgb(221,224,12)" fg:x="3527" fg:w="2"/><text x="99.2674%" y="1247.50"></text></g><g><title>rust-sokoban`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="99.0174%" y="1221" width="0.0561%" height="15" fill="rgb(219,112,44)" fg:x="3527" fg:w="2"/><text x="99.2674%" y="1231.50"></text></g><g><title>rust-sokoban`core::ptr::read (1 samples, 0.03%)</title><rect x="99.0455%" y="1205" width="0.0281%" height="15" fill="rgb(210,31,13)" fg:x="3528" fg:w="1"/><text x="99.2955%" y="1215.50"></text></g><g><title>rust-sokoban`core::ptr::const_ptr::_&lt;impl *const T&gt;::as_ref (1 samples, 0.03%)</title><rect x="99.2139%" y="1125" width="0.0281%" height="15" fill="rgb(230,25,16)" fg:x="3534" fg:w="1"/><text x="99.4639%" y="1135.50"></text></g><g><title>rust-sokoban`core::mem::replace (1 samples, 0.03%)</title><rect x="99.2701%" y="1077" width="0.0281%" height="15" fill="rgb(246,108,53)" fg:x="3536" fg:w="1"/><text x="99.5201%" y="1087.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::set (4 samples, 0.11%)</title><rect x="99.2420%" y="1109" width="0.1123%" height="15" fill="rgb(241,172,50)" fg:x="3535" fg:w="4"/><text x="99.4920%" y="1119.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::replace (4 samples, 0.11%)</title><rect x="99.2420%" y="1093" width="0.1123%" height="15" fill="rgb(235,141,10)" fg:x="3535" fg:w="4"/><text x="99.4920%" y="1103.50"></text></g><g><title>rust-sokoban`core::ptr::read (2 samples, 0.06%)</title><rect x="99.2981%" y="1077" width="0.0561%" height="15" fill="rgb(220,174,43)" fg:x="3537" fg:w="2"/><text x="99.5481%" y="1087.50"></text></g><g><title>rust-sokoban`core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (6 samples, 0.17%)</title><rect x="99.2139%" y="1157" width="0.1684%" height="15" fill="rgb(215,181,40)" fg:x="3534" fg:w="6"/><text x="99.4639%" y="1167.50"></text></g><g><title>rust-sokoban`&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (6 samples, 0.17%)</title><rect x="99.2139%" y="1141" width="0.1684%" height="15" fill="rgb(230,97,2)" fg:x="3534" fg:w="6"/><text x="99.4639%" y="1151.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Local::unpin (5 samples, 0.14%)</title><rect x="99.2420%" y="1125" width="0.1404%" height="15" fill="rgb(211,25,27)" fg:x="3535" fg:w="5"/><text x="99.4920%" y="1135.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::epoch::AtomicEpoch::store (1 samples, 0.03%)</title><rect x="99.3543%" y="1109" width="0.0281%" height="15" fill="rgb(230,87,26)" fg:x="3539" fg:w="1"/><text x="99.6043%" y="1119.50"></text></g><g><title>rust-sokoban`core::sync::atomic::AtomicUsize::store (1 samples, 0.03%)</title><rect x="99.3543%" y="1093" width="0.0281%" height="15" fill="rgb(227,160,17)" fg:x="3539" fg:w="1"/><text x="99.6043%" y="1103.50"></text></g><g><title>rust-sokoban`core::sync::atomic::atomic_store (1 samples, 0.03%)</title><rect x="99.3543%" y="1077" width="0.0281%" height="15" fill="rgb(244,85,34)" fg:x="3539" fg:w="1"/><text x="99.6043%" y="1087.50"></text></g><g><title>rust-sokoban`core::result::Result&lt;T,E&gt;::unwrap_or_else (2 samples, 0.06%)</title><rect x="99.3824%" y="1125" width="0.0561%" height="15" fill="rgb(207,70,0)" fg:x="3540" fg:w="2"/><text x="99.6324%" y="1135.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::is_pinned (3 samples, 0.08%)</title><rect x="99.3824%" y="1157" width="0.0842%" height="15" fill="rgb(223,129,7)" fg:x="3540" fg:w="3"/><text x="99.6324%" y="1167.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle (3 samples, 0.08%)</title><rect x="99.3824%" y="1141" width="0.0842%" height="15" fill="rgb(246,105,7)" fg:x="3540" fg:w="3"/><text x="99.6324%" y="1151.50"></text></g><g><title>rust-sokoban`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="99.4385%" y="1125" width="0.0281%" height="15" fill="rgb(215,154,42)" fg:x="3542" fg:w="1"/><text x="99.6885%" y="1135.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle::_{{closure}} (1 samples, 0.03%)</title><rect x="99.4385%" y="1109" width="0.0281%" height="15" fill="rgb(220,215,30)" fg:x="3542" fg:w="1"/><text x="99.6885%" y="1119.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::is_pinned::_{{closure}} (1 samples, 0.03%)</title><rect x="99.4385%" y="1093" width="0.0281%" height="15" fill="rgb(228,81,51)" fg:x="3542" fg:w="1"/><text x="99.6885%" y="1103.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Local::is_pinned (1 samples, 0.03%)</title><rect x="99.4385%" y="1077" width="0.0281%" height="15" fill="rgb(247,71,54)" fg:x="3542" fg:w="1"/><text x="99.6885%" y="1087.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::set (2 samples, 0.06%)</title><rect x="99.5227%" y="1045" width="0.0561%" height="15" fill="rgb(234,176,34)" fg:x="3545" fg:w="2"/><text x="99.7727%" y="1055.50"></text></g><g><title>rust-sokoban`core::cell::Cell&lt;T&gt;::replace (2 samples, 0.06%)</title><rect x="99.5227%" y="1029" width="0.0561%" height="15" fill="rgb(241,103,54)" fg:x="3545" fg:w="2"/><text x="99.7727%" y="1039.50"></text></g><g><title>rust-sokoban`core::ptr::write (1 samples, 0.03%)</title><rect x="99.5508%" y="1013" width="0.0281%" height="15" fill="rgb(228,22,34)" fg:x="3546" fg:w="1"/><text x="99.8008%" y="1023.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.03%)</title><rect x="99.5789%" y="1045" width="0.0281%" height="15" fill="rgb(241,179,48)" fg:x="3547" fg:w="1"/><text x="99.8289%" y="1055.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::find_map (31 samples, 0.87%)</title><rect x="98.7647%" y="1301" width="0.8703%" height="15" fill="rgb(235,167,37)" fg:x="3518" fg:w="31"/><text x="99.0147%" y="1311.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.87%)</title><rect x="98.7647%" y="1285" width="0.8703%" height="15" fill="rgb(213,109,30)" fg:x="3518" fg:w="31"/><text x="99.0147%" y="1295.50"></text></g><g><title>rust-sokoban`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.87%)</title><rect x="98.7647%" y="1269" width="0.8703%" height="15" fill="rgb(222,172,16)" fg:x="3518" fg:w="31"/><text x="99.0147%" y="1279.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.87%)</title><rect x="98.7647%" y="1253" width="0.8703%" height="15" fill="rgb(233,192,5)" fg:x="3518" fg:w="31"/><text x="99.0147%" y="1263.50"></text></g><g><title>rust-sokoban`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.56%)</title><rect x="99.0736%" y="1237" width="0.5615%" height="15" fill="rgb(247,189,41)" fg:x="3529" fg:w="20"/><text x="99.3236%" y="1247.50"></text></g><g><title>rust-sokoban`core::iter::adapters::filter::filter_try_fold::_{{closure}} (20 samples, 0.56%)</title><rect x="99.0736%" y="1221" width="0.5615%" height="15" fill="rgb(218,134,47)" fg:x="3529" fg:w="20"/><text x="99.3236%" y="1231.50"></text></g><g><title>rust-sokoban`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (20 samples, 0.56%)</title><rect x="99.0736%" y="1205" width="0.5615%" height="15" fill="rgb(216,29,3)" fg:x="3529" fg:w="20"/><text x="99.3236%" y="1215.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::steal::_{{closure}} (15 samples, 0.42%)</title><rect x="99.2139%" y="1189" width="0.4211%" height="15" fill="rgb(246,140,12)" fg:x="3534" fg:w="15"/><text x="99.4639%" y="1199.50"></text></g><g><title>rust-sokoban`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (15 samples, 0.42%)</title><rect x="99.2139%" y="1173" width="0.4211%" height="15" fill="rgb(230,136,11)" fg:x="3534" fg:w="15"/><text x="99.4639%" y="1183.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::pin (6 samples, 0.17%)</title><rect x="99.4666%" y="1157" width="0.1684%" height="15" fill="rgb(247,22,47)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1167.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle (6 samples, 0.17%)</title><rect x="99.4666%" y="1141" width="0.1684%" height="15" fill="rgb(218,84,22)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1151.50"></text></g><g><title>rust-sokoban`std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.17%)</title><rect x="99.4666%" y="1125" width="0.1684%" height="15" fill="rgb(216,87,39)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1135.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::with_handle::_{{closure}} (6 samples, 0.17%)</title><rect x="99.4666%" y="1109" width="0.1684%" height="15" fill="rgb(221,178,8)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1119.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::default::pin::_{{closure}} (6 samples, 0.17%)</title><rect x="99.4666%" y="1093" width="0.1684%" height="15" fill="rgb(230,42,11)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1103.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::collector::LocalHandle::pin (6 samples, 0.17%)</title><rect x="99.4666%" y="1077" width="0.1684%" height="15" fill="rgb(237,229,4)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1087.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Local::pin (6 samples, 0.17%)</title><rect x="99.4666%" y="1061" width="0.1684%" height="15" fill="rgb(222,31,33)" fg:x="3543" fg:w="6"/><text x="99.7166%" y="1071.50"></text></g><g><title>rust-sokoban`crossbeam_epoch::internal::Local::global (1 samples, 0.03%)</title><rect x="99.6070%" y="1045" width="0.0281%" height="15" fill="rgb(210,17,39)" fg:x="3548" fg:w="1"/><text x="99.8570%" y="1055.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::or_else (33 samples, 0.93%)</title><rect x="98.7367%" y="1349" width="0.9264%" height="15" fill="rgb(244,93,20)" fg:x="3517" fg:w="33"/><text x="98.9867%" y="1359.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::wait_until_cold::_{{closure}} (33 samples, 0.93%)</title><rect x="98.7367%" y="1333" width="0.9264%" height="15" fill="rgb(210,40,47)" fg:x="3517" fg:w="33"/><text x="98.9867%" y="1343.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::steal (32 samples, 0.90%)</title><rect x="98.7647%" y="1317" width="0.8984%" height="15" fill="rgb(239,211,47)" fg:x="3518" fg:w="32"/><text x="99.0147%" y="1327.50"></text></g><g><title>rust-sokoban`crossbeam_deque::deque::Worker&lt;T&gt;::is_empty (1 samples, 0.03%)</title><rect x="99.6350%" y="1301" width="0.0281%" height="15" fill="rgb(251,223,49)" fg:x="3549" fg:w="1"/><text x="99.8850%" y="1311.50"></text></g><g><title>rust-sokoban`&lt;&amp;L as rayon_core::latch::Latch&gt;::set (1 samples, 0.03%)</title><rect x="99.6631%" y="1301" width="0.0281%" height="15" fill="rgb(221,149,5)" fg:x="3550" fg:w="1"/><text x="99.9131%" y="1311.50"></text></g><g><title>rust-sokoban`&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (1 samples, 0.03%)</title><rect x="99.6631%" y="1285" width="0.0281%" height="15" fill="rgb(219,224,51)" fg:x="3550" fg:w="1"/><text x="99.9131%" y="1295.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (1 samples, 0.03%)</title><rect x="99.6631%" y="1269" width="0.0281%" height="15" fill="rgb(223,7,8)" fg:x="3550" fg:w="1"/><text x="99.9131%" y="1279.50"></text></g><g><title>rust-sokoban`core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="99.6912%" y="837" width="0.0281%" height="15" fill="rgb(241,217,22)" fg:x="3551" fg:w="1"/><text x="99.9412%" y="847.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::execute (3 samples, 0.08%)</title><rect x="99.6631%" y="1349" width="0.0842%" height="15" fill="rgb(248,209,0)" fg:x="3550" fg:w="3"/><text x="99.9131%" y="1359.50"></text></g><g><title>rust-sokoban`rayon_core::job::JobRef::execute (3 samples, 0.08%)</title><rect x="99.6631%" y="1333" width="0.0842%" height="15" fill="rgb(217,205,4)" fg:x="3550" fg:w="3"/><text x="99.9131%" y="1343.50"></text></g><g><title>rust-sokoban`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3 samples, 0.08%)</title><rect x="99.6631%" y="1317" width="0.0842%" height="15" fill="rgb(228,124,39)" fg:x="3550" fg:w="3"/><text x="99.9131%" y="1327.50"></text></g><g><title>rust-sokoban`rayon_core::unwind::halt_unwinding (2 samples, 0.06%)</title><rect x="99.6912%" y="1301" width="0.0561%" height="15" fill="rgb(250,116,42)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1311.50"></text></g><g><title>rust-sokoban`std::panic::catch_unwind (2 samples, 0.06%)</title><rect x="99.6912%" y="1285" width="0.0561%" height="15" fill="rgb(223,202,9)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1295.50"></text></g><g><title>rust-sokoban`std::panicking::try (2 samples, 0.06%)</title><rect x="99.6912%" y="1269" width="0.0561%" height="15" fill="rgb(242,222,40)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1279.50"></text></g><g><title>rust-sokoban`__rust_try (2 samples, 0.06%)</title><rect x="99.6912%" y="1253" width="0.0561%" height="15" fill="rgb(229,99,46)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1263.50"></text></g><g><title>rust-sokoban`std::panicking::try::do_call (2 samples, 0.06%)</title><rect x="99.6912%" y="1237" width="0.0561%" height="15" fill="rgb(225,56,46)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1247.50"></text></g><g><title>rust-sokoban`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.06%)</title><rect x="99.6912%" y="1221" width="0.0561%" height="15" fill="rgb(227,94,5)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1231.50"></text></g><g><title>rust-sokoban`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6912%" y="1205" width="0.0561%" height="15" fill="rgb(205,112,38)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1215.50"></text></g><g><title>rust-sokoban`rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6912%" y="1189" width="0.0561%" height="15" fill="rgb(231,133,46)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1199.50"></text></g><g><title>rust-sokoban`rayon_core::thread_pool::ThreadPool::install::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6912%" y="1173" width="0.0561%" height="15" fill="rgb(217,16,9)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1183.50"></text></g><g><title>rust-sokoban`shred::dispatch::dispatcher::Dispatcher::dispatch_par::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6912%" y="1157" width="0.0561%" height="15" fill="rgb(249,173,9)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1167.50"></text></g><g><title>rust-sokoban`shred::dispatch::stage::Stage::execute (2 samples, 0.06%)</title><rect x="99.6912%" y="1141" width="0.0561%" height="15" fill="rgb(205,163,53)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1151.50"></text></g><g><title>rust-sokoban`rayon::iter::ParallelIterator::for_each (2 samples, 0.06%)</title><rect x="99.6912%" y="1125" width="0.0561%" height="15" fill="rgb(217,54,41)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1135.50"></text></g><g><title>rust-sokoban`rayon::iter::for_each::for_each (2 samples, 0.06%)</title><rect x="99.6912%" y="1109" width="0.0561%" height="15" fill="rgb(228,216,12)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1119.50"></text></g><g><title>rust-sokoban`&lt;rayon::slice::IterMut&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (2 samples, 0.06%)</title><rect x="99.6912%" y="1093" width="0.0561%" height="15" fill="rgb(244,228,15)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1103.50"></text></g><g><title>rust-sokoban`rayon::iter::plumbing::bridge (2 samples, 0.06%)</title><rect x="99.6912%" y="1077" width="0.0561%" height="15" fill="rgb(221,176,53)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1087.50"></text></g><g><title>rust-sokoban`&lt;rayon::slice::IterMut&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (2 samples, 0.06%)</title><rect x="99.6912%" y="1061" width="0.0561%" height="15" fill="rgb(205,94,34)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1071.50"></text></g><g><title>rust-sokoban`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (2 samples, 0.06%)</title><rect x="99.6912%" y="1045" width="0.0561%" height="15" fill="rgb(213,110,48)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1055.50"></text></g><g><title>rust-sokoban`rayon::iter::plumbing::bridge_producer_consumer (2 samples, 0.06%)</title><rect x="99.6912%" y="1029" width="0.0561%" height="15" fill="rgb(236,142,28)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1039.50"></text></g><g><title>rust-sokoban`rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.06%)</title><rect x="99.6912%" y="1013" width="0.0561%" height="15" fill="rgb(225,135,29)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1023.50"></text></g><g><title>rust-sokoban`rayon::iter::plumbing::Producer::fold_with (2 samples, 0.06%)</title><rect x="99.6912%" y="997" width="0.0561%" height="15" fill="rgb(252,45,31)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="1007.50"></text></g><g><title>rust-sokoban`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.06%)</title><rect x="99.6912%" y="981" width="0.0561%" height="15" fill="rgb(211,187,50)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="991.50"></text></g><g><title>rust-sokoban`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2 samples, 0.06%)</title><rect x="99.6912%" y="965" width="0.0561%" height="15" fill="rgb(229,109,7)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="975.50"></text></g><g><title>rust-sokoban`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.06%)</title><rect x="99.6912%" y="949" width="0.0561%" height="15" fill="rgb(251,131,51)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="959.50"></text></g><g><title>rust-sokoban`shred::dispatch::stage::Stage::execute::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6912%" y="933" width="0.0561%" height="15" fill="rgb(251,180,35)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="943.50"></text></g><g><title>rust-sokoban`&lt;T as shred::system::RunNow&gt;::run_now (2 samples, 0.06%)</title><rect x="99.6912%" y="917" width="0.0561%" height="15" fill="rgb(211,46,32)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="927.50"></text></g><g><title>rust-sokoban`&lt;rust_sokoban::systems::input_system::InputSystem as shred::system::System&gt;::run (2 samples, 0.06%)</title><rect x="99.6912%" y="901" width="0.0561%" height="15" fill="rgb(248,123,17)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="911.50"></text></g><g><title>rust-sokoban`&lt;specs::join::JoinIter&lt;J&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="99.6912%" y="885" width="0.0561%" height="15" fill="rgb(227,141,18)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="895.50"></text></g><g><title>rust-sokoban`&lt;hibitset::iter::BitIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="99.6912%" y="869" width="0.0561%" height="15" fill="rgb(216,102,9)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="879.50"></text></g><g><title>rust-sokoban`hibitset::iter::BitIter&lt;T&gt;::handle_level (2 samples, 0.06%)</title><rect x="99.6912%" y="853" width="0.0561%" height="15" fill="rgb(253,47,13)" fg:x="3551" fg:w="2"/><text x="99.9412%" y="863.50"></text></g><g><title>rust-sokoban`hibitset::BitSetLike::get_from_layer (1 samples, 0.03%)</title><rect x="99.7193%" y="837" width="0.0281%" height="15" fill="rgb(226,93,23)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="847.50"></text></g><g><title>rust-sokoban`&lt;hibitset::ops::BitSetAnd&lt;A,B&gt; as hibitset::BitSetLike&gt;::layer2 (1 samples, 0.03%)</title><rect x="99.7193%" y="821" width="0.0281%" height="15" fill="rgb(247,104,17)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="831.50"></text></g><g><title>rust-sokoban`&lt;&amp;T as hibitset::BitSetLike&gt;::layer2 (1 samples, 0.03%)</title><rect x="99.7193%" y="805" width="0.0281%" height="15" fill="rgb(233,203,26)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="815.50"></text></g><g><title>rust-sokoban`&lt;hibitset::BitSet as hibitset::BitSetLike&gt;::layer2 (1 samples, 0.03%)</title><rect x="99.7193%" y="789" width="0.0281%" height="15" fill="rgb(244,98,49)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="799.50"></text></g><g><title>rust-sokoban`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="99.7193%" y="773" width="0.0281%" height="15" fill="rgb(235,134,22)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="783.50"></text></g><g><title>rust-sokoban`core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="99.7193%" y="757" width="0.0281%" height="15" fill="rgb(221,70,32)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="767.50"></text></g><g><title>rust-sokoban`core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="99.7193%" y="741" width="0.0281%" height="15" fill="rgb(238,15,50)" fg:x="3552" fg:w="1"/><text x="99.9693%" y="751.50"></text></g><g><title>rust-sokoban`&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (41 samples, 1.15%)</title><rect x="98.7367%" y="1429" width="1.1510%" height="15" fill="rgb(215,221,48)" fg:x="3517" fg:w="41"/><text x="98.9867%" y="1439.50"></text></g><g><title>rust-sokoban`rayon_core::registry::ThreadBuilder::run (41 samples, 1.15%)</title><rect x="98.7367%" y="1413" width="1.1510%" height="15" fill="rgb(236,73,3)" fg:x="3517" fg:w="41"/><text x="98.9867%" y="1423.50"></text></g><g><title>rust-sokoban`rayon_core::registry::main_loop (41 samples, 1.15%)</title><rect x="98.7367%" y="1397" width="1.1510%" height="15" fill="rgb(250,107,11)" fg:x="3517" fg:w="41"/><text x="98.9867%" y="1407.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::wait_until (41 samples, 1.15%)</title><rect x="98.7367%" y="1381" width="1.1510%" height="15" fill="rgb(242,39,14)" fg:x="3517" fg:w="41"/><text x="98.9867%" y="1391.50"></text></g><g><title>rust-sokoban`rayon_core::registry::WorkerThread::wait_until_cold (41 samples, 1.15%)</title><rect x="98.7367%" y="1365" width="1.1510%" height="15" fill="rgb(248,164,37)" fg:x="3517" fg:w="41"/><text x="98.9867%" y="1375.50"></text></g><g><title>rust-sokoban`rayon_core::sleep::Sleep::no_work_found (5 samples, 0.14%)</title><rect x="99.7473%" y="1349" width="0.1404%" height="15" fill="rgb(217,60,12)" fg:x="3553" fg:w="5"/><text x="99.9973%" y="1359.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (5 samples, 0.14%)</title><rect x="99.7473%" y="1333" width="0.1404%" height="15" fill="rgb(240,125,29)" fg:x="3553" fg:w="5"/><text x="99.9973%" y="1343.50"></text></g><g><title>rust-sokoban`gilrs::ff::server::combine_and_play (1 samples, 0.03%)</title><rect x="99.8877%" y="1397" width="0.0281%" height="15" fill="rgb(208,207,28)" fg:x="3558" fg:w="1"/><text x="100.1377%" y="1407.50"></text></g><g><title>rust-sokoban`&lt;&amp;mut vec_map::VecMap&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="99.8877%" y="1381" width="0.0281%" height="15" fill="rgb(209,159,27)" fg:x="3558" fg:w="1"/><text x="100.1377%" y="1391.50"></text></g><g><title>rust-sokoban`vec_map::VecMap&lt;V&gt;::iter_mut (1 samples, 0.03%)</title><rect x="99.8877%" y="1365" width="0.0281%" height="15" fill="rgb(251,176,53)" fg:x="3558" fg:w="1"/><text x="100.1377%" y="1375.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="99.8877%" y="1349" width="0.0281%" height="15" fill="rgb(211,85,7)" fg:x="3558" fg:w="1"/><text x="100.1377%" y="1359.50"></text></g><g><title>rust-sokoban`core::slice::_&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="99.8877%" y="1333" width="0.0281%" height="15" fill="rgb(216,64,54)" fg:x="3558" fg:w="1"/><text x="100.1377%" y="1343.50"></text></g><g><title>libsystem_c.dylib`nanosleep (2 samples, 0.06%)</title><rect x="99.9158%" y="1381" width="0.0561%" height="15" fill="rgb(217,54,24)" fg:x="3559" fg:w="2"/><text x="100.1658%" y="1391.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (1 samples, 0.03%)</title><rect x="99.9439%" y="1365" width="0.0281%" height="15" fill="rgb(208,206,53)" fg:x="3560" fg:w="1"/><text x="100.1939%" y="1375.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.03%)</title><rect x="99.9439%" y="1349" width="0.0281%" height="15" fill="rgb(251,74,39)" fg:x="3560" fg:w="1"/><text x="100.1939%" y="1359.50"></text></g><g><title>all (3,562 samples, 100%)</title><rect x="0.0000%" y="1637" width="100.0000%" height="15" fill="rgb(226,47,5)" fg:x="0" fg:w="3562"/><text x="0.2500%" y="1647.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (133 samples, 3.73%)</title><rect x="96.2661%" y="1621" width="3.7339%" height="15" fill="rgb(234,111,33)" fg:x="3429" fg:w="133"/><text x="96.5161%" y="1631.50">libs..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (133 samples, 3.73%)</title><rect x="96.2661%" y="1605" width="3.7339%" height="15" fill="rgb(251,14,10)" fg:x="3429" fg:w="133"/><text x="96.5161%" y="1615.50">libs..</text></g><g><title>rust-sokoban`std::sys::unix::thread::Thread::new::thread_start (45 samples, 1.26%)</title><rect x="98.7367%" y="1589" width="1.2633%" height="15" fill="rgb(232,43,0)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1599.50"></text></g><g><title>rust-sokoban`core::ops::function::FnOnce::call_once{{vtable.shim}} (45 samples, 1.26%)</title><rect x="98.7367%" y="1573" width="1.2633%" height="15" fill="rgb(222,68,43)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1583.50"></text></g><g><title>rust-sokoban`std::thread::Builder::spawn_unchecked::_{{closure}} (45 samples, 1.26%)</title><rect x="98.7367%" y="1557" width="1.2633%" height="15" fill="rgb(217,24,23)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1567.50"></text></g><g><title>rust-sokoban`std::panic::catch_unwind (45 samples, 1.26%)</title><rect x="98.7367%" y="1541" width="1.2633%" height="15" fill="rgb(229,209,14)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1551.50"></text></g><g><title>rust-sokoban`std::panicking::try (45 samples, 1.26%)</title><rect x="98.7367%" y="1525" width="1.2633%" height="15" fill="rgb(250,149,48)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1535.50"></text></g><g><title>rust-sokoban`__rust_try (45 samples, 1.26%)</title><rect x="98.7367%" y="1509" width="1.2633%" height="15" fill="rgb(210,120,37)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1519.50"></text></g><g><title>rust-sokoban`std::panicking::try::do_call (45 samples, 1.26%)</title><rect x="98.7367%" y="1493" width="1.2633%" height="15" fill="rgb(210,21,8)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1503.50"></text></g><g><title>rust-sokoban`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 1.26%)</title><rect x="98.7367%" y="1477" width="1.2633%" height="15" fill="rgb(243,145,7)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1487.50"></text></g><g><title>rust-sokoban`std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (45 samples, 1.26%)</title><rect x="98.7367%" y="1461" width="1.2633%" height="15" fill="rgb(238,178,32)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1471.50"></text></g><g><title>rust-sokoban`std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 1.26%)</title><rect x="98.7367%" y="1445" width="1.2633%" height="15" fill="rgb(222,4,10)" fg:x="3517" fg:w="45"/><text x="98.9867%" y="1455.50"></text></g><g><title>rust-sokoban`gilrs::ff::server::init::_{{closure}} (4 samples, 0.11%)</title><rect x="99.8877%" y="1429" width="0.1123%" height="15" fill="rgb(239,7,37)" fg:x="3558" fg:w="4"/><text x="100.1377%" y="1439.50"></text></g><g><title>rust-sokoban`gilrs::ff::server::run (4 samples, 0.11%)</title><rect x="99.8877%" y="1413" width="0.1123%" height="15" fill="rgb(215,31,37)" fg:x="3558" fg:w="4"/><text x="100.1377%" y="1423.50"></text></g><g><title>rust-sokoban`std::thread::sleep (3 samples, 0.08%)</title><rect x="99.9158%" y="1397" width="0.0842%" height="15" fill="rgb(224,83,33)" fg:x="3559" fg:w="3"/><text x="100.1658%" y="1407.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (1 samples, 0.03%)</title><rect x="99.9719%" y="1381" width="0.0281%" height="15" fill="rgb(239,55,3)" fg:x="3561" fg:w="1"/><text x="100.2219%" y="1391.50"></text></g></svg></svg>